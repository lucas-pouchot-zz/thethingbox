diff -ruN node-red-src/cgu/cguEN.html node-red-src_ttb/cgu/cguEN.html
--- node-red-src/cgu/cguEN.html	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/cgu/cguEN.html	2017-09-11 12:45:30.999325000 +0000
@@ -0,0 +1,42 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+    <script src="/vendor/jquery/1.10.2.js"></script>
+	<link href="/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen">
+	<link rel="stylesheet" href="/vendor/font-awesome/css/font-awesome.min.css">
+	<link rel="stylesheet" href="/vendor/vendor.css">
+	<link href="/fonts/AvenirNextLTPro.css" rel="stylesheet" type="text/css">
+	<style>
+        body {
+            background-color: white;
+        	color: rgb(150,150,150);
+            font-family: 'Avenir Next LT Pro Regular', sans-serif !important;
+            font-weight: 25px;
+            padding-left: 16px;
+            padding-top: 16px;
+        }
+	</style>
+</head>
+<body>
+	<div class="col-xs-10">
+		<h4>WTFPL PUBLIC LICENSE</h4>
+	</div>
+	<hr></hr>
+	<div class="fluid-row">		         
+        <br/>
+        <br/>
+		Version 2, Copyright (C) 2004 Sam Hocevar <sam@hocevar.net><br/>
+		<br/>
+		http://www.wtfpl.net/
+		<br/>
+ 		Everyone is permitted to copy and distribute verbatim or modified
+ 		copies of this license document, and changing it is allowed as long 
+ 		as the name is changed.<br/>
+ 		<br/>
+        WTFPL PUBLIC LICENSE<br/>
+   		TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION:<br/>
+   		<br/>
+  		0. You just do what the fuck you want to.
+    </div>	
+</body>
+<html>
\ No newline at end of file
diff -ruN node-red-src/cgu/cgu.html node-red-src_ttb/cgu/cgu.html
--- node-red-src/cgu/cgu.html	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/cgu/cgu.html	2017-09-11 12:45:30.997707200 +0000
@@ -0,0 +1,42 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+    <script src="/vendor/jquery/1.10.2.js"></script>
+	<link href="/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen">
+	<link rel="stylesheet" href="/vendor/font-awesome/css/font-awesome.min.css">
+	<link rel="stylesheet" href="/vendor/vendor.css">
+	<link href="/fonts/AvenirNextLTPro.css" rel="stylesheet" type="text/css">
+	<style>
+        body {
+            background-color: white;
+        	color: rgb(150,150,150);
+            font-family: 'Avenir Next LT Pro Regular', sans-serif !important;
+            font-weight: 25px;
+            padding-left: 16px;
+            padding-top: 16px;
+        }
+	</style>
+</head>
+<body>
+	<div class="col-xs-10">
+		<h4>WTFPL PUBLIC LICENSE</h4>
+	</div>
+	<hr></hr>
+	<div class="fluid-row">		         
+        <br/>
+        <br/>
+		Version 2, Copyright (C) 2004 Sam Hocevar <sam@hocevar.net><br/>
+		<br/>
+		http://www.wtfpl.net/
+		<br/>
+ 		Everyone is permitted to copy and distribute verbatim or modified
+ 		copies of this license document, and changing it is allowed as long 
+ 		as the name is changed.<br/>
+ 		<br/>
+        WTFPL PUBLIC LICENSE<br/>
+   		TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION:<br/>
+   		<br/>
+  		0. You just do what the fuck you want to.
+    </div>	
+</body>
+<html>
\ No newline at end of file
diff -ruN node-red-src/CHANGELOG.md node-red-src_ttb/CHANGELOG.md
--- node-red-src/CHANGELOG.md	2017-09-27 10:53:14.548981752 +0000
+++ node-red-src_ttb/CHANGELOG.md	2017-09-26 15:24:23.412402800 +0000
@@ -10,7 +10,6 @@
  - Modify messages in node properties to refer messages.json (#1339)
  - Fix settings.js replacing webSocketVerifyClient by webSocketNodeVerifyClient (#1343)
 
-
 #### 0.17.4: Maintenance Release
 
  - Add request node test case for POSTing 0
diff -ruN node-red-src/editor/async.js node-red-src_ttb/editor/async.js
--- node-red-src/editor/async.js	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/editor/async.js	2017-09-26 15:24:23.842624800 +0000
@@ -0,0 +1,1123 @@
+/*!
+ * async
+ * https://github.com/caolan/async
+ *
+ * Copyright 2010-2014 Caolan McMahon
+ * Released under the MIT license
+ */
+/*jshint onevar: false, indent:4 */
+/*global setImmediate: false, setTimeout: false, console: false */
+(function () {
+
+    var async = {};
+
+    // global on the server, window in the browser
+    var root, previous_async;
+
+    root = this;
+    if (root != null) {
+      previous_async = root.async;
+    }
+
+    async.noConflict = function () {
+        root.async = previous_async;
+        return async;
+    };
+
+    function only_once(fn) {
+        var called = false;
+        return function() {
+            if (called) throw new Error("Callback was already called.");
+            called = true;
+            fn.apply(root, arguments);
+        }
+    }
+
+    //// cross-browser compatiblity functions ////
+
+    var _toString = Object.prototype.toString;
+
+    var _isArray = Array.isArray || function (obj) {
+        return _toString.call(obj) === '[object Array]';
+    };
+
+    var _each = function (arr, iterator) {
+        if (arr.forEach) {
+            return arr.forEach(iterator);
+        }
+        for (var i = 0; i < arr.length; i += 1) {
+            iterator(arr[i], i, arr);
+        }
+    };
+
+    var _map = function (arr, iterator) {
+        if (arr.map) {
+            return arr.map(iterator);
+        }
+        var results = [];
+        _each(arr, function (x, i, a) {
+            results.push(iterator(x, i, a));
+        });
+        return results;
+    };
+
+    var _reduce = function (arr, iterator, memo) {
+        if (arr.reduce) {
+            return arr.reduce(iterator, memo);
+        }
+        _each(arr, function (x, i, a) {
+            memo = iterator(memo, x, i, a);
+        });
+        return memo;
+    };
+
+    var _keys = function (obj) {
+        if (Object.keys) {
+            return Object.keys(obj);
+        }
+        var keys = [];
+        for (var k in obj) {
+            if (obj.hasOwnProperty(k)) {
+                keys.push(k);
+            }
+        }
+        return keys;
+    };
+
+    //// exported async module functions ////
+
+    //// nextTick implementation with browser-compatible fallback ////
+    if (typeof process === 'undefined' || !(process.nextTick)) {
+        if (typeof setImmediate === 'function') {
+            async.nextTick = function (fn) {
+                // not a direct alias for IE10 compatibility
+                setImmediate(fn);
+            };
+            async.setImmediate = async.nextTick;
+        }
+        else {
+            async.nextTick = function (fn) {
+                setTimeout(fn, 0);
+            };
+            async.setImmediate = async.nextTick;
+        }
+    }
+    else {
+        async.nextTick = process.nextTick;
+        if (typeof setImmediate !== 'undefined') {
+            async.setImmediate = function (fn) {
+              // not a direct alias for IE10 compatibility
+              setImmediate(fn);
+            };
+        }
+        else {
+            async.setImmediate = async.nextTick;
+        }
+    }
+
+    async.each = function (arr, iterator, callback) {
+        callback = callback || function () {};
+        if (!arr.length) {
+            return callback();
+        }
+        var completed = 0;
+        _each(arr, function (x) {
+            iterator(x, only_once(done) );
+        });
+        function done(err) {
+          if (err) {
+              callback(err);
+              callback = function () {};
+          }
+          else {
+              completed += 1;
+              if (completed >= arr.length) {
+                  callback();
+              }
+          }
+        }
+    };
+    async.forEach = async.each;
+
+    async.eachSeries = function (arr, iterator, callback) {
+        callback = callback || function () {};
+        if (!arr.length) {
+            return callback();
+        }
+        var completed = 0;
+        var iterate = function () {
+            iterator(arr[completed], function (err) {
+                if (err) {
+                    callback(err);
+                    callback = function () {};
+                }
+                else {
+                    completed += 1;
+                    if (completed >= arr.length) {
+                        callback();
+                    }
+                    else {
+                        iterate();
+                    }
+                }
+            });
+        };
+        iterate();
+    };
+    async.forEachSeries = async.eachSeries;
+
+    async.eachLimit = function (arr, limit, iterator, callback) {
+        var fn = _eachLimit(limit);
+        fn.apply(null, [arr, iterator, callback]);
+    };
+    async.forEachLimit = async.eachLimit;
+
+    var _eachLimit = function (limit) {
+
+        return function (arr, iterator, callback) {
+            callback = callback || function () {};
+            if (!arr.length || limit <= 0) {
+                return callback();
+            }
+            var completed = 0;
+            var started = 0;
+            var running = 0;
+
+            (function replenish () {
+                if (completed >= arr.length) {
+                    return callback();
+                }
+
+                while (running < limit && started < arr.length) {
+                    started += 1;
+                    running += 1;
+                    iterator(arr[started - 1], function (err) {
+                        if (err) {
+                            callback(err);
+                            callback = function () {};
+                        }
+                        else {
+                            completed += 1;
+                            running -= 1;
+                            if (completed >= arr.length) {
+                                callback();
+                            }
+                            else {
+                                replenish();
+                            }
+                        }
+                    });
+                }
+            })();
+        };
+    };
+
+
+    var doParallel = function (fn) {
+        return function () {
+            var args = Array.prototype.slice.call(arguments);
+            return fn.apply(null, [async.each].concat(args));
+        };
+    };
+    var doParallelLimit = function(limit, fn) {
+        return function () {
+            var args = Array.prototype.slice.call(arguments);
+            return fn.apply(null, [_eachLimit(limit)].concat(args));
+        };
+    };
+    var doSeries = function (fn) {
+        return function () {
+            var args = Array.prototype.slice.call(arguments);
+            return fn.apply(null, [async.eachSeries].concat(args));
+        };
+    };
+
+
+    var _asyncMap = function (eachfn, arr, iterator, callback) {
+        arr = _map(arr, function (x, i) {
+            return {index: i, value: x};
+        });
+        if (!callback) {
+            eachfn(arr, function (x, callback) {
+                iterator(x.value, function (err) {
+                    callback(err);
+                });
+            });
+        } else {
+            var results = [];
+            eachfn(arr, function (x, callback) {
+                iterator(x.value, function (err, v) {
+                    results[x.index] = v;
+                    callback(err);
+                });
+            }, function (err) {
+                callback(err, results);
+            });
+        }
+    };
+    async.map = doParallel(_asyncMap);
+    async.mapSeries = doSeries(_asyncMap);
+    async.mapLimit = function (arr, limit, iterator, callback) {
+        return _mapLimit(limit)(arr, iterator, callback);
+    };
+
+    var _mapLimit = function(limit) {
+        return doParallelLimit(limit, _asyncMap);
+    };
+
+    // reduce only has a series version, as doing reduce in parallel won't
+    // work in many situations.
+    async.reduce = function (arr, memo, iterator, callback) {
+        async.eachSeries(arr, function (x, callback) {
+            iterator(memo, x, function (err, v) {
+                memo = v;
+                callback(err);
+            });
+        }, function (err) {
+            callback(err, memo);
+        });
+    };
+    // inject alias
+    async.inject = async.reduce;
+    // foldl alias
+    async.foldl = async.reduce;
+
+    async.reduceRight = function (arr, memo, iterator, callback) {
+        var reversed = _map(arr, function (x) {
+            return x;
+        }).reverse();
+        async.reduce(reversed, memo, iterator, callback);
+    };
+    // foldr alias
+    async.foldr = async.reduceRight;
+
+    var _filter = function (eachfn, arr, iterator, callback) {
+        var results = [];
+        arr = _map(arr, function (x, i) {
+            return {index: i, value: x};
+        });
+        eachfn(arr, function (x, callback) {
+            iterator(x.value, function (v) {
+                if (v) {
+                    results.push(x);
+                }
+                callback();
+            });
+        }, function (err) {
+            callback(_map(results.sort(function (a, b) {
+                return a.index - b.index;
+            }), function (x) {
+                return x.value;
+            }));
+        });
+    };
+    async.filter = doParallel(_filter);
+    async.filterSeries = doSeries(_filter);
+    // select alias
+    async.select = async.filter;
+    async.selectSeries = async.filterSeries;
+
+    var _reject = function (eachfn, arr, iterator, callback) {
+        var results = [];
+        arr = _map(arr, function (x, i) {
+            return {index: i, value: x};
+        });
+        eachfn(arr, function (x, callback) {
+            iterator(x.value, function (v) {
+                if (!v) {
+                    results.push(x);
+                }
+                callback();
+            });
+        }, function (err) {
+            callback(_map(results.sort(function (a, b) {
+                return a.index - b.index;
+            }), function (x) {
+                return x.value;
+            }));
+        });
+    };
+    async.reject = doParallel(_reject);
+    async.rejectSeries = doSeries(_reject);
+
+    var _detect = function (eachfn, arr, iterator, main_callback) {
+        eachfn(arr, function (x, callback) {
+            iterator(x, function (result) {
+                if (result) {
+                    main_callback(x);
+                    main_callback = function () {};
+                }
+                else {
+                    callback();
+                }
+            });
+        }, function (err) {
+            main_callback();
+        });
+    };
+    async.detect = doParallel(_detect);
+    async.detectSeries = doSeries(_detect);
+
+    async.some = function (arr, iterator, main_callback) {
+        async.each(arr, function (x, callback) {
+            iterator(x, function (v) {
+                if (v) {
+                    main_callback(true);
+                    main_callback = function () {};
+                }
+                callback();
+            });
+        }, function (err) {
+            main_callback(false);
+        });
+    };
+    // any alias
+    async.any = async.some;
+
+    async.every = function (arr, iterator, main_callback) {
+        async.each(arr, function (x, callback) {
+            iterator(x, function (v) {
+                if (!v) {
+                    main_callback(false);
+                    main_callback = function () {};
+                }
+                callback();
+            });
+        }, function (err) {
+            main_callback(true);
+        });
+    };
+    // all alias
+    async.all = async.every;
+
+    async.sortBy = function (arr, iterator, callback) {
+        async.map(arr, function (x, callback) {
+            iterator(x, function (err, criteria) {
+                if (err) {
+                    callback(err);
+                }
+                else {
+                    callback(null, {value: x, criteria: criteria});
+                }
+            });
+        }, function (err, results) {
+            if (err) {
+                return callback(err);
+            }
+            else {
+                var fn = function (left, right) {
+                    var a = left.criteria, b = right.criteria;
+                    return a < b ? -1 : a > b ? 1 : 0;
+                };
+                callback(null, _map(results.sort(fn), function (x) {
+                    return x.value;
+                }));
+            }
+        });
+    };
+
+    async.auto = function (tasks, callback) {
+        callback = callback || function () {};
+        var keys = _keys(tasks);
+        var remainingTasks = keys.length
+        if (!remainingTasks) {
+            return callback();
+        }
+
+        var results = {};
+
+        var listeners = [];
+        var addListener = function (fn) {
+            listeners.unshift(fn);
+        };
+        var removeListener = function (fn) {
+            for (var i = 0; i < listeners.length; i += 1) {
+                if (listeners[i] === fn) {
+                    listeners.splice(i, 1);
+                    return;
+                }
+            }
+        };
+        var taskComplete = function () {
+            remainingTasks--
+            _each(listeners.slice(0), function (fn) {
+                fn();
+            });
+        };
+
+        addListener(function () {
+            if (!remainingTasks) {
+                var theCallback = callback;
+                // prevent final callback from calling itself if it errors
+                callback = function () {};
+
+                theCallback(null, results);
+            }
+        });
+
+        _each(keys, function (k) {
+            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];
+            var taskCallback = function (err) {
+                var args = Array.prototype.slice.call(arguments, 1);
+                if (args.length <= 1) {
+                    args = args[0];
+                }
+                if (err) {
+                    var safeResults = {};
+                    _each(_keys(results), function(rkey) {
+                        safeResults[rkey] = results[rkey];
+                    });
+                    safeResults[k] = args;
+                    callback(err, safeResults);
+                    // stop subsequent errors hitting callback multiple times
+                    callback = function () {};
+                }
+                else {
+                    results[k] = args;
+                    async.setImmediate(taskComplete);
+                }
+            };
+            var requires = task.slice(0, Math.abs(task.length - 1)) || [];
+            var ready = function () {
+                return _reduce(requires, function (a, x) {
+                    return (a && results.hasOwnProperty(x));
+                }, true) && !results.hasOwnProperty(k);
+            };
+            if (ready()) {
+                task[task.length - 1](taskCallback, results);
+            }
+            else {
+                var listener = function () {
+                    if (ready()) {
+                        removeListener(listener);
+                        task[task.length - 1](taskCallback, results);
+                    }
+                };
+                addListener(listener);
+            }
+        });
+    };
+
+    async.retry = function(times, task, callback) {
+        var DEFAULT_TIMES = 5;
+        var attempts = [];
+        // Use defaults if times not passed
+        if (typeof times === 'function') {
+            callback = task;
+            task = times;
+            times = DEFAULT_TIMES;
+        }
+        // Make sure times is a number
+        times = parseInt(times, 10) || DEFAULT_TIMES;
+        var wrappedTask = function(wrappedCallback, wrappedResults) {
+            var retryAttempt = function(task, finalAttempt) {
+                return function(seriesCallback) {
+                    task(function(err, result){
+                        seriesCallback(!err || finalAttempt, {err: err, result: result});
+                    }, wrappedResults);
+                };
+            };
+            while (times) {
+                attempts.push(retryAttempt(task, !(times-=1)));
+            }
+            async.series(attempts, function(done, data){
+                data = data[data.length - 1];
+                (wrappedCallback || callback)(data.err, data.result);
+            });
+        }
+        // If a callback is passed, run this as a controll flow
+        return callback ? wrappedTask() : wrappedTask
+    };
+
+    async.waterfall = function (tasks, callback) {
+        callback = callback || function () {};
+        if (!_isArray(tasks)) {
+          var err = new Error('First argument to waterfall must be an array of functions');
+          return callback(err);
+        }
+        if (!tasks.length) {
+            return callback();
+        }
+        var wrapIterator = function (iterator) {
+            return function (err) {
+                if (err) {
+                    callback.apply(null, arguments);
+                    callback = function () {};
+                }
+                else {
+                    var args = Array.prototype.slice.call(arguments, 1);
+                    var next = iterator.next();
+                    if (next) {
+                        args.push(wrapIterator(next));
+                    }
+                    else {
+                        args.push(callback);
+                    }
+                    async.setImmediate(function () {
+                        iterator.apply(null, args);
+                    });
+                }
+            };
+        };
+        wrapIterator(async.iterator(tasks))();
+    };
+
+    var _parallel = function(eachfn, tasks, callback) {
+        callback = callback || function () {};
+        if (_isArray(tasks)) {
+            eachfn.map(tasks, function (fn, callback) {
+                if (fn) {
+                    fn(function (err) {
+                        var args = Array.prototype.slice.call(arguments, 1);
+                        if (args.length <= 1) {
+                            args = args[0];
+                        }
+                        callback.call(null, err, args);
+                    });
+                }
+            }, callback);
+        }
+        else {
+            var results = {};
+            eachfn.each(_keys(tasks), function (k, callback) {
+                tasks[k](function (err) {
+                    var args = Array.prototype.slice.call(arguments, 1);
+                    if (args.length <= 1) {
+                        args = args[0];
+                    }
+                    results[k] = args;
+                    callback(err);
+                });
+            }, function (err) {
+                callback(err, results);
+            });
+        }
+    };
+
+    async.parallel = function (tasks, callback) {
+        _parallel({ map: async.map, each: async.each }, tasks, callback);
+    };
+
+    async.parallelLimit = function(tasks, limit, callback) {
+        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);
+    };
+
+    async.series = function (tasks, callback) {
+        callback = callback || function () {};
+        if (_isArray(tasks)) {
+            async.mapSeries(tasks, function (fn, callback) {
+                if (fn) {
+                    fn(function (err) {
+                        var args = Array.prototype.slice.call(arguments, 1);
+                        if (args.length <= 1) {
+                            args = args[0];
+                        }
+                        callback.call(null, err, args);
+                    });
+                }
+            }, callback);
+        }
+        else {
+            var results = {};
+            async.eachSeries(_keys(tasks), function (k, callback) {
+                tasks[k](function (err) {
+                    var args = Array.prototype.slice.call(arguments, 1);
+                    if (args.length <= 1) {
+                        args = args[0];
+                    }
+                    results[k] = args;
+                    callback(err);
+                });
+            }, function (err) {
+                callback(err, results);
+            });
+        }
+    };
+
+    async.iterator = function (tasks) {
+        var makeCallback = function (index) {
+            var fn = function () {
+                if (tasks.length) {
+                    tasks[index].apply(null, arguments);
+                }
+                return fn.next();
+            };
+            fn.next = function () {
+                return (index < tasks.length - 1) ? makeCallback(index + 1): null;
+            };
+            return fn;
+        };
+        return makeCallback(0);
+    };
+
+    async.apply = function (fn) {
+        var args = Array.prototype.slice.call(arguments, 1);
+        return function () {
+            return fn.apply(
+                null, args.concat(Array.prototype.slice.call(arguments))
+            );
+        };
+    };
+
+    var _concat = function (eachfn, arr, fn, callback) {
+        var r = [];
+        eachfn(arr, function (x, cb) {
+            fn(x, function (err, y) {
+                r = r.concat(y || []);
+                cb(err);
+            });
+        }, function (err) {
+            callback(err, r);
+        });
+    };
+    async.concat = doParallel(_concat);
+    async.concatSeries = doSeries(_concat);
+
+    async.whilst = function (test, iterator, callback) {
+        if (test()) {
+            iterator(function (err) {
+                if (err) {
+                    return callback(err);
+                }
+                async.whilst(test, iterator, callback);
+            });
+        }
+        else {
+            callback();
+        }
+    };
+
+    async.doWhilst = function (iterator, test, callback) {
+        iterator(function (err) {
+            if (err) {
+                return callback(err);
+            }
+            var args = Array.prototype.slice.call(arguments, 1);
+            if (test.apply(null, args)) {
+                async.doWhilst(iterator, test, callback);
+            }
+            else {
+                callback();
+            }
+        });
+    };
+
+    async.until = function (test, iterator, callback) {
+        if (!test()) {
+            iterator(function (err) {
+                if (err) {
+                    return callback(err);
+                }
+                async.until(test, iterator, callback);
+            });
+        }
+        else {
+            callback();
+        }
+    };
+
+    async.doUntil = function (iterator, test, callback) {
+        iterator(function (err) {
+            if (err) {
+                return callback(err);
+            }
+            var args = Array.prototype.slice.call(arguments, 1);
+            if (!test.apply(null, args)) {
+                async.doUntil(iterator, test, callback);
+            }
+            else {
+                callback();
+            }
+        });
+    };
+
+    async.queue = function (worker, concurrency) {
+        if (concurrency === undefined) {
+            concurrency = 1;
+        }
+        function _insert(q, data, pos, callback) {
+          if (!q.started){
+            q.started = true;
+          }
+          if (!_isArray(data)) {
+              data = [data];
+          }
+          if(data.length == 0) {
+             // call drain immediately if there are no tasks
+             return async.setImmediate(function() {
+                 if (q.drain) {
+                     q.drain();
+                 }
+             });
+          }
+          _each(data, function(task) {
+              var item = {
+                  data: task,
+                  callback: typeof callback === 'function' ? callback : null
+              };
+
+              if (pos) {
+                q.tasks.unshift(item);
+              } else {
+                q.tasks.push(item);
+              }
+
+              if (q.saturated && q.tasks.length === q.concurrency) {
+                  q.saturated();
+              }
+              async.setImmediate(q.process);
+          });
+        }
+
+        var workers = 0;
+        var q = {
+            tasks: [],
+            concurrency: concurrency,
+            saturated: null,
+            empty: null,
+            drain: null,
+            started: false,
+            paused: false,
+            push: function (data, callback) {
+              _insert(q, data, false, callback);
+            },
+            kill: function () {
+              q.drain = null;
+              q.tasks = [];
+            },
+            unshift: function (data, callback) {
+              _insert(q, data, true, callback);
+            },
+            process: function () {
+                if (!q.paused && workers < q.concurrency && q.tasks.length) {
+                    var task = q.tasks.shift();
+                    if (q.empty && q.tasks.length === 0) {
+                        q.empty();
+                    }
+                    workers += 1;
+                    var next = function () {
+                        workers -= 1;
+                        if (task.callback) {
+                            task.callback.apply(task, arguments);
+                        }
+                        if (q.drain && q.tasks.length + workers === 0) {
+                            q.drain();
+                        }
+                        q.process();
+                    };
+                    var cb = only_once(next);
+                    worker(task.data, cb);
+                }
+            },
+            length: function () {
+                return q.tasks.length;
+            },
+            running: function () {
+                return workers;
+            },
+            idle: function() {
+                return q.tasks.length + workers === 0;
+            },
+            pause: function () {
+                if (q.paused === true) { return; }
+                q.paused = true;
+                q.process();
+            },
+            resume: function () {
+                if (q.paused === false) { return; }
+                q.paused = false;
+                q.process();
+            }
+        };
+        return q;
+    };
+    
+    async.priorityQueue = function (worker, concurrency) {
+        
+        function _compareTasks(a, b){
+          return a.priority - b.priority;
+        };
+        
+        function _binarySearch(sequence, item, compare) {
+          var beg = -1,
+              end = sequence.length - 1;
+          while (beg < end) {
+            var mid = beg + ((end - beg + 1) >>> 1);
+            if (compare(item, sequence[mid]) >= 0) {
+              beg = mid;
+            } else {
+              end = mid - 1;
+            }
+          }
+          return beg;
+        }
+        
+        function _insert(q, data, priority, callback) {
+          if (!q.started){
+            q.started = true;
+          }
+          if (!_isArray(data)) {
+              data = [data];
+          }
+          if(data.length == 0) {
+             // call drain immediately if there are no tasks
+             return async.setImmediate(function() {
+                 if (q.drain) {
+                     q.drain();
+                 }
+             });
+          }
+          _each(data, function(task) {
+              var item = {
+                  data: task,
+                  priority: priority,
+                  callback: typeof callback === 'function' ? callback : null
+              };
+              
+              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);
+
+              if (q.saturated && q.tasks.length === q.concurrency) {
+                  q.saturated();
+              }
+              async.setImmediate(q.process);
+          });
+        }
+        
+        // Start with a normal queue
+        var q = async.queue(worker, concurrency);
+        
+        // Override push to accept second parameter representing priority
+        q.push = function (data, priority, callback) {
+          _insert(q, data, priority, callback);
+        };
+        
+        // Remove unshift function
+        delete q.unshift;
+
+        return q;
+    };
+
+    async.cargo = function (worker, payload) {
+        var working     = false,
+            tasks       = [];
+
+        var cargo = {
+            tasks: tasks,
+            payload: payload,
+            saturated: null,
+            empty: null,
+            drain: null,
+            drained: true,
+            push: function (data, callback) {
+                if (!_isArray(data)) {
+                    data = [data];
+                }
+                _each(data, function(task) {
+                    tasks.push({
+                        data: task,
+                        callback: typeof callback === 'function' ? callback : null
+                    });
+                    cargo.drained = false;
+                    if (cargo.saturated && tasks.length === payload) {
+                        cargo.saturated();
+                    }
+                });
+                async.setImmediate(cargo.process);
+            },
+            process: function process() {
+                if (working) return;
+                if (tasks.length === 0) {
+                    if(cargo.drain && !cargo.drained) cargo.drain();
+                    cargo.drained = true;
+                    return;
+                }
+
+                var ts = typeof payload === 'number'
+                            ? tasks.splice(0, payload)
+                            : tasks.splice(0, tasks.length);
+
+                var ds = _map(ts, function (task) {
+                    return task.data;
+                });
+
+                if(cargo.empty) cargo.empty();
+                working = true;
+                worker(ds, function () {
+                    working = false;
+
+                    var args = arguments;
+                    _each(ts, function (data) {
+                        if (data.callback) {
+                            data.callback.apply(null, args);
+                        }
+                    });
+
+                    process();
+                });
+            },
+            length: function () {
+                return tasks.length;
+            },
+            running: function () {
+                return working;
+            }
+        };
+        return cargo;
+    };
+
+    var _console_fn = function (name) {
+        return function (fn) {
+            var args = Array.prototype.slice.call(arguments, 1);
+            fn.apply(null, args.concat([function (err) {
+                var args = Array.prototype.slice.call(arguments, 1);
+                if (typeof console !== 'undefined') {
+                    if (err) {
+                        if (console.error) {
+                            console.error(err);
+                        }
+                    }
+                    else if (console[name]) {
+                        _each(args, function (x) {
+                            console[name](x);
+                        });
+                    }
+                }
+            }]));
+        };
+    };
+    async.log = _console_fn('log');
+    async.dir = _console_fn('dir');
+    /*async.info = _console_fn('info');
+    async.warn = _console_fn('warn');
+    async.error = _console_fn('error');*/
+
+    async.memoize = function (fn, hasher) {
+        var memo = {};
+        var queues = {};
+        hasher = hasher || function (x) {
+            return x;
+        };
+        var memoized = function () {
+            var args = Array.prototype.slice.call(arguments);
+            var callback = args.pop();
+            var key = hasher.apply(null, args);
+            if (key in memo) {
+                async.nextTick(function () {
+                    callback.apply(null, memo[key]);
+                });
+            }
+            else if (key in queues) {
+                queues[key].push(callback);
+            }
+            else {
+                queues[key] = [callback];
+                fn.apply(null, args.concat([function () {
+                    memo[key] = arguments;
+                    var q = queues[key];
+                    delete queues[key];
+                    for (var i = 0, l = q.length; i < l; i++) {
+                      q[i].apply(null, arguments);
+                    }
+                }]));
+            }
+        };
+        memoized.memo = memo;
+        memoized.unmemoized = fn;
+        return memoized;
+    };
+
+    async.unmemoize = function (fn) {
+      return function () {
+        return (fn.unmemoized || fn).apply(null, arguments);
+      };
+    };
+
+    async.times = function (count, iterator, callback) {
+        var counter = [];
+        for (var i = 0; i < count; i++) {
+            counter.push(i);
+        }
+        return async.map(counter, iterator, callback);
+    };
+
+    async.timesSeries = function (count, iterator, callback) {
+        var counter = [];
+        for (var i = 0; i < count; i++) {
+            counter.push(i);
+        }
+        return async.mapSeries(counter, iterator, callback);
+    };
+
+    async.seq = function (/* functions... */) {
+        var fns = arguments;
+        return function () {
+            var that = this;
+            var args = Array.prototype.slice.call(arguments);
+            var callback = args.pop();
+            async.reduce(fns, args, function (newargs, fn, cb) {
+                fn.apply(that, newargs.concat([function () {
+                    var err = arguments[0];
+                    var nextargs = Array.prototype.slice.call(arguments, 1);
+                    cb(err, nextargs);
+                }]))
+            },
+            function (err, results) {
+                callback.apply(that, [err].concat(results));
+            });
+        };
+    };
+
+    async.compose = function (/* functions... */) {
+      return async.seq.apply(null, Array.prototype.reverse.call(arguments));
+    };
+
+    var _applyEach = function (eachfn, fns /*args...*/) {
+        var go = function () {
+            var that = this;
+            var args = Array.prototype.slice.call(arguments);
+            var callback = args.pop();
+            return eachfn(fns, function (fn, cb) {
+                fn.apply(that, args.concat([cb]));
+            },
+            callback);
+        };
+        if (arguments.length > 2) {
+            var args = Array.prototype.slice.call(arguments, 2);
+            return go.apply(this, args);
+        }
+        else {
+            return go;
+        }
+    };
+    async.applyEach = doParallel(_applyEach);
+    async.applyEachSeries = doSeries(_applyEach);
+
+    async.forever = function (fn, callback) {
+        function next(err) {
+            if (err) {
+                if (callback) {
+                    return callback(err);
+                }
+                throw err;
+            }
+            fn(next);
+        }
+        next();
+    };
+
+    // Node.js
+    if (typeof module !== 'undefined' && module.exports) {
+        module.exports = async;
+    }
+    // AMD / RequireJS
+    else if (typeof define !== 'undefined' && define.amd) {
+        define([], function () {
+            return async;
+        });
+    }
+    // included directly via <script> tag
+    else {
+        root.async = async;
+    }
+
+}());
Binary files node-red-src/editor/favicon.ico and node-red-src_ttb/editor/favicon.ico differ
Binary files node-red-src/editor/fonts/AvenirNextLTPro-Bold.woff and node-red-src_ttb/editor/fonts/AvenirNextLTPro-Bold.woff differ
diff -ruN node-red-src/editor/fonts/AvenirNextLTPro.css node-red-src_ttb/editor/fonts/AvenirNextLTPro.css
--- node-red-src/editor/fonts/AvenirNextLTPro.css	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/editor/fonts/AvenirNextLTPro.css	2017-09-11 12:45:30.835653400 +0000
@@ -0,0 +1,136 @@
+/* #### Generated By: http://www.cufonfonts.com #### */
+
+@font-face {
+font-family: 'Avenir Next LT Pro Condensed';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Condensed'), url('AvenirNextLTPro-Cn.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Demi';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Demi'), url('AvenirNextLTPro-Demi.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Demi Condensed';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Demi Condensed'), url('AvenirNextLTPro-DemiCn.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Heavy Condensed';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Heavy Condensed'), url('AvenirNextLTPro-HeavyCn.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Medium Condensed';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Medium Condensed'), url('AvenirNextLTPro-MediumCn.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Regular';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Regular'), url('AvenirNextLTPro-Regular.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Ultra Light Condensed';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Ultra Light Condensed'), url('AvenirNextLTPro-UltLtCn.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Bold';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Bold'), url('AvenirNextLTPro-Bold.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Bold Condensed';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Bold Condensed'), url('AvenirNextLTPro-BoldCn.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Bold Condensed Italic';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Bold Condensed Italic'), url('AvenirNextLTPro-BoldCnIt.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Condensed Italic';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Condensed Italic'), url('AvenirNextLTPro-CnIt.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Demi Condensed Italic';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Demi Condensed Italic'), url('AvenirNextLTPro-DemiCnIt.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Demi Italic';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Demi Italic'), url('AvenirNextLTPro-DemiIt.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Heavy Condensed Italic';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Heavy Condensed Italic'), url('AvenirNextLTPro-HeavyCnIt.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Italic';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Italic'), url('AvenirNextLTPro-It.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Medium Condensed Italic';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Medium Condensed Italic'), url('AvenirNextLTPro-MediumCnIt.woff') format('woff');
+}
+
+
+@font-face {
+font-family: 'Avenir Next LT Pro Ultra Light Condensed Italic';
+font-style: normal;
+font-weight: normal;
+src: local('Avenir Next LT Pro Ultra Light Condensed Italic'), url('AvenirNextLTPro-UltLtCnIt.woff') format('woff');
+}
\ No newline at end of file
Binary files node-red-src/editor/fonts/AvenirNextLTPro-Regular.woff and node-red-src_ttb/editor/fonts/AvenirNextLTPro-Regular.woff differ
diff -ruN node-red-src/editor/js/i18n_Alone.js node-red-src_ttb/editor/js/i18n_Alone.js
--- node-red-src/editor/js/i18n_Alone.js	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/editor/js/i18n_Alone.js	2017-09-11 12:45:30.857386900 +0000
@@ -0,0 +1,60 @@
+/**
+ * Copyright 2013, 2015 IBM Corp.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ **/
+ var RED = (function() {
+    $(function() {
+            
+        document.title = window.location.hostname.replace(".local","");;
+    
+        ace.require("ace/ext/language_tools");
+
+        RED.i18n.init(function() {
+            
+        })
+    });
+
+
+    return {
+    };
+})();
+
+ 
+RED.i18n = (function() {
+    
+    return {
+        init: function(done) {
+            i18n.init({
+                resGetPath: 'locales/__ns__',
+                dynamicLoad: false,
+                load:'current',
+                ns: {
+                    namespaces: ["editor","node-red"],
+                    defaultNs: "editor"
+                },
+                fallbackLng: ['en-US'],
+                useCookie: false
+            },function() {
+                done();
+            });
+            RED["_"] = function() {
+                return i18n.t.apply(null,arguments);
+            }
+
+        },
+        loadCatalog: function(namespace,done) {
+            i18n.loadNamespace(namespace,done);
+        }
+    }
+})();
diff -ruN node-red-src/editor/js/main.js node-red-src_ttb/editor/js/main.js
--- node-red-src/editor/js/main.js	2017-09-27 10:53:14.558981688 +0000
+++ node-red-src_ttb/editor/js/main.js	2017-09-26 15:24:24.388976000 +0000
@@ -50,7 +50,7 @@
     function loadFlows() {
         $.ajax({
             headers: {
-                "Accept":"application/json",
+                "Accept":"application/json"
             },
             cache: false,
             url: 'flows',
@@ -159,6 +159,24 @@
                     // Refresh flow library to ensure any examples are updated
                     RED.library.loadFlowLibrary();
                 });
+                RED.comms.subscribe("addNode", function(topic, msg) {
+                    if(!$.isArray(msg)) msg = [msg];
+                    for(var i in msg) {
+                        var nn = msg[i];
+                        if(!nn.wires && !isSpecialType(nn.type)) nn.wires = [];
+                        if(!nn.x && !isSpecialType(nn.type)) nn.x = 60;
+                        if(!nn.y && !isSpecialType(nn.type)) nn.y = 30;
+                        if(!nn.id) nn.id = RED.nodes.id();
+                    }
+                    try{
+                        RED.nodes.import(msg, false);
+                    } catch(e) { }
+                    RED.nodes.dirty(true);
+                    RED.view.redraw(true);
+                });
+                function isSpecialType(type) {
+                    return type == "config" || type == "workspace";
+                }
             }
         });
     }
@@ -194,6 +212,7 @@
         menuOptions.push(null);
         menuOptions.push({id:"menu-item-import",label:RED._("menu.label.import"),options:[
             {id:"menu-item-import-clipboard",label:RED._("menu.label.clipboard"),onselect:"core:show-import-dialog"},
+            {id:"menu-item-console-npm",icon:"fa fa-cloud-download",label:"node",onselect:"core:node-import"},
             {id:"menu-item-import-library",label:RED._("menu.label.library"),options:[]}
         ]});
         menuOptions.push({id:"menu-item-export",label:RED._("menu.label.export"),disabled:true,options:[
@@ -214,17 +233,33 @@
             {id:"menu-item-subflow-convert",label:RED._("menu.label.selectionToSubflow"),disabled:true,onselect:"core:convert-to-subflow"},
         ]});
         menuOptions.push(null);
+        menuOptions.push({id:"menu-item-console",icon:"fa fa-list",label:"Console",href:"/console.txt"});
+        menuOptions.push(null);
+        menuOptions.push({id:"menu-item-restart",label:RED._("menu.label.restart"), onselect:function() {
+                $.ajax({type: "POST", url: "/inject/restart"});
+        }});
+        menuOptions.push({id:"menu-item-reboot",label:RED._("menu.label.reboot"), onselect:function() {
+            $.ajax({type: "POST", url: "/inject/reboot"});
+        }});
+        menuOptions.push({id:"menu-item-shutdown",label:RED._("menu.label.shutdown"), onselect:function() {
+                $.ajax({type: "POST", url: "/inject/shutdown"});
+        }});
+        menuOptions.push(null);
         if (RED.settings.theme('palette.editable') !== false) {
             menuOptions.push({id:"menu-item-edit-palette",label:RED._("menu.label.editPalette"),onselect:"core:manage-palette"});
             menuOptions.push(null);
         }
 
-        menuOptions.push({id:"menu-item-user-settings",label:RED._("menu.label.settings"),onselect:"core:show-user-settings"});
+        menuOptions.push({id:"menu-item-user-settings",label:RED._("menu.label.userSettings"),onselect:"core:show-user-settings"});
         menuOptions.push(null);
 
         menuOptions.push({id:"menu-item-keyboard-shortcuts",label:RED._("menu.label.keyboardShortcuts"),onselect:"core:show-help"});
+        menuOptions.push({id:"menu-item-doc",
+            label: RED.settings.theme("menu.menu-item-help.label",RED._("menu.label.ttbdoc")),
+            href: RED.settings.theme("menu.menu-item-help.url","http://thethingbox.io/docs/index.html")
+        });
         menuOptions.push({id:"menu-item-help",
-            label: RED.settings.theme("menu.menu-item-help.label",RED._("menu.label.help")),
+            label: RED.settings.theme("menu.menu-item-help.label",RED._("menu.label.nrwebsite")),
             href: RED.settings.theme("menu.menu-item-help.url","http://nodered.org/docs")
         });
         menuOptions.push({id:"menu-item-node-red-version", label:"v"+RED.settings.version, onselect: "core:show-about" });
@@ -232,6 +267,7 @@
 
         RED.view.init();
         RED.userSettings.init();
+        RED.thingboxSettings.init();
         RED.user.init();
         RED.library.init();
         RED.keyboard.init();
@@ -244,6 +280,7 @@
         RED.subflow.init();
         RED.workspaces.init();
         RED.clipboard.init();
+        RED.npmInstallNode.init();
         RED.search.init();
         RED.editor.init();
         RED.diff.init();
@@ -253,6 +290,7 @@
         RED.deploy.init(RED.settings.theme("deployButton",null));
 
         RED.actions.add("core:show-about", showAbout);
+        RED.actions.add("core:node-import", RED.npmInstallNode.import);
         RED.nodes.init();
         RED.comms.connect();
 
@@ -264,9 +302,7 @@
 
     $(function() {
 
-        if ((window.location.hostname !== "localhost") && (window.location.hostname !== "127.0.0.1")) {
-            document.title = document.title+" : "+window.location.hostname;
-        }
+        document.title = window.location.hostname.replace(".local","");
 
         ace.require("ace/ext/language_tools");
 
diff -ruN node-red-src/editor/js/nodes.js node-red-src_ttb/editor/js/nodes.js
--- node-red-src/editor/js/nodes.js	2017-09-27 10:53:14.568981624 +0000
+++ node-red-src_ttb/editor/js/nodes.js	2017-09-26 15:24:24.424155500 +0000
@@ -41,15 +41,6 @@
         var typeToId = {};
         var nodeDefinitions = {};
 
-        nodeDefinitions['tab'] = {
-            defaults: {
-                label: {value:""},
-                disabled: {value: false},
-                info: {value: ""}
-            }
-        };
-
-
         var exports = {
             setModulePendingUpdated: function(module,version) {
                 moduleList[module].pending_version = version;
@@ -283,7 +274,14 @@
 
     function addWorkspace(ws) {
         workspaces[ws.id] = ws;
-        ws._def = RED.nodes.getType('tab');
+        ws._def = {
+            defaults: {
+                label: {value:""},
+                disabled: {value: false},
+                info: {value: ""}
+            }
+        };
+
         workspacesOrder.push(ws.id);
     }
     function getWorkspace(id) {
@@ -407,7 +405,8 @@
         return nns;
     }
 
-    function convertWorkspace(n) {
+    function convertWorkspace(n, keepOrigin) {
+    	var otherPropToSave = RED.settings.otherPropToSave;
         var node = {};
         node.id = n.id;
         node.type = n.type;
@@ -416,21 +415,33 @@
                 node[d] = n[d];
             }
         }
+        for (var prop in otherPropToSave){                            
+            if (n.hasOwnProperty(otherPropToSave[prop]) && (keepOrigin == true || otherPropToSave[prop] != "origin")) {
+                node[otherPropToSave[prop]] = n[otherPropToSave[prop]];
+            }
+        }
         return node;
     }
     /**
      * Converts a node to an exportable JSON Object
      **/
-    function convertNode(n, exportCreds) {
+    function convertNode(n, exportCreds, keepOrigin) {
         if (n.type === 'tab') {
             return convertWorkspace(n);
         }
         exportCreds = exportCreds || false;
+        var otherPropToSave = RED.settings.otherPropToSave;
         var node = {};
         node.id = n.id;
         node.type = n.type;
         node.z = n.z;
-
+	
+        for (var prop in otherPropToSave){                            
+            if (n.hasOwnProperty(otherPropToSave[prop]) && (keepOrigin == true || otherPropToSave[prop] != "origin")) {
+                node[otherPropToSave[prop]] = n[otherPropToSave[prop]];
+            }
+        }
+	
         if (node.type == "unknown") {
             for (var p in n._orig) {
                 if (n._orig.hasOwnProperty(p)) {
@@ -489,7 +500,7 @@
         return node;
     }
 
-    function convertSubflow(n) {
+    function convertSubflow(n, keepOrigin) {
         var node = {};
         node.id = n.id;
         node.type = n.type;
@@ -498,6 +509,13 @@
         node.in = [];
         node.out = [];
 
+        var otherPropToSave = RED.settings.otherPropToSave;
+        for (var prop in otherPropToSave){                            
+            if (n.hasOwnProperty(otherPropToSave[prop]) && (keepOrigin == true || otherPropToSave[prop] != "origin")) {
+                node[otherPropToSave[prop]] = n[otherPropToSave[prop]];
+            }
+        }
+
         n.in.forEach(function(p) {
             var nIn = {x:p.x,y:p.y,wires:[]};
             var wires = links.filter(function(d) { return d.source === p });
@@ -582,30 +600,30 @@
     }
 
     //TODO: rename this (createCompleteNodeSet)
-    function createCompleteNodeSet(exportCredentials) {
-        if (exportCredentials === undefined) {
+    function createCompleteNodeSet(exportCredentials,keepOrigin) {
+        if (exportCredentials === undefined || exportCredentials === null) {
             exportCredentials = true;
         }
         var nns = [];
         var i;
         for (i=0;i<workspacesOrder.length;i++) {
             if (workspaces[workspacesOrder[i]].type == "tab") {
-                nns.push(convertWorkspace(workspaces[workspacesOrder[i]]));
+                nns.push(convertWorkspace(workspaces[workspacesOrder[i]], keepOrigin));
             }
         }
         for (i in subflows) {
             if (subflows.hasOwnProperty(i)) {
-                nns.push(convertSubflow(subflows[i]));
+                nns.push(convertSubflow(subflows[i], keepOrigin));
             }
         }
         for (i in configNodes) {
             if (configNodes.hasOwnProperty(i)) {
-                nns.push(convertNode(configNodes[i], exportCredentials));
+                nns.push(convertNode(configNodes[i], exportCredentials, keepOrigin));
             }
         }
         for (i=0;i<nodes.length;i++) {
             var node = nodes[i];
-            nns.push(convertNode(node, exportCredentials));
+            nns.push(convertNode(node, exportCredentials, keepOrigin));
         }
         return nns;
     }
@@ -766,7 +784,7 @@
         var configNode;
         var missingWorkspace = null;
         var d;
-
+        var otherPropToSave = RED.settings.otherPropToSave;
         // Find all tabs and subflow templates
         for (i=0;i<newNodes.length;i++) {
             n = newNodes[i];
@@ -819,7 +837,7 @@
 
         // Add a tab if there isn't one there already
         if (defaultWorkspace == null) {
-            defaultWorkspace = { type:"tab", id:getID(), disabled: false, info:"",  label:RED._('workspace.defaultName',{number:1})};
+            defaultWorkspace = { type:"tab", id:getID(), label:RED._('workspace.defaultName',{number:1})};
             addWorkspace(defaultWorkspace);
             RED.workspaces.add(defaultWorkspace);
             new_workspaces.push(defaultWorkspace);
@@ -888,6 +906,11 @@
                             }
                         }
                     }
+                    for (var prop in otherPropToSave){
+                        if (n.hasOwnProperty(otherPropToSave[prop])) {
+                            configNode[otherPropToSave[prop]] = n[otherPropToSave[prop]];
+                        }
+                    }
                     configNode.label = def.label;
                     configNode._def = def;
                     if (createNewIds) {
@@ -937,7 +960,11 @@
                                 }
                             }
                         }
-                        node.id = getID();
+                        if (!n.hasOwnProperty("origin") || getNode(n.id) != null){
+                            node.id = getID();
+                        } else {
+                            node.id = n.id;
+                        }
                     } else {
                         node.id = n.id;
                         if (node.z == null || (!workspaces[node.z] && !subflow_map[node.z])) {
@@ -1015,6 +1042,11 @@
                             }
                         }
                     }
+                    for (var prop in otherPropToSave){
+                        if (n.hasOwnProperty(otherPropToSave[prop])) {
+                            node[otherPropToSave[prop]] = n[otherPropToSave[prop]];
+                        }
+                    }
                     addNode(node);
                     RED.editor.validateNode(node);
                     node_map[n.id] = node;
diff -ruN node-red-src/editor/js/ui/clipboard.js node-red-src_ttb/editor/js/ui/clipboard.js
--- node-red-src/editor/js/ui/clipboard.js	2017-09-27 10:53:14.568981624 +0000
+++ node-red-src_ttb/editor/js/ui/clipboard.js	2017-09-26 15:24:25.382842700 +0000
@@ -203,8 +203,7 @@
             var nodes = null;
             if (type === 'export-range-selected') {
                 var selection = RED.view.selection();
-                // Don't include the subflow meta-port nodes in the exported selection
-                nodes = RED.nodes.createExportableNodeSet(selection.nodes.filter(function(n) { return n.type !== 'subflow'}));
+                nodes = RED.nodes.createExportableNodeSet(selection.nodes);
             } else if (type === 'export-range-flow') {
                 var activeWorkspace = RED.workspaces.active();
                 nodes = RED.nodes.filterNodes({z:activeWorkspace});
diff -ruN node-red-src/editor/js/ui/common/editableList.js node-red-src_ttb/editor/js/ui/common/editableList.js
--- node-red-src/editor/js/ui/common/editableList.js	2017-09-27 10:53:14.568981624 +0000
+++ node-red-src_ttb/editor/js/ui/common/editableList.js	2017-09-26 15:24:24.969142700 +0000
@@ -85,7 +85,7 @@
             if (this.element.css("position") === "absolute") {
                 ["top","left","bottom","right"].forEach(function(s) {
                     var v = that.element.css(s);
-                    if (v!=="auto" && v!=="") {
+                    if (s!=="auto" && s!=="") {
                         that.topContainer.css(s,v);
                         that.uiContainer.css(s,"0");
                         that.element.css(s,'auto');
diff -ruN node-red-src/editor/js/ui/common/tabs.js node-red-src_ttb/editor/js/ui/common/tabs.js
--- node-red-src/editor/js/ui/common/tabs.js	2017-09-27 10:53:14.568981624 +0000
+++ node-red-src_ttb/editor/js/ui/common/tabs.js	2017-09-26 15:24:25.001499400 +0000
@@ -327,6 +327,11 @@
                     })
                 }
             },
+            addHiddenTab: function(tab){
+                tabs[tab.id] = tab;
+                var li = $("<span/>",{style:"block:none;"}).appendTo(ul);
+                li.data("tabId",tab.id);
+            },
             removeTab: removeTab,
             activateTab: activateTab,
             nextTab: activateNextTab,
@@ -339,6 +344,9 @@
                 return ul.find("a[href='#"+id+"']").length > 0;
             },
             renameTab: function(id,label) {
+                if(!tabs.hasOwnProperty(id)){
+                    return;
+                }
                 tabs[id].label = label;
                 var tab = ul.find("a[href='#"+id+"']");
                 tab.attr("title",label);
diff -ruN node-red-src/editor/js/ui/deploy.js node-red-src_ttb/editor/js/ui/deploy.js
--- node-red-src/editor/js/ui/deploy.js	2017-09-27 10:53:14.568981624 +0000
+++ node-red-src_ttb/editor/js/ui/deploy.js	2017-09-26 15:24:25.352247500 +0000
@@ -157,8 +157,8 @@
                 create: function() {
                     $("#node-dialog-confirm-deploy").parent().find("div.ui-dialog-buttonpane")
                         .prepend('<div style="height:0; vertical-align: middle; display:inline-block; margin-top: 13px; float:left;">'+
-                                   '<input style="vertical-align:top;" type="checkbox" id="node-dialog-confirm-deploy-hide"> '+
-                                   '<label style="display:inline;" for="node-dialog-confirm-deploy-hide" data-i18n="deploy.confirm.doNotWarn"></label>'+
+                                   '<input style="vertical-align:top;" type="checkbox" id="node-dialog-confirm-deploy-hide">'+
+                                   '<label style="display:inline;" for="node-dialog-confirm-deploy-hide"> do not warn about this again</label>'+
                                    '<input type="hidden" id="node-dialog-confirm-deploy-type">'+
                                    '</div>');
                 },
@@ -347,7 +347,7 @@
                 }
             }
 
-            var nns = RED.nodes.createCompleteNodeSet();
+            var nns = RED.nodes.createCompleteNodeSet(null, true);
 
             var startTime = Date.now();
             $(".deploy-button-content").css('opacity',0);
diff -ruN node-red-src/editor/js/ui/diff.js node-red-src_ttb/editor/js/ui/diff.js
--- node-red-src/editor/js/ui/diff.js	2017-09-27 10:53:14.578981560 +0000
+++ node-red-src_ttb/editor/js/ui/diff.js	2017-09-26 15:24:24.902789600 +0000
@@ -1,26 +1,52 @@
 RED.diff = (function() {
 
     var currentDiff = {};
-    var diffVisible = false;
-    var diffList;
 
     function init() {
 
         // RED.actions.add("core:show-current-diff",showLocalDiff);
         RED.actions.add("core:show-remote-diff",showRemoteDiff);
+
         // RED.keyboard.add("*","ctrl-shift-l","core:show-current-diff");
         RED.keyboard.add("*","ctrl-shift-r","core:show-remote-diff");
 
-    }
 
-    function buildDiffPanel(container) {
-        var diffPanel = $('<div id="node-dialog-view-diff"><div id="node-dialog-view-diff-headers"></div><ol id="node-dialog-view-diff-diff"></ol></div>').appendTo(container);
+        var dialog = $('<div id="node-dialog-view-diff" class="hide"><div id="node-dialog-view-diff-headers"></div><ol id="node-dialog-view-diff-diff"></ol></div>').appendTo(document.body);
 
         var toolbar = $('<div class="node-diff-toolbar">'+
             '<span><span id="node-diff-toolbar-resolved-conflicts"></span></span> '+
-            '</div>').prependTo(diffPanel);
+            '</div>').prependTo(dialog);
+
+        $("#node-dialog-view-diff").dialog({
+            title: RED._('deploy.confirm.button.review'),
+            modal: true,
+            autoOpen: false,
+            buttons: [
+                {
+                    text: RED._("common.label.cancel"),
+                    click: function() {
+                        $( this ).dialog( "close" );
+                    }
+                },
+                {
+                    id: "node-diff-view-diff-merge",
+                    text: RED._("deploy.confirm.button.merge"),
+                    class: "primary disabled",
+                    click: function() {
+                        if (!$("#node-diff-view-diff-merge").hasClass('disabled')) {
+                            refreshConflictHeader();
+                            mergeDiff(currentDiff);
+                            $( this ).dialog( "close" );
+                        }
+                    }
+                }
+            ],
+            open: function() {
+                $(this).dialog({width:Math.min($(window).width(),900),height:Math.min($(window).height(),600)});
+            }
+        });
 
-        diffList = diffPanel.find("#node-dialog-view-diff-diff").editableList({
+        var diffList = $("#node-dialog-view-diff-diff").editableList({
             addButton: false,
             scrollOnAdd: false,
             addItem: function(container,i,object) {
@@ -51,7 +77,7 @@
                 } else if (tab.type === 'subflow') {
                     titleSpan.html((tabForLabel.name||tabForLabel.id));
                 } else {
-                    titleSpan.html(RED._("diff.globalNodes"));
+                    titleSpan.html("Global nodes");
                 }
                 var flowStats = {
                     local: {
@@ -127,7 +153,7 @@
                             }
                         }
                         $('<span class="node-diff-chevron"><i class="fa fa-angle-down"></i></span>').appendTo(originalNodeDiv);
-                        $('<span>').html(RED._("diff.flowProperties")).appendTo(originalNodeDiv);
+                        $('<span>').html("Flow Properties").appendTo(originalNodeDiv);
 
                         row.click(function(evt) {
                             evt.preventDefault();
@@ -281,7 +307,6 @@
                 container.i18n();
             }
         });
-        return diffPanel;
     }
     function formatWireProperty(wires,allNodes) {
         var result = $("<div>",{class:"node-diff-property-wires"})
@@ -538,7 +563,6 @@
         return div;
     }
     function createNodePropertiesTable(def,node,localNodeObj,remoteNodeObj) {
-        var propertyElements = {};
         var localNode = localNodeObj.node;
         var remoteNode;
         if (remoteNodeObj) {
@@ -547,15 +571,8 @@
 
         var nodePropertiesDiv = $("<div>",{class:"node-diff-node-entry-properties"});
         var nodePropertiesTable = $("<table>").appendTo(nodePropertiesDiv);
-        var nodePropertiesTableCols = $('<colgroup><col/><col/></colgroup>').appendTo(nodePropertiesTable);
-        if (remoteNode !== undefined) {
-            $("<col/>").appendTo(nodePropertiesTableCols);
-        }
-        var nodePropertiesTableBody = $("<tbody>").appendTo(nodePropertiesTable);
-
         var row;
         var localCell, remoteCell;
-        var element;
         var currentValue, localValue, remoteValue;
         var localChanged = false;
         var remoteChanged = false;
@@ -564,14 +581,13 @@
         var conflict = false;
         var status;
 
-        row = $("<tr>").appendTo(nodePropertiesTableBody);
+        row = $("<tr>").appendTo(nodePropertiesTable);
         $("<td>",{class:"node-diff-property-cell-label"}).html("id").appendTo(row);
         localCell = $("<td>",{class:"node-diff-property-cell node-diff-node-local"}).appendTo(row);
         if (localNode) {
             localCell.addClass("node-diff-node-unchanged");
             $('<span class="node-diff-status"></span>').appendTo(localCell);
-            element = $('<span class="node-diff-element"></span>').appendTo(localCell);
-            propertyElements['local.id'] = RED.utils.createObjectElement(localNode.id).appendTo(element);
+            RED.utils.createObjectElement(localNode.id).appendTo(localCell);
         } else {
             localCell.addClass("node-diff-empty");
         }
@@ -580,8 +596,7 @@
             remoteCell.addClass("node-diff-node-unchanged");
             if (remoteNode) {
                 $('<span class="node-diff-status"></span>').appendTo(remoteCell);
-                element = $('<span class="node-diff-element"></span>').appendTo(remoteCell);
-                propertyElements['remote.id'] = RED.utils.createObjectElement(remoteNode.id).appendTo(element);
+                RED.utils.createObjectElement(remoteNode.id).appendTo(remoteCell);
             } else {
                 remoteCell.addClass("node-diff-empty");
             }
@@ -607,24 +622,13 @@
             ) {
                 conflict = true;
             }
-            row = $("<tr>").appendTo(nodePropertiesTableBody);
+            row = $("<tr>").appendTo(nodePropertiesTable);
             $("<td>",{class:"node-diff-property-cell-label"}).html("position").appendTo(row);
             localCell = $("<td>",{class:"node-diff-property-cell node-diff-node-local"}).appendTo(row);
             if (localNode) {
                 localCell.addClass("node-diff-node-"+(localChanged?"changed":"unchanged"));
                 $('<span class="node-diff-status">'+(localChanged?'<i class="fa fa-square"></i>':'')+'</span>').appendTo(localCell);
-                element = $('<span class="node-diff-element"></span>').appendTo(localCell);
-                propertyElements['local.position'] = RED.utils.createObjectElement({x:localNode.x,y:localNode.y},
-                    {
-                        path: "position",
-                        exposeApi: true,
-                        ontoggle: function(path,state) {
-                            if (propertyElements['remote.'+path]) {
-                                propertyElements['remote.'+path].prop('expand')(path,state)
-                            }
-                        }
-                    }
-                ).appendTo(element);
+                RED.utils.createObjectElement({x:localNode.x,y:localNode.y}).appendTo(localCell);
             } else {
                 localCell.addClass("node-diff-empty");
             }
@@ -634,18 +638,7 @@
                 remoteCell.addClass("node-diff-node-"+(remoteChanged?"changed":"unchanged"));
                 if (remoteNode) {
                     $('<span class="node-diff-status">'+(remoteChanged?'<i class="fa fa-square"></i>':'')+'</span>').appendTo(remoteCell);
-                    element = $('<span class="node-diff-element"></span>').appendTo(remoteCell);
-                    propertyElements['remote.position'] = RED.utils.createObjectElement({x:remoteNode.x,y:remoteNode.y},
-                        {
-                            path: "position",
-                            exposeApi: true,
-                            ontoggle: function(path,state) {
-                                if (propertyElements['local.'+path]) {
-                                    propertyElements['local.'+path].prop('expand')(path,state);
-                                }
-                            }
-                        }
-                    ).appendTo(element);
+                    RED.utils.createObjectElement({x:remoteNode.x,y:remoteNode.y}).appendTo(remoteCell);
                 } else {
                     remoteCell.addClass("node-diff-empty");
                 }
@@ -675,7 +668,7 @@
             ){
                 conflict = true;
             }
-            row = $("<tr>").appendTo(nodePropertiesTableBody);
+            row = $("<tr>").appendTo(nodePropertiesTable);
             $("<td>",{class:"node-diff-property-cell-label"}).html("wires").appendTo(row);
             localCell = $("<td>",{class:"node-diff-property-cell node-diff-node-local"}).appendTo(row);
             if (localNode) {
@@ -707,14 +700,10 @@
                 }
             }
         }
-
-        var properties = Object.keys(node).filter(function(p) { return p!='inputLabels'&&p!='outputLabels'&&p!='z'&&p!='wires'&&p!=='x'&&p!=='y'&&p!=='id'&&p!=='type'&&(!def.defaults||!def.defaults.hasOwnProperty(p))});
+        var properties = Object.keys(node).filter(function(p) { return p!='z'&&p!='wires'&&p!=='x'&&p!=='y'&&p!=='id'&&p!=='type'&&(!def.defaults||!def.defaults.hasOwnProperty(p))});
         if (def.defaults) {
             properties = properties.concat(Object.keys(def.defaults));
         }
-        if (node.type !== 'tab') {
-            properties = properties.concat(['inputLabels','outputLabels']);
-        }
         properties.forEach(function(d) {
             localChanged = false;
             remoteChanged = false;
@@ -742,8 +731,8 @@
                 conflict = true;
             }
 
-            row = $("<tr>").appendTo(nodePropertiesTableBody);
-            var propertyNameCell = $("<td>",{class:"node-diff-property-cell-label"}).html(d).appendTo(row);
+            row = $("<tr>").appendTo(nodePropertiesTable);
+            $("<td>",{class:"node-diff-property-cell-label"}).html(d).appendTo(row);
             localCell = $("<td>",{class:"node-diff-property-cell node-diff-node-local"}).appendTo(row);
             if (localNode) {
                 if (!conflict) {
@@ -753,18 +742,7 @@
                     localCell.addClass("node-diff-node-conflict");
                     $('<span class="node-diff-status"><i class="fa fa-exclamation"></i></span>').appendTo(localCell);
                 }
-                element = $('<span class="node-diff-element"></span>').appendTo(localCell);
-                propertyElements['local.'+d] = RED.utils.createObjectElement(localNode[d],
-                    {
-                        path: d,
-                        exposeApi: true,
-                        ontoggle: function(path,state) {
-                            if (propertyElements['remote.'+d]) {
-                                propertyElements['remote.'+d].prop('expand')(path,state)
-                            }
-                        }
-                    }
-                ).appendTo(element);
+                RED.utils.createObjectElement(localNode[d]).appendTo(localCell);
             } else {
                 localCell.addClass("node-diff-empty");
             }
@@ -778,18 +756,7 @@
                         remoteCell.addClass("node-diff-node-conflict");
                         $('<span class="node-diff-status"><i class="fa fa-exclamation"></i></span>').appendTo(remoteCell);
                     }
-                    element = $('<span class="node-diff-element"></span>').appendTo(remoteCell);
-                    propertyElements['remote.'+d] = RED.utils.createObjectElement(remoteNode[d],
-                        {
-                            path: d,
-                            exposeApi: true,
-                            ontoggle: function(path,state) {
-                                if (propertyElements['local.'+d]) {
-                                    propertyElements['local.'+d].prop('expand')(path,state)
-                                }
-                            }
-                        }
-                    ).appendTo(element);
+                    RED.utils.createObjectElement(remoteNode[d]).appendTo(remoteCell);
                 } else {
                     remoteCell.addClass("node-diff-empty");
                 }
@@ -878,7 +845,7 @@
             cache: false,
             url: 'flows',
             success: function(nodes) {
-                var localFlow = RED.nodes.createCompleteNodeSet();
+                var localFlow = RED.nodes.createCompleteNodeSet(null,true);
                 var originalFlow = RED.nodes.originalFlow();
                 var remoteFlow = nodes.flows;
                 var localDiff = generateDiff(originalFlow,localFlow);
@@ -1035,225 +1002,186 @@
         // console.log(conflicted);
         return diff;
     }
-
     function showDiff(diff) {
-        if (diffVisible) {
-            return;
-        }
-
         var localDiff = diff.localDiff;
         var remoteDiff = diff.remoteDiff;
         var conflicts = diff.conflicts;
         currentDiff = diff;
+        var list = $("#node-dialog-view-diff-diff");
+        list.editableList('empty');
 
-        var trayOptions = {
-            title: "Review Changes", //TODO: nls
-            width: Infinity,
-            buttons: [
-                {
-                    text: RED._("common.label.cancel"),
-                    click: function() {
-                        RED.tray.close();
-                    }
-                },
-                {
-                    id: "node-diff-view-diff-merge",
-                    text: RED._("deploy.confirm.button.merge"),
-                    class: "primary disabled",
-                    click: function() {
-                        if (!$("#node-diff-view-diff-merge").hasClass('disabled')) {
-                            refreshConflictHeader();
-                            mergeDiff(currentDiff);
-                            RED.tray.close();
-                        }
-                    }
-                }
-            ],
-            resize: function(dimensions) {
-                // trayWidth = dimensions.width;
+        if (remoteDiff) {
+            $("#node-diff-view-diff-merge").show();
+            if (Object.keys(conflicts).length === 0) {
+                $("#node-diff-view-diff-merge").removeClass('disabled');
+            } else {
+                $("#node-diff-view-diff-merge").addClass('disabled');
+            }
+        } else {
+            $("#node-diff-view-diff-merge").hide();
+        }
+        refreshConflictHeader();
+
+        $("#node-dialog-view-diff-headers").empty();
+        // console.log("--------------");
+        // console.log(localDiff);
+        // console.log(remoteDiff);
+        var currentConfig = localDiff.currentConfig;
+        var newConfig = localDiff.newConfig;
+        conflicts = conflicts || {};
+
+        var el = {
+            diff: localDiff,
+            def: {
+                category: 'config',
+                color: '#f0f0f0'
             },
-            open: function(tray) {
-                var trayBody = tray.find('.editor-tray-body');
-                var diffPanel = buildDiffPanel(trayBody);
-                if (remoteDiff) {
-                    $("#node-diff-view-diff-merge").show();
-                    if (Object.keys(conflicts).length === 0) {
-                        $("#node-diff-view-diff-merge").removeClass('disabled');
-                    } else {
-                        $("#node-diff-view-diff-merge").addClass('disabled');
-                    }
-                } else {
-                    $("#node-diff-view-diff-merge").hide();
-                }
-                refreshConflictHeader();
+            tab: {
+                n: {},
+                nodes: currentConfig.globals
+            },
+            newTab: {
+                n: {},
+                nodes: newConfig.globals
+            }
+        };
+
+        if (remoteDiff !== undefined) {
+            $('#node-dialog-view-diff').addClass('node-diff-three-way');
+
+            $('<div class="node-diff-node-entry-cell"></div><div class="node-diff-node-entry-cell" data-i18n="diff.local"></div><div class="node-diff-node-entry-cell" data-i18n="diff.remote"></div>').i18n().appendTo("#node-dialog-view-diff-headers");
+            el.remoteTab = {
+                n:{},
+                nodes:remoteDiff.newConfig.globals
+            };
+            el.remoteDiff = remoteDiff;
+        } else {
+            $('#node-dialog-view-diff').removeClass('node-diff-three-way');
+        }
+
+        list.editableList('addItem',el);
 
-                $("#node-dialog-view-diff-headers").empty();
-                // console.log("--------------");
-                // console.log(localDiff);
-                // console.log(remoteDiff);
-                var currentConfig = localDiff.currentConfig;
-                var newConfig = localDiff.newConfig;
-                conflicts = conflicts || {};
+        var seenTabs = {};
 
+        currentConfig.tabOrder.forEach(function(tabId) {
+            var tab = currentConfig.tabs[tabId];
+            var el = {
+                diff: localDiff,
+                def: {},
+                tab:tab
+            };
+            if (newConfig.tabs.hasOwnProperty(tabId)) {
+                el.newTab = newConfig.tabs[tabId];
+            }
+            if (remoteDiff !== undefined) {
+                el.remoteTab = remoteDiff.newConfig.tabs[tabId];
+                el.remoteDiff = remoteDiff;
+            }
+            seenTabs[tabId] = true;
+            list.editableList('addItem',el)
+        });
+        newConfig.tabOrder.forEach(function(tabId) {
+            if (!seenTabs[tabId]) {
+                seenTabs[tabId] = true;
+                var tab = newConfig.tabs[tabId];
                 var el = {
                     diff: localDiff,
-                    def: {
-                        category: 'config',
-                        color: '#f0f0f0'
-                    },
-                    tab: {
-                        n: {},
-                        nodes: currentConfig.globals
-                    },
-                    newTab: {
-                        n: {},
-                        nodes: newConfig.globals
-                    }
+                    def: {},
+                    tab:tab,
+                    newTab: tab
                 };
-
                 if (remoteDiff !== undefined) {
-                    diffPanel.addClass('node-diff-three-way');
-
-                    $('<div data-i18n="diff.local"></div><div data-i18n="diff.remote"></div>').i18n().appendTo("#node-dialog-view-diff-headers");
-                    el.remoteTab = {
-                        n:{},
-                        nodes:remoteDiff.newConfig.globals
-                    };
                     el.remoteDiff = remoteDiff;
-                } else {
-                    diffPanel.removeClass('node-diff-three-way');
                 }
-
-                diffList.editableList('addItem',el);
-
-                var seenTabs = {};
-
-                currentConfig.tabOrder.forEach(function(tabId) {
-                    var tab = currentConfig.tabs[tabId];
+                list.editableList('addItem',el)
+            }
+        });
+        if (remoteDiff !== undefined) {
+            remoteDiff.newConfig.tabOrder.forEach(function(tabId) {
+                if (!seenTabs[tabId]) {
+                    var tab = remoteDiff.newConfig.tabs[tabId];
+                    // TODO how to recognise this is a remotely added flow
                     var el = {
                         diff: localDiff,
-                        def: RED.nodes.getType('tab'),
-                        tab:tab
+                        remoteDiff: remoteDiff,
+                        def: {},
+                        tab:tab,
+                        remoteTab:tab
                     };
-                    if (newConfig.tabs.hasOwnProperty(tabId)) {
-                        el.newTab = newConfig.tabs[tabId];
-                    }
-                    if (remoteDiff !== undefined) {
-                        el.remoteTab = remoteDiff.newConfig.tabs[tabId];
-                        el.remoteDiff = remoteDiff;
-                    }
-                    seenTabs[tabId] = true;
-                    diffList.editableList('addItem',el)
-                });
-                newConfig.tabOrder.forEach(function(tabId) {
-                    if (!seenTabs[tabId]) {
-                        seenTabs[tabId] = true;
-                        var tab = newConfig.tabs[tabId];
-                        var el = {
-                            diff: localDiff,
-                            def: RED.nodes.getType('tab'),
-                            tab:tab,
-                            newTab: tab
-                        };
-                        if (remoteDiff !== undefined) {
-                            el.remoteDiff = remoteDiff;
-                        }
-                        diffList.editableList('addItem',el)
-                    }
-                });
-                if (remoteDiff !== undefined) {
-                    remoteDiff.newConfig.tabOrder.forEach(function(tabId) {
-                        if (!seenTabs[tabId]) {
-                            var tab = remoteDiff.newConfig.tabs[tabId];
-                            // TODO how to recognise this is a remotely added flow
-                            var el = {
-                                diff: localDiff,
-                                remoteDiff: remoteDiff,
-                                def: RED.nodes.getType('tab'),
-                                tab:tab,
-                                remoteTab:tab
-                            };
-                            diffList.editableList('addItem',el)
-                        }
-                    });
+                    list.editableList('addItem',el)
                 }
-                var subflowId;
-                for (subflowId in currentConfig.subflows) {
-                    if (currentConfig.subflows.hasOwnProperty(subflowId)) {
-                        seenTabs[subflowId] = true;
-                        el = {
-                            diff: localDiff,
-                            def: {
-                                defaults:{},
-                                icon:"subflow.png",
-                                category: "subflows",
-                                color: "#da9"
-                            },
-                            tab:currentConfig.subflows[subflowId]
-                        }
-                        if (newConfig.subflows.hasOwnProperty(subflowId)) {
-                            el.newTab = newConfig.subflows[subflowId];
-                        }
-                        if (remoteDiff !== undefined) {
-                            el.remoteTab = remoteDiff.newConfig.subflows[subflowId];
-                            el.remoteDiff = remoteDiff;
-                        }
-                        diffList.editableList('addItem',el)
-                    }
+            });
+        }
+        var subflowId;
+        for (subflowId in currentConfig.subflows) {
+            if (currentConfig.subflows.hasOwnProperty(subflowId)) {
+                seenTabs[subflowId] = true;
+                el = {
+                    diff: localDiff,
+                    def: {
+                        defaults:{},
+                        icon:"subflow.png",
+                        category: "subflows",
+                        color: "#da9"
+                    },
+                    tab:currentConfig.subflows[subflowId]
                 }
-                for (subflowId in newConfig.subflows) {
-                    if (newConfig.subflows.hasOwnProperty(subflowId) && !seenTabs[subflowId]) {
-                        seenTabs[subflowId] = true;
-                        el = {
-                            diff: localDiff,
-                            def: {
-                                defaults:{},
-                                icon:"subflow.png",
-                                category: "subflows",
-                                color: "#da9"
-                            },
-                            tab:newConfig.subflows[subflowId],
-                            newTab:newConfig.subflows[subflowId]
-                        }
-                        if (remoteDiff !== undefined) {
-                            el.remoteDiff = remoteDiff;
-                        }
-                        diffList.editableList('addItem',el)
-                    }
+                if (newConfig.subflows.hasOwnProperty(subflowId)) {
+                    el.newTab = newConfig.subflows[subflowId];
                 }
                 if (remoteDiff !== undefined) {
-                    for (subflowId in remoteDiff.newConfig.subflows) {
-                        if (remoteDiff.newConfig.subflows.hasOwnProperty(subflowId) && !seenTabs[subflowId]) {
-                            el = {
-                                diff: localDiff,
-                                remoteDiff: remoteDiff,
-                                def: {
-                                    defaults:{},
-                                    icon:"subflow.png",
-                                    category: "subflows",
-                                    color: "#da9"
-                                },
-                                tab:remoteDiff.newConfig.subflows[subflowId],
-                                remoteTab: remoteDiff.newConfig.subflows[subflowId]
-                            }
-                            diffList.editableList('addItem',el)
-                        }
+                    el.remoteTab = remoteDiff.newConfig.subflows[subflowId];
+                    el.remoteDiff = remoteDiff;
+                }
+                list.editableList('addItem',el)
+            }
+        }
+        for (subflowId in newConfig.subflows) {
+            if (newConfig.subflows.hasOwnProperty(subflowId) && !seenTabs[subflowId]) {
+                seenTabs[subflowId] = true;
+                el = {
+                    diff: localDiff,
+                    def: {
+                        defaults:{},
+                        icon:"subflow.png",
+                        category: "subflows",
+                        color: "#da9"
+                    },
+                    tab:newConfig.subflows[subflowId],
+                    newTab:newConfig.subflows[subflowId]
+                }
+                if (remoteDiff !== undefined) {
+                    el.remoteDiff = remoteDiff;
+                }
+                list.editableList('addItem',el)
+            }
+        }
+        if (remoteDiff !== undefined) {
+            for (subflowId in remoteDiff.newConfig.subflows) {
+                if (remoteDiff.newConfig.subflows.hasOwnProperty(subflowId) && !seenTabs[subflowId]) {
+                    el = {
+                        diff: localDiff,
+                        remoteDiff: remoteDiff,
+                        def: {
+                            defaults:{},
+                            icon:"subflow.png",
+                            category: "subflows",
+                            color: "#da9"
+                        },
+                        tab:remoteDiff.newConfig.subflows[subflowId],
+                        remoteTab: remoteDiff.newConfig.subflows[subflowId]
                     }
+                    list.editableList('addItem',el)
                 }
-                $("#sidebar-shade").show();
-            },
-            close: function() {
-                diffVisible = false;
-                $("#sidebar-shade").hide();
-
-            },
-            show: function() {
-
             }
         }
-        RED.tray.show(trayOptions);
-    }
 
+
+        $("#node-diff-filter-changed").addClass("selected");
+        $("#node-diff-filter-all").removeClass("selected");
+
+        $("#node-dialog-view-diff").dialog("open");
+    }
     function mergeDiff(diff) {
         var currentConfig = diff.localDiff.currentConfig;
         var localDiff = diff.localDiff;
@@ -1332,6 +1260,7 @@
         RED.palette.refresh();
         RED.workspaces.refresh();
         RED.sidebar.config.refresh();
+
     }
     return {
         init: init,
diff -ruN node-red-src/editor/js/ui/editor.js node-red-src_ttb/editor/js/ui/editor.js
--- node-red-src/editor/js/ui/editor.js	2017-09-27 10:53:14.578981560 +0000
+++ node-red-src_ttb/editor/js/ui/editor.js	2017-09-26 15:24:25.327181200 +0000
@@ -660,7 +660,7 @@
     function buildLabelRow(type, index, value, placeHolder) {
         var result = $('<div>',{class:"node-label-form-row"});
         if (type === undefined) {
-            $('<span>').html(RED._("editor.noDefaultLabel")).appendTo(result);
+            $('<span>').html("none").appendTo(result);
             result.addClass("node-label-form-none");
         } else {
             result.addClass("");
diff -ruN node-red-src/editor/js/ui/keyboard.js node-red-src_ttb/editor/js/ui/keyboard.js
--- node-red-src/editor/js/ui/keyboard.js	2017-09-27 10:53:14.578981560 +0000
+++ node-red-src_ttb/editor/js/ui/keyboard.js	2017-09-26 15:24:25.423455500 +0000
@@ -89,7 +89,7 @@
 
         RED.userSettings.add({
             id:'keyboard',
-            title: RED._("keyboard.keyboard"),
+            title: 'Keyboard',
             get: getSettingsPane,
             focus: function() {
                 setTimeout(function() {
@@ -350,8 +350,7 @@
                 $(this).toggleClass("input-error",!valid);
             })
 
-            var scopeSelect = $('<select><option value="*" data-i18n="keyboard.global"></option><option value="workspace" data-i18n="keyboard.workspace"></option></select>').appendTo(scope);
-            scopeSelect.i18n();
+            var scopeSelect = $('<select><option value="*">global</option><option value="workspace">workspace</option></select>').appendTo(scope);
             scopeSelect.val(object.scope||'*');
 
             var div = $('<div class="keyboard-shortcut-edit button-group-vertical"></div>').appendTo(scope);
@@ -469,9 +468,9 @@
         var pane = $('<div id="user-settings-tab-keyboard"></div>');
 
         $('<div class="keyboard-shortcut-entry keyboard-shortcut-list-header">'+
-        '<div class="keyboard-shortcut-entry-key keyboard-shortcut-entry-text"><input id="user-settings-tab-keyboard-filter" type="text" data-i18n="[placeholder]keyboard.filterActions"></div>'+
-        '<div class="keyboard-shortcut-entry-key" data-i18n="keyboard.shortcut"></div>'+
-        '<div class="keyboard-shortcut-entry-scope" data-i18n="keyboard.scope"></div>'+
+        '<div class="keyboard-shortcut-entry-key keyboard-shortcut-entry-text"><input id="user-settings-tab-keyboard-filter" type="text" placeholder="filter actions"></div>'+
+        '<div class="keyboard-shortcut-entry-key">shortcut</div>'+
+        '<div class="keyboard-shortcut-entry-scope">scope</div>'+
         '</div>').appendTo(pane);
 
         pane.find("input").searchBox({
diff -ruN node-red-src/editor/js/ui/npm.js node-red-src_ttb/editor/js/ui/npm.js
--- node-red-src/editor/js/ui/npm.js	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/editor/js/ui/npm.js	2017-09-26 15:24:25.339211600 +0000
@@ -0,0 +1,262 @@
+ /**
+ * Copyright 2015 IBM Corp.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ **/
+
+
+RED.npmInstallNode = (function() {
+
+    var dialog;
+    var dialogContainer;
+    var importNodesDialog;
+
+    function setupDialogs(){
+        var fakeProgressRunning = false;
+        var progressTimer;
+        var fakeTimer;
+        RED.comms.subscribe("npmInstall",function(topic,msg) {
+            if(msg.hasOwnProperty("status")){
+                if (msg.status == "success"){
+                    success();
+                } else if (msg.status == "error"){
+                    fail();
+                }
+            }
+            if (msg.hasOwnProperty("progressbarTime")){
+                startProgressBar(Number(msg.progressbarTime));
+            }
+        });
+        function closeProgressBar(){
+            $("#import-progress-bar").hide();
+            $("#import-progress-value").attr("value",0); 
+        }
+        function startFakeProgressBar(){
+            fakeProgressRunning = true;
+            var val = $("#import-progress-value").attr("value");
+            val = Number(val);
+            if(val < 9){
+                var nextVal = val+0.025;
+                fakeTimer = setTimeout(function(){
+                    $("#import-progress-value").attr("value",nextVal);
+                    startFakeProgressBar(nextVal);
+                },25);
+            } else {
+                fakeProgressRunning = false;
+            }
+            
+        }
+
+        function startProgressBar(v){
+            if (fakeProgressRunning) {
+                setTimeout(function(){
+                    startProgressBar(v);
+                }, 3000);
+            } else {
+                progressBar(v);
+            }
+        }
+
+        function progressBar(v){
+            var val = $("#import-progress-value").attr("value");
+            if (val < 100){                
+                var nextVal = Number(val)+0.025;
+                var seuil = 85;
+                var x;
+                if (val < seuil){
+                    x = v/4;                                        
+                } else {
+                    x = (v/4)*Math.exp(val-seuil);
+                }
+                progressTimer = setTimeout(function(){
+                    $("#import-progress-value").attr("value",nextVal);   
+                    progressBar(v);
+                },x);
+            }
+        }
+        function success() {
+            $("#npmInstallNode-dialog-cancel").button("disable");
+            $("#npmInstallNode-dialog-reboot").button("enable");
+            clearTimeout(fakeTimer);
+            clearTimeout(progressTimer);
+            setTimeout(function(){
+                $("#import-progress-value").attr("value",100);
+                setTimeout(closeProgressBar,1000);
+            },1000);
+        }
+        function fail(err) {            
+            clearTimeout(fakeTimer);
+            clearTimeout(progressTimer);
+            $("#npmInstallNode-dialog-cancel").click();
+            RED.notify(RED._("npmInstallNode.installFail", {}), "error");                                
+            closeProgressBar(); 
+        }
+        dialog = $('<div id="npmInstallNode-dialog" class="hide"><form class="dialog-form form-horizontal"></form></div>')
+            .appendTo("body")
+            .dialog({
+                modal: true,
+                autoOpen: false,
+                width: 500,
+                resizable: false,
+                buttons: [
+                    {
+                        id: "npmInstallNode-dialog-ok",
+                        text: RED._("npmInstallNode.install"),
+                        click: function() {                            
+                            clearTimeout(fakeTimer);
+                            clearTimeout(progressTimer);                            
+                            $("#import-progress-value").attr("value",0); 
+                            setTimeout(function(){
+                                $("#import-progress-value").attr("value",0); 
+                                var n = $("#npmInstallNode-import").val();
+                                $.post("/npm/install",{node:n});
+                                $("#import-progress-bar").show();
+                                startFakeProgressBar();
+                            },1000);
+                        }
+                    },
+                    {
+                        id: "npmInstallNode-dialog-cancel",
+                        text: RED._("common.label.cancel"),
+                        click: function() {
+                            $( this ).dialog( "close" );
+                        }
+                    },
+                    {
+                        id: "npmInstallNode-dialog-close",
+                        text: RED._("common.label.close"),
+                        click: function() {
+                            $( this ).dialog( "close" );
+                        }
+                    }, 
+                    {
+        				id : "npmInstallNode-dialog-reboot",
+        				text : RED._("common.label.reboot"),
+        				click : function () {
+        					$.ajax({
+        						type : "POST",
+        						url : "/inject/reboot"
+        					}),
+        					$(this).dialog("close")
+        				}
+        			}
+                ],
+                open: function(e) {
+                    if ($("#buttonForOpenConsole").length == 0){
+                        var divLink = $("<div></div>",{style:'width: auto; float: left; margin:1em .4em .0em .4em; test-align:center; vertical-align:middle', id: "buttonForOpenConsole"})
+                        $('<a />', {text: RED._("menu.label.console"), href: '/console.txt', target: "_blank"}).appendTo(divLink);
+                        divLink.appendTo($("#npmInstallNode-dialog").parent().find(".ui-dialog-buttonpane").find(".ui-dialog-buttonset"));
+                    }
+                    $(this).parent().find(".ui-dialog-titlebar-close").hide();
+                    $("#import-progress-bar").hide();
+                    $("#import-progress-value").attr("value",0); 
+                    RED.keyboard.disable();
+                },
+                close: function(e) {
+                    RED.keyboard.enable();
+                }
+        });
+
+        dialogContainer = dialog.children(".dialog-form");
+
+        importNodesDialog = 
+            '<div class="form-row">'+
+                '<input style="resize: none; width: 100%; border-radius: 0px;font-family: monospace; font-size: 12px; background:#eee; padding-left: 0.5em; box-sizing:border-box;" '+
+                        'id="npmInstallNode-import" '+
+                        'rows="5" '+
+                        'placeholder="'+RED._("npmInstallNode.pasteNodes")+'" '+
+                '/>'+
+            '</div>'+
+            '<div class="form-row" id="import-progress-bar">'+
+                '<progress id="import-progress-value" value="0" min="0" max="100" style="width:100%;height:20px;">' +
+                    '0% ' +
+                '</progress>'+
+            '</div>';
+    }
+
+    function validateImport() {
+        var importInput = $("#npmInstallNode-import");
+        var v = importInput.val();
+        try {
+            importInput.removeClass("input-error");
+        } catch(err) {
+            if (v !== "") {
+                importInput.addClass("input-error");
+            }
+        }
+    }
+
+    function importNodes() {
+        dialogContainer.empty();
+        dialogContainer.append($(importNodesDialog));
+        $("#npmInstallNode-dialog-ok").show();
+        $("#npmInstallNode-dialog-cancel").show();
+	$("#npmInstallNode-dialog-reboot").show(),
+        $("#npmInstallNode-dialog-close").hide();
+	$("#npmInstallNode-dialog-reboot").button("disable"),
+        $("#npmInstallNode-import").keyup(validateImport);
+        $("#npmInstallNode-import").on('paste',function() { setTimeout(validateImport,10)});
+
+        dialog.dialog("option","title",RED._("npmInstallNode.importNodes")).dialog("open");
+    }
+
+
+    function hideDropTarget() {
+        $("#dropTarget").hide();
+        RED.keyboard.remove(/* ESCAPE */ 27);
+    }
+
+    return {
+        init: function() {
+            setupDialogs();
+            RED.events.on("view:selection-changed",function(selection) {
+                if (!selection.nodes) {
+                    RED.menu.setDisabled("menu-item-export",true);
+                    RED.menu.setDisabled("menu-item-export-clipboard",true);
+                    RED.menu.setDisabled("menu-item-export-library",true);
+                } else {
+                    RED.menu.setDisabled("menu-item-export",false);
+                    RED.menu.setDisabled("menu-item-export-clipboard",false);
+                    RED.menu.setDisabled("menu-item-export-library",false);
+                }
+            });
+
+
+            $('#chart').on("dragenter",function(event) {
+                if ($.inArray("text/plain",event.originalEvent.dataTransfer.types) != -1) {
+                    $("#dropTarget").css({display:'table'});
+                    RED.keyboard.add(/* ESCAPE */ 27,hideDropTarget);
+                }
+            });
+
+            $('#dropTarget').on("dragover",function(event) {
+                if ($.inArray("text/plain",event.originalEvent.dataTransfer.types) != -1) {
+                    event.preventDefault();
+                }
+            })
+            .on("dragleave",function(event) {
+                hideDropTarget();
+            })
+            .on("drop",function(event) {
+                var data = event.originalEvent.dataTransfer.getData("text/plain");
+                hideDropTarget();
+                RED.view.importNodes(data);
+                event.preventDefault();
+            });
+
+
+        },
+        import: importNodes,
+    }
+
+})();
diff -ruN node-red-src/editor/js/ui/palette-editor.js node-red-src_ttb/editor/js/ui/palette-editor.js
--- node-red-src/editor/js/ui/palette-editor.js	2017-09-27 10:53:14.578981560 +0000
+++ node-red-src_ttb/editor/js/ui/palette-editor.js	2017-09-26 15:24:25.309586300 +0000
@@ -423,7 +423,7 @@
 
         RED.userSettings.add({
             id:'palette',
-            title: RED._("palette.editor.palette"),
+            title: 'Palette',
             get: getSettingsPane,
             close: function() {
                 settingsPane.detach();
diff -ruN node-red-src/editor/js/ui/palette.js node-red-src_ttb/editor/js/ui/palette.js
--- node-red-src/editor/js/ui/palette.js	2017-09-27 10:53:14.578981560 +0000
+++ node-red-src_ttb/editor/js/ui/palette.js	2017-09-26 15:24:25.369249400 +0000
@@ -16,8 +16,8 @@
 
 RED.palette = (function() {
 
-    var exclusion = ['config','unknown','deprecated'];
-    var coreCategories = ['subflows', 'input', 'output', 'function', 'social', 'mobile', 'storage', 'analysis', 'advanced'];
+    var exclusion = ['config','unknown','deprecated','system'];
+    var coreCategories = ['input', 'output', 'function', 'subflows', 'social', 'mobile', 'storage', 'analysis', 'advanced'];
 
     var categoryContainers = {};
 
@@ -307,7 +307,11 @@
 
             var categoryNode = $("#palette-container-"+category);
             if (categoryNode.find(".palette_node").length === 1) {
-                categoryContainers[category].open();
+                if(category !== "basic") {
+                    categoryContainers[category].close();
+                } else {
+                    categoryContainers[category].open();
+                }
             }
 
         }
@@ -448,6 +452,9 @@
         }
         categoryList.forEach(function(category){
             createCategoryContainer(category, RED._("palette.label."+category,{defaultValue:category}));
+            if(category !== "basic") {
+                categoryContainers[category].close();
+            }
         });
 
         $("#palette-collapse-all").on("click", function(e) {
diff -ruN node-red-src/editor/js/ui/search.js node-red-src_ttb/editor/js/ui/search.js
--- node-red-src/editor/js/ui/search.js	2017-09-27 10:53:14.578981560 +0000
+++ node-red-src_ttb/editor/js/ui/search.js	2017-09-26 15:24:24.651205700 +0000
@@ -125,7 +125,7 @@
     function createDialog() {
         dialog = $("<div>",{id:"red-ui-search",class:"red-ui-search"}).appendTo("#main-container");
         var searchDiv = $("<div>",{class:"red-ui-search-container"}).appendTo(dialog);
-        searchInput = $('<input type="text" data-i18n="[placeholder]menu.label.searchInput">').appendTo(searchDiv).searchBox({
+        searchInput = $('<input type="text" placeholder="search your flows">').appendTo(searchDiv).searchBox({
             delay: 200,
             change: function() {
                 search($(this).val());
@@ -166,7 +166,6 @@
                 }
             }
         });
-        searchInput.i18n();
 
         var searchResultsDiv = $("<div>",{class:"red-ui-search-results-container"}).appendTo(dialog);
         searchResults = $('<ol>',{id:"search-result-list", style:"position: absolute;top: 5px;bottom: 5px;left: 5px;right: 5px;"}).appendTo(searchResultsDiv).editableList({
diff -ruN node-red-src/editor/js/ui/tab-info.js node-red-src_ttb/editor/js/ui/tab-info.js
--- node-red-src/editor/js/ui/tab-info.js	2017-09-27 10:53:14.578981560 +0000
+++ node-red-src_ttb/editor/js/ui/tab-info.js	2017-09-26 15:24:25.396883200 +0000
@@ -50,11 +50,11 @@
         }).hide();
 
         nodeSection = sections.add({
-            title: RED._("sidebar.info.node"),
+            title: "Node",
             collapsible: false
         });
         infoSection = sections.add({
-            title: RED._("sidebar.info.information"),
+            title: "Information",
             collapsible: false
         });
         infoSection.content.css("padding","6px");
@@ -132,15 +132,15 @@
         var propRow;
         var subflowNode;
         if (node.type === "tab") {
-            nodeSection.title.html(RED._("sidebar.info.flow"));
-            propRow = $('<tr class="node-info-node-row"><td>'+RED._("sidebar.info.tabName")+'</td><td></td></tr>').appendTo(tableBody);
+            nodeSection.title.html("Flow");
+            propRow = $('<tr class="node-info-node-row"><td>Name</td><td></td></tr>').appendTo(tableBody);
             $(propRow.children()[1]).html('&nbsp;'+(node.label||""))
             propRow = $('<tr class="node-info-node-row"><td>'+RED._("sidebar.info.id")+"</td><td></td></tr>").appendTo(tableBody);
             RED.utils.createObjectElement(node.id).appendTo(propRow.children()[1]);
-            propRow = $('<tr class="node-info-node-row"><td>'+RED._("sidebar.info.status")+'</td><td></td></tr>').appendTo(tableBody);
-            $(propRow.children()[1]).html((!!!node.disabled)?RED._("sidebar.info.enabled"):RED._("sidebar.info.disabled"))
+            propRow = $('<tr class="node-info-node-row"><td>Status</td><td></td></tr>').appendTo(tableBody);
+            $(propRow.children()[1]).html((!!!node.disabled)?"Enabled":"Disabled")
         } else {
-            nodeSection.title.html(RED._("sidebar.info.node"));
+            nodeSection.title.html("Node");
             if (node.type !== "subflow" && node.name) {
                 $('<tr class="node-info-node-row"><td>'+RED._("common.label.name")+'</td><td>&nbsp;<span class="bidiAware" dir="'+RED.text.bidi.resolveBaseTextDir(node.name)+'">'+node.name+'</span></td></tr>').appendTo(tableBody);
             }
@@ -188,7 +188,7 @@
                         }
                     }
                     if (count > 0) {
-                        $('<tr class="node-info-property-expand blank"><td colspan="2"><a href="#" class=" node-info-property-header'+(expandedSections.property?" expanded":"")+'"><span class="node-info-property-show-more">'+RED._("sidebar.info.showMore")+'</span><span class="node-info-property-show-less">'+RED._("sidebar.info.showLess")+'</span> <i class="fa fa-caret-down"></i></a></td></tr>').appendTo(tableBody);
+                        $('<tr class="node-info-property-expand blank"><td colspan="2"><a href="#" class=" node-info-property-header'+(expandedSections.property?" expanded":"")+'"><span class="node-info-property-show-more">show more</span><span class="node-info-property-show-less">show less</span> <i class="fa fa-caret-down"></i></a></td></tr>').appendTo(tableBody);
                     }
                 }
             }
diff -ruN node-red-src/editor/js/ui/thingboxSettings.js node-red-src_ttb/editor/js/ui/thingboxSettings.js
--- node-red-src/editor/js/ui/thingboxSettings.js	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/editor/js/ui/thingboxSettings.js	2017-09-26 15:24:25.442507800 +0000
@@ -0,0 +1,36 @@
+
+RED.thingboxSettings = (function() {
+
+	function init() {
+	    RED.userSettings.add({
+            id:'thingboxSettings',
+            title: 'TheThingBox',
+            get: getSettingsPane
+        })
+
+        RED.actions.add("core:show-user-ttbsettings",function() {
+            RED.userSettings.show('thingboxSettings');
+        });
+    }
+
+    function getSettingsPane() {
+    	var pane = $('<div id="user-settings-tab-thingboxSettings"></div>');
+        var iframeParam = $('<iframe>', {
+           src: '/form/settings',
+           id:  'thingboxSettings-iframe',
+           frameborder: 0,
+           width: '100%',
+           scrolling: 'auto'
+        })
+        iframeParam.load(function() {
+            $(this).height(Number($("#user-settings-tabs-content").height())-6);
+        });
+        iframeParam.appendTo(pane);
+    	return pane;
+    }
+
+    return {
+        init: init
+    }
+
+})();
\ No newline at end of file
diff -ruN node-red-src/editor/js/ui/tray.js node-red-src_ttb/editor/js/ui/tray.js
--- node-red-src/editor/js/ui/tray.js	2017-09-27 10:53:14.588981496 +0000
+++ node-red-src_ttb/editor/js/ui/tray.js	2017-09-26 15:24:25.264739600 +0000
@@ -34,10 +34,6 @@
         if (options.title) {
             $('<div class="editor-tray-titlebar">'+options.title+'</div>').appendTo(header);
         }
-        if (options.width === Infinity) {
-            options.maximized = true;
-            resizer.addClass('editor-tray-resize-maximised');
-        }
         var buttonBar = $('<div class="editor-tray-toolbar"></div>').appendTo(header);
         var primaryButton;
         if (options.buttons) {
@@ -78,8 +74,7 @@
         };
         stack.push(tray);
 
-        if (!options.maximized) {
-            el.draggable({
+        el.draggable({
                 handle: resizer,
                 axis: "x",
                 start:function(event,ui) {
@@ -108,7 +103,6 @@
                     tray.width = -ui.position.left;
                 }
             });
-        }
 
         function finishBuild() {
             $("#header-shade").show();
@@ -181,7 +175,7 @@
             var tray = stack[stack.length-1];
             var trayHeight = tray.tray.height()-tray.header.outerHeight()-tray.footer.outerHeight();
             tray.body.height(trayHeight);
-            if (tray.options.maximized || tray.width > $("#editor-stack").position().left-8) {
+            if (tray.width > $("#editor-stack").position().left-8) {
                 tray.width = $("#editor-stack").position().left-8;
                 tray.tray.width(tray.width);
                 // tray.body.parent().width(tray.width);
diff -ruN node-red-src/editor/js/ui/typeSearch.js node-red-src_ttb/editor/js/ui/typeSearch.js
--- node-red-src/editor/js/ui/typeSearch.js	2017-09-27 10:53:14.588981496 +0000
+++ node-red-src_ttb/editor/js/ui/typeSearch.js	2017-09-26 15:24:24.664239200 +0000
@@ -236,7 +236,7 @@
         var items = [];
         RED.nodes.registry.getNodeTypes().forEach(function(t) {
             var def = RED.nodes.getType(t);
-            if (def.category !== 'config' && t !== 'unknown' && t !== 'tab') {
+            if (def.category !== 'config' && t !== 'unknown') {
                 items.push({type:t,def: def, label:getTypeLabel(t,def)});
             }
         });
diff -ruN node-red-src/editor/js/ui/userSettings.js node-red-src_ttb/editor/js/ui/userSettings.js
--- node-red-src/editor/js/ui/userSettings.js	2017-09-27 10:53:14.588981496 +0000
+++ node-red-src_ttb/editor/js/ui/userSettings.js	2017-09-26 15:24:25.409417700 +0000
@@ -33,9 +33,17 @@
         var tabContainer;
 
         var trayOptions = {
-            title: RED._("menu.label.userSettings"),
+            title: "User Settings",
             buttons: [
                 {
+                    id: "node-dialog-reboot",
+                    text: RED._("menu.label.reboot"),
+                    class: "danger",
+                    click: function() {
+                        $.ajax({type: "POST", url: "/inject/reboot"});
+                    }
+                },
+                {
                     id: "node-dialog-ok",
                     text: RED._("common.label.close"),
                     class: "primary",
@@ -100,7 +108,7 @@
 
     var viewSettings = [
         {
-            title: "menu.label.view.grid",
+            title: "Grid",
             options: [
                 {setting:"view-show-grid",oldSetting:"menu-menu-item-view-show-grid",label:"menu.label.view.showGrid",toggle:true,onchange:"core:toggle-show-grid"},
                 {setting:"view-snap-grid",oldSetting:"menu-menu-item-view-snap-grid",label:"menu.label.view.snapGrid",toggle:true,onchange:"core:toggle-snap-grid"},
@@ -108,13 +116,13 @@
             ]
         },
         {
-            title: "menu.label.nodes",
+            title: "Nodes",
             options: [
                 {setting:"view-node-status",oldSetting:"menu-menu-item-status",label:"menu.label.displayStatus",default: true, toggle:true,onchange:"core:toggle-status"}
             ]
         },
         {
-            title: "menu.label.other",
+            title: "Other",
             options: [
                 {setting:"view-show-tips",oldSettings:"menu-menu-item-show-tips",label:"menu.label.showTips",toggle:true,default:true,onchange:"core:toggle-show-tips"}
             ]
@@ -128,7 +136,7 @@
         var pane = $('<div id="user-settings-tab-view" class="node-help"></div>');
 
         viewSettings.forEach(function(section) {
-            $('<h3></h3>').text(RED._(section.title)).appendTo(pane);
+            $('<h3></h3>').text(section.title).appendTo(pane);
             section.options.forEach(function(opt) {
                 var initialState = RED.settings.get(opt.setting);
                 var row = $('<div class="user-settings-row"></div>').appendTo(pane);
@@ -169,7 +177,7 @@
 
         addPane({
             id:'view',
-            title: RED._("menu.label.view.view"),
+            title: 'View',
             get: createViewPane,
             close: function() {
                 viewSettings.forEach(function(section) {
diff -ruN node-red-src/editor/js/ui/utils.js node-red-src_ttb/editor/js/ui/utils.js
--- node-red-src/editor/js/ui/utils.js	2017-09-27 10:53:14.588981496 +0000
+++ node-red-src_ttb/editor/js/ui/utils.js	2017-09-26 15:24:25.440502400 +0000
@@ -50,58 +50,24 @@
         }
         return result;
     }
-    function makeExpandable(el,onbuild,ontoggle,expand) {
+    function makeExpandable(el,onexpand,expand) {
         el.addClass("debug-message-expandable");
-        el.prop('toggle',function() {
-            return function(state) {
-                var parent = el.parent();
-                if (parent.hasClass('collapsed')) {
-                    if (state) {
-                        if (onbuild && !parent.hasClass('built')) {
-                            onbuild();
-                            parent.addClass('built');
-                        }
-                        parent.removeClass('collapsed');
-                        return true;
-                    }
-                } else {
-                    if (!state) {
-                        parent.addClass('collapsed');
-                        return true;
-                    }
-                }
-                return false;
-            }
-        });
         el.click(function(e) {
             var parent = $(this).parent();
-            var currentState = !parent.hasClass('collapsed');
-            if ($(this).prop('toggle')(!currentState)) {
-                if (ontoggle) {
-                    ontoggle(!currentState);
-                }
-            }
-            // if (parent.hasClass('collapsed')) {
-            //     if (onbuild && !parent.hasClass('built')) {
-            //         onbuild();
-            //         parent.addClass('built');
-            //     }
-            //     if (ontoggle) {
-            //         ontoggle(true);
-            //     }
-            //     parent.removeClass('collapsed');
-            // } else {
-            //     parent.addClass('collapsed');
-            //     if (ontoggle) {
-            //         ontoggle(false);
-            //     }
-            // }
+            if (parent.hasClass('collapsed')) {
+                if (onexpand && !parent.hasClass('built')) {
+                    onexpand();
+                    parent.addClass('built');
+                }
+                parent.removeClass('collapsed');
+            } else {
+                parent.addClass('collapsed');
+            }
             e.preventDefault();
         });
         if (expand) {
             el.click();
         }
-
     }
 
     var pinnedPaths = {};
@@ -223,23 +189,10 @@
         }
     }
 
-    function buildMessageElement(obj,options) {
-        options = options || {};
-        var key = options.key;
-        var typeHint = options.typeHint;
-        var hideKey = options.hideKey;
-        var path = options.path;
-        var sourceId = options.sourceId;
-        var rootPath = options.rootPath;
-        var expandPaths = options.expandPaths;
-        var ontoggle = options.ontoggle;
-        var exposeApi = options.exposeApi;
-
-        var subElements = {};
+    function buildMessageElement(obj,key,typeHint,hideKey,path,sourceId,rootPath,expandPaths) {
         var i;
         var e;
         var entryObj;
-        var expandableHeader;
         var header;
         var headerHead;
         var value;
@@ -304,7 +257,7 @@
                     $('<span class="debug-message-type-meta debug-message-object-type-header"></span>').html(typeHint||'string').appendTo(header);
                     var row = $('<div class="debug-message-object-entry collapsed"></div>').appendTo(element);
                     $('<pre class="debug-message-type-string"></pre>').text(obj).appendTo(row);
-                },function(state) {if (ontoggle) { ontoggle(path,state);}}, checkExpanded(strippedKey,expandPaths));
+                },checkExpanded(strippedKey,expandPaths));
             }
             e = $('<span class="debug-message-type-string debug-message-object-header"></span>').html('"'+formatString(sanitize(obj))+'"').appendTo(entryObj);
             if (/^#[0-9a-f]{6}$/i.test(obj)) {
@@ -403,20 +356,7 @@
                     if (fullLength <= 10) {
                         for (i=0;i<fullLength;i++) {
                             row = $('<div class="debug-message-object-entry collapsed"></div>').appendTo(arrayRows);
-                            subElements[path+"["+i+"]"] = buildMessageElement(
-                                data[i],
-                                {
-                                    key: ""+i,
-                                    typeHint: type==='buffer'?'hex':false,
-                                    hideKey: false,
-                                    path: path+"["+i+"]",
-                                    sourceId: sourceId,
-                                    rootPath: rootPath,
-                                    expandPaths: expandPaths,
-                                    ontoggle: ontoggle,
-                                    exposeApi: exposeApi
-                                }
-                            ).appendTo(row);
+                            buildMessageElement(data[i],""+i,type==='buffer'?'hex':false,false,path+"["+i+"]",sourceId,rootPath,expandPaths).appendTo(row);
                         }
                     } else {
                         for (i=0;i<fullLength;i+=10) {
@@ -431,35 +371,17 @@
                                 return function() {
                                     for (var i=min;i<=max;i++) {
                                         var row = $('<div class="debug-message-object-entry collapsed"></div>').appendTo(parent);
-                                        subElements[path+"["+i+"]"] = buildMessageElement(
-                                            data[i],
-                                            {
-                                                key: ""+i,
-                                                typeHint: type==='buffer'?'hex':false,
-                                                hideKey: false,
-                                                path: path+"["+i+"]",
-                                                sourceId: sourceId,
-                                                rootPath: rootPath,
-                                                expandPaths: expandPaths,
-                                                ontoggle: ontoggle,
-                                                exposeApi: exposeApi
-
-                                            }
-                                        ).appendTo(row);
+                                        buildMessageElement(data[i],""+i,type==='buffer'?'hex':false,false,path+"["+i+"]",sourceId,rootPath,expandPaths).appendTo(row);
                                     }
                                 }
-                            })(),
-                            (function() { var path = path+"["+i+"]"; return function(state) {if (ontoggle) { ontoggle(path,state);}}})(),
-                            checkExpanded(strippedKey,expandPaths,minRange,Math.min(fullLength-1,(minRange+9))));
+                            })(),checkExpanded(strippedKey,expandPaths,minRange,Math.min(fullLength-1,(minRange+9))));
                             $('<span class="debug-message-object-key"></span>').html("["+minRange+" &hellip; "+Math.min(fullLength-1,(minRange+9))+"]").appendTo(header);
                         }
                         if (fullLength < originalLength) {
                              $('<div class="debug-message-object-entry collapsed"><span class="debug-message-object-key">['+fullLength+' &hellip; '+originalLength+']</span></div>').appendTo(arrayRows);
                         }
                     }
-                },
-                function(state) {if (ontoggle) { ontoggle(path,state);}},
-                checkExpanded(strippedKey,expandPaths));
+                },checkExpanded(strippedKey,expandPaths));
             }
         } else if (typeof obj === 'object') {
             element.addClass('collapsed');
@@ -473,35 +395,17 @@
                     for (i=0;i<keys.length;i++) {
                         var row = $('<div class="debug-message-object-entry collapsed"></div>').appendTo(element);
                         var newPath = path;
-                        if (newPath) {
-                            if (/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(keys[i])) {
-                                newPath += (newPath.length > 0?".":"")+keys[i];
-                            } else {
-                                newPath += "[\""+keys[i].replace(/"/,"\\\"")+"\"]"
-                            }
+                        if (/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(keys[i])) {
+                            newPath += (newPath.length > 0?".":"")+keys[i];
+                        } else {
+                            newPath += "[\""+keys[i].replace(/"/,"\\\"")+"\"]"
                         }
-                        subElements[newPath] = buildMessageElement(
-                            obj[keys[i]],
-                            {
-                                key: keys[i],
-                                typeHint: false,
-                                hideKey: false,
-                                path: newPath,
-                                sourceId: sourceId,
-                                rootPath: rootPath,
-                                expandPaths: expandPaths,
-                                ontoggle: ontoggle,
-                                exposeApi: exposeApi
-
-                            }
-                        ).appendTo(row);
+                        buildMessageElement(obj[keys[i]],keys[i],false,false,newPath,sourceId,rootPath,expandPaths).appendTo(row);
                     }
                     if (keys.length === 0) {
                         $('<div class="debug-message-object-entry debug-message-type-meta collapsed"></div>').text("empty").appendTo(element);
                     }
-                },
-                function(state) {if (ontoggle) { ontoggle(path,state);}},
-                checkExpanded(strippedKey,expandPaths));
+                },checkExpanded(strippedKey,expandPaths));
             }
             if (key) {
                 $('<span class="debug-message-type-meta"></span>').html('object').appendTo(entryObj);
@@ -528,28 +432,6 @@
         } else {
             $('<span class="debug-message-type-other"></span>').text(""+obj).appendTo(entryObj);
         }
-        if (exposeApi) {
-            element.prop('expand', function() { return function(targetPath, state) {
-                if (path === targetPath) {
-                    if (header.prop('toggle')) {
-                        header.prop('toggle')(state);
-                    }
-                } else if (subElements[targetPath] && subElements[targetPath].prop('expand') ) {
-                    subElements[targetPath].prop('expand')(targetPath,state);
-                } else {
-                    for (var p in subElements) {
-                        if (subElements.hasOwnProperty(p)) {
-                            if (targetPath.indexOf(p) === 0) {
-                                if (subElements[p].prop('expand') ) {
-                                    subElements[p].prop('expand')(targetPath,state);
-                                }
-                                break;
-                            }
-                        }
-                    }
-                }
-            }});
-        }
         return element;
     }
 
@@ -696,8 +578,6 @@
             return "icons/node-red/subflow.png"
         } else if (node && node.type === 'unknown') {
             return "icons/node-red/alert.png"
-        } else if (node && node.type === 'subflow') {
-            return "icons/node-red/subflow.png"
         }
         var icon_url;
         if (typeof def.icon === "function") {
diff -ruN node-red-src/editor/js/ui/workspaces.js node-red-src_ttb/editor/js/ui/workspaces.js
--- node-red-src/editor/js/ui/workspaces.js	2017-09-27 10:53:14.588981496 +0000
+++ node-red-src_ttb/editor/js/ui/workspaces.js	2017-09-26 15:24:25.279732300 +0000
@@ -22,6 +22,14 @@
 
     function addWorkspace(ws,skipHistoryEntry) {
         if (ws) {
+            if(
+                ((typeof RED.settings.showall != "undefined" && RED.settings.showall.valueOf() === false) || typeof RED.settings.showall === "undefined")
+                &&
+                ((RED.settings.hiddenWorkspaces && RED.settings.hiddenWorkspaces.indexOf(ws.id) != -1) || ws.label.search("ttb-") === 0)
+            ) {
+                    workspace_tabs.addHiddenTab(ws);
+                    return;
+            }
             workspace_tabs.addTab(ws);
             workspace_tabs.resize();
         } else {
@@ -30,7 +38,7 @@
                 workspaceIndex += 1;
             } while ($("#workspace-tabs a[title='"+RED._('workspace.defaultName',{number:workspaceIndex})+"']").size() !== 0);
 
-            ws = {type:"tab",id:tabId,disabled: false,info:"",label:RED._('workspace.defaultName',{number:workspaceIndex})};
+            ws = {type:"tab",id:tabId,label:RED._('workspace.defaultName',{number:workspaceIndex})};
             RED.nodes.addWorkspace(ws);
             workspace_tabs.addTab(ws);
             workspace_tabs.activateTab(tabId);
diff -ruN node-red-src/editor/js/user.js node-red-src_ttb/editor/js/user.js
--- node-red-src/editor/js/user.js	2017-09-27 10:53:14.588981496 +0000
+++ node-red-src_ttb/editor/js/user.js	2017-09-26 15:24:24.607373500 +0000
@@ -50,7 +50,7 @@
                     for (;i<data.prompts.length;i++) {
                         var field = data.prompts[i];
                         var row = $("<div/>",{class:"form-row"});
-                        $('<label for="node-dialog-login-'+field.id+'">'+RED._(field.label)+':</label><br/>').appendTo(row);
+                        $('<label for="node-dialog-login-'+field.id+'">'+field.label+':</label><br/>').appendTo(row);
                         var input = $('<input style="width: 100%" id="node-dialog-login-'+field.id+'" type="'+field.type+'" tabIndex="'+(i+1)+'"/>').appendTo(row);
 
                         if (i<data.prompts.length-1) {
Binary files node-red-src/editor/logo.png and node-red-src_ttb/editor/logo.png differ
diff -ruN node-red-src/editor/sass/diff.scss node-red-src_ttb/editor/sass/diff.scss
--- node-red-src/editor/sass/diff.scss	2017-09-27 10:53:14.588981496 +0000
+++ node-red-src_ttb/editor/sass/diff.scss	2017-09-26 15:24:23.889066300 +0000
@@ -16,6 +16,8 @@
 
 
 #node-dialog-view-diff {
+    height: 600px;
+
     .red-ui-editableList-container {
         border-radius:1px;
         padding:0;
@@ -33,6 +35,7 @@
             border: none;
             min-height: 0;
         }
+
     }
     .red-ui-editableList-item-content {
         padding: 5px;
@@ -41,23 +44,19 @@
 }
 #node-dialog-view-diff-headers {
     position: absolute;
-    left:237px;
-    right:18px;
+    left:17px;
+    right:32px;
     top: 55px;
     height: 25px;
-    div {
-        height: 25px;
-        display: inline-block;
-        box-sizing: border-box;
-        width: 50%;
+    .node-diff-node-entry-cell:not(:first-child) {
         background: #f9f9f9;
         text-align: center;
         border-top: 1px solid $secondary-border-color;
         border-color:$secondary-border-color;
-        border-left: 1px solid $secondary-border-color;
     }
-    div:last-child {
+    .node-diff-node-entry-cell:last-child {
         border-right: 1px solid $secondary-border-color;
+
     }
 }
 
@@ -107,10 +106,10 @@
     font-size: 0.9em;
 
     &:first-child {
-        border-top: 1px solid $secondary-border-color;
+        border-top: 1px solid #eee;
     }
     &:not(:last-child) {
-        border-bottom: 1px solid $secondary-border-color;
+        border-bottom: 1px solid #eee;
     }
 
     &.collapsed {
@@ -133,21 +132,14 @@
     table {
         border-collapse: collapse;
         table-layout:fixed;
-        width: calc(100% - 20px);
-        margin-left: 20px;
-    }
-    col:first-child {
-        width: 180px;
-    }
-    col:not(:first-child) {
-        width: 100%;
+        
+        // Fix for table-layout: fixed on safari:
+        max-width: none;
+        width: auto;
+        min-width: 100%;
     }
     td, th {
-        border-top: 1px solid #f3f3f3;
-        border-left: 1px solid $secondary-border-color;
-        &:first-child {
-            border-left: none;
-        }
+        border: 1px solid $secondary-border-color;
         padding: 0 0 0 3px;
         text-align: left;
         overflow-x: auto;
@@ -158,12 +150,13 @@
             white-space:nowrap;
             overflow:hidden;
         }
-        &:hover {
-            background: #f9f9f9;
-        }
-
     }
-
+    td:first-child {
+        width: 140px;
+    }
+    td:not(:first-child) {
+        width: calc( 100% - 140px);
+    }
     td  {
         .node-diff-status {
             margin-left: 0;
@@ -186,8 +179,8 @@
             width: 220px;
         }
     }
-    col:not(:first-child) {
-        width:50%;
+    td:not(:first-child) {
+        width: calc( (100% - 140px) / 2);
     }
 
     .node-diff-node-entry {
@@ -217,9 +210,6 @@
     cursor: pointer;
     padding: 0;
     // background: #f6f6f6;
-    &:hover {
-        background: #f9f9f9;
-    }
 }
 .node-diff-tab-title-meta {
     vertical-align: middle;
@@ -228,9 +218,6 @@
 }
 .node-diff-node-entry-header {
     cursor: pointer;
-    &:hover {
-        background: #f9f9f9;
-    }
 }
 .node-diff-node-entry-node {
     vertical-align: middle;
@@ -260,9 +247,6 @@
     }
     .node-diff-tab-title {
         cursor: default;
-        &:hover {
-            background: none;
-        }
     }
 }
 .node-diff-node-deleted {
@@ -317,7 +301,7 @@
     }
 }
 .node-diff-node-entry-properties {
-    margin: 0;
+    margin: 5px ;
     color: #666;
 }
 .node-diff-status {
@@ -329,10 +313,6 @@
     margin-bottom: 6px;
     text-align: center;
 }
-.node-diff-element {
-    display: inline-block;
-    width: calc(100% - 20px);
-}
 
 .node-diff-node-description {
     color: $form-text-color;
@@ -366,7 +346,7 @@
     box-sizing: border-box;
     width: calc( (100% - 20px) / 2);
     height: 32px;
-    border-left: 1px solid $secondary-border-color;
+    border-left: 1px solid #eee;
     padding-top: 2px;
     white-space: nowrap;
     overflow: hidden;
diff -ruN node-red-src/editor/sass/editor.scss node-red-src_ttb/editor/sass/editor.scss
--- node-red-src/editor/sass/editor.scss	2017-09-27 10:53:14.588981496 +0000
+++ node-red-src_ttb/editor/sass/editor.scss	2017-09-26 15:24:23.908126900 +0000
@@ -132,11 +132,6 @@
     cursor: col-resize;
     border-left: 1px solid $primary-border-color;
     box-shadow: -1px 0 6px rgba(0,0,0,0.1);
-
-    &.editor-tray-resize-maximised {
-        background: $background-color;
-        cursor: default;
-    }
 }
 .editor-tray-resize-button {
     @include workspace-button;
@@ -201,7 +196,7 @@
     border-radius:5px;
     overflow: hidden;
     font-size: 14px !important;
-    font-family: Menlo, Consolas, 'DejaVu Sans Mono', Courier, monospace !important;
+    font-family: monospace !important;
 }
 
 .editor-button {
diff -ruN node-red-src/editor/sass/mixins.scss node-red-src_ttb/editor/sass/mixins.scss
--- node-red-src/editor/sass/mixins.scss	2017-09-27 10:53:14.598981432 +0000
+++ node-red-src_ttb/editor/sass/mixins.scss	2017-09-26 15:24:23.881021300 +0000
@@ -224,5 +224,4 @@
     bottom: 0;
     right: 0;
     background: $shade-color;
-    z-index: 5;
 }
diff -ruN node-red-src/editor/sass/progressbar.scss node-red-src_ttb/editor/sass/progressbar.scss
--- node-red-src/editor/sass/progressbar.scss	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/editor/sass/progressbar.scss	2017-09-26 15:24:23.868498200 +0000
@@ -0,0 +1,39 @@
+progress::-moz-progress-bar{
+    border-radius:0px;
+    background: #09c;
+    background-size: 300px 20px, auto, auto;
+    background-position: -300px 0, top, top;
+    background-position: top right, top, top;
+    box-shadow: 0 1px 0 rgba(255,255,255,.5) inset, 
+                0 -1px 0 rgba(0,0,0,.8) inset,
+                0 0 2px black;
+  
+}
+progress::-webkit-progress-value{
+    border-radius:0px;
+    background: #09c;
+    background-size: 300px 20px, auto, auto;
+    background-position: -300px 0, top, top;
+    background-position: top right, top, top;
+    box-shadow: 0 1px 0 rgba(255,255,255,.5) inset, 
+                0 -1px 0 rgba(0,0,0,.8) inset,
+                0 0 2px black;
+
+}
+progress::-webkit-progress-bar{
+    background: transparent;
+}
+progress{
+    display: inline-block;
+    -moz-box-sizing: border-box;
+         box-sizing: border-box;
+    padding: 3px 3px 2px 3px;
+    background: #F3F3F3; 
+    background: -webkit-linear-gradient(#EDEDED,#F3F3F3);
+    background:    -moz-linear-gradient(#EDEDED,#F3F3F3);
+    background:      -o-linear-gradient(#EDEDED,#F3F3F3);
+    background:         linear-gradient(#EDEDED,#F3F3F3);
+    border: 1px solid rgba(235,235,235,.5);
+    border-radius: 0px;
+    box-shadow: 0 1px 0 rgba(255,255,255,.2);   
+}
\ No newline at end of file
diff -ruN node-red-src/editor/sass/style.scss node-red-src_ttb/editor/sass/style.scss
--- node-red-src/editor/sass/style.scss	2017-09-27 10:53:14.598981432 +0000
+++ node-red-src_ttb/editor/sass/style.scss	2017-09-26 15:24:23.917840700 +0000
@@ -59,6 +59,8 @@
 
 @import "keyboard";
 
+@import "progressbar";
+
 @import "debug";
 
 body {
diff -ruN node-red-src/editor/templates/index.mst node-red-src_ttb/editor/templates/index.mst
--- node-red-src/editor/templates/index.mst	2017-09-27 10:53:14.598981432 +0000
+++ node-red-src_ttb/editor/templates/index.mst	2017-09-26 15:24:27.544595400 +0000
@@ -36,7 +36,13 @@
 </head>
 <body spellcheck="false">
 <div id="header">
-    <span class="logo">{{#header.url}}<a href="{{.}}">{{/header.url}}{{#header.image}}<img src="{{.}}" title="{{version}}">{{/header.image}} <span>{{ header.title }}</span>{{#header.url}}</a>{{/header.url}}</span>
+
+    <span class="logo">
+		<a target="_blank" href="http://thethingbox.io"><img src="logo.png" style="height:30px;"></a>	
+		<span>&nbsppowered by&nbsp</span>
+ 		<a target="_blank" href="http://nodered.org/"><img src="red/images/node-red.png" style="height:auto;"> <span>Node-RED</span></a>
+    </span>
+
     <ul class="header-toolbar hide">
         <li><a id="btn-sidemenu" class="button" data-toggle="dropdown" href="#"><i class="fa fa-bars"></i></a></li>
     </ul>
@@ -232,7 +238,51 @@
 <script src="vendor/ace/ace.js"></script>
 <script src="vendor/ace/ext-language_tools.js"></script>
 <script src="{{ asset.red }}"></script>
-<script src="{{ asset.main }}"></script>
+<script src="{{ asset.red_main }}"></script>
+<script src="{{ asset.red_events}}"></script>
+<script src="{{ asset.red_i18n}}"></script>
+<script src="{{ asset.red_settings}}"></script>
+<script src="{{ asset.red_user}}"></script>
+<script src="{{ asset.red_comms}}"></script>
+<script src="{{ asset.red_text_bidi}}"></script>
+<script src="{{ asset.red_text_format}}"></script>
+<script src="{{ asset.red_ui_state}}"></script>
+<script src="{{ asset.red_nodes}}"></script>
+<script src="{{ asset.red_history}}"></script>
+<script src="{{ asset.red_validators}}"></script>
+<script src="{{ asset.red_ui_utils}}"></script>
+<script src="{{ asset.red_ui_common_editableList}}"></script>
+<script src="{{ asset.red_ui_common_checkboxSet}}"></script>
+<script src="{{ asset.red_ui_common_menu}}"></script>
+<script src="{{ asset.red_ui_common_panels}}"></script>
+<script src="{{ asset.red_ui_common_popover}}"></script>
+<script src="{{ asset.red_ui_common_searchBox}}"></script>
+<script src="{{ asset.red_ui_common_tabs}}"></script>
+<script src="{{ asset.red_ui_common_stack}}"></script>
+<script src="{{ asset.red_ui_common_typedInput}}"></script>
+<script src="{{ asset.red_ui_actions}}"></script>
+<script src="{{ asset.red_ui_deploy}}"></script>
+<script src="{{ asset.red_ui_diff}}"></script>
+<script src="{{ asset.red_ui_keyboard}}"></script>
+<script src="{{ asset.red_ui_workspaces}}"></script>
+<script src="{{ asset.red_ui_view}}"></script>
+<script src="{{ asset.red_ui_sidebar}}"></script>
+<script src="{{ asset.red_ui_palette}}"></script>
+<script src="{{ asset.red_ui_tab_info}}"></script>
+<script src="{{ asset.red_ui_tab_config}}"></script>
+<script src="{{ asset.red_ui_palette_editor}}"></script>
+<script src="{{ asset.red_ui_editor}}"></script>
+<script src="{{ asset.red_ui_tray}}"></script>
+<script src="{{ asset.red_ui_clipboard}}"></script>
+<script src="{{ asset.red_ui_npm}}"></script>
+<script src="{{ asset.red_ui_library}}"></script>
+<script src="{{ asset.red_ui_notifications}}"></script>
+<script src="{{ asset.red_ui_search}}"></script>
+<script src="{{ asset.red_ui_thingboxSettings}}"></script>
+<script src="{{ asset.red_ui_typeSearch}}"></script>
+<script src="{{ asset.red_ui_subflow}}"></script>
+<script src="{{ asset.red_ui_userSettings}}"></script>
+<script src="{{ asset.red_ui_touch_radialMenu}}"></script>
 {{# page.scripts }}
 <script src="{{.}}"></script>
 {{/ page.scripts }}
diff -ruN node-red-src/editor/vendor/jquery/1.10.2.js node-red-src_ttb/editor/vendor/jquery/1.10.2.js
--- node-red-src/editor/vendor/jquery/1.10.2.js	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/editor/vendor/jquery/1.10.2.js	2017-09-11 12:45:30.942325500 +0000
@@ -0,0 +1,9789 @@
+/*!
+ * jQuery JavaScript Library v1.10.2
+ * http://jquery.com/
+ *
+ * Includes Sizzle.js
+ * http://sizzlejs.com/
+ *
+ * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
+ * Released under the MIT license
+ * http://jquery.org/license
+ *
+ * Date: 2013-07-03T13:48Z
+ */
+(function( window, undefined ) {
+
+// Can't do this because several apps including ASP.NET trace
+// the stack via arguments.caller.callee and Firefox dies if
+// you try to trace through "use strict" call chains. (#13335)
+// Support: Firefox 18+
+//"use strict";
+var
+	// The deferred used on DOM ready
+	readyList,
+
+	// A central reference to the root jQuery(document)
+	rootjQuery,
+
+	// Support: IE<10
+	// For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`
+	core_strundefined = typeof undefined,
+
+	// Use the correct document accordingly with window argument (sandbox)
+	location = window.location,
+	document = window.document,
+	docElem = document.documentElement,
+
+	// Map over jQuery in case of overwrite
+	_jQuery = window.jQuery,
+
+	// Map over the $ in case of overwrite
+	_$ = window.$,
+
+	// [[Class]] -> type pairs
+	class2type = {},
+
+	// List of deleted data cache ids, so we can reuse them
+	core_deletedIds = [],
+
+	core_version = "1.10.2",
+
+	// Save a reference to some core methods
+	core_concat = core_deletedIds.concat,
+	core_push = core_deletedIds.push,
+	core_slice = core_deletedIds.slice,
+	core_indexOf = core_deletedIds.indexOf,
+	core_toString = class2type.toString,
+	core_hasOwn = class2type.hasOwnProperty,
+	core_trim = core_version.trim,
+
+	// Define a local copy of jQuery
+	jQuery = function( selector, context ) {
+		// The jQuery object is actually just the init constructor 'enhanced'
+		return new jQuery.fn.init( selector, context, rootjQuery );
+	},
+
+	// Used for matching numbers
+	core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
+
+	// Used for splitting on whitespace
+	core_rnotwhite = /\S+/g,
+
+	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
+	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
+
+	// A simple way to check for HTML strings
+	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
+	// Strict HTML recognition (#11290: must start with <)
+	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
+
+	// Match a standalone tag
+	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
+
+	// JSON RegExp
+	rvalidchars = /^[\],:{}\s]*$/,
+	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
+	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
+	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,
+
+	// Matches dashed string for camelizing
+	rmsPrefix = /^-ms-/,
+	rdashAlpha = /-([\da-z])/gi,
+
+	// Used by jQuery.camelCase as callback to replace()
+	fcamelCase = function( all, letter ) {
+		return letter.toUpperCase();
+	},
+
+	// The ready event handler
+	completed = function( event ) {
+
+		// readyState === "complete" is good enough for us to call the dom ready in oldIE
+		if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
+			detach();
+			jQuery.ready();
+		}
+	},
+	// Clean-up method for dom ready events
+	detach = function() {
+		if ( document.addEventListener ) {
+			document.removeEventListener( "DOMContentLoaded", completed, false );
+			window.removeEventListener( "load", completed, false );
+
+		} else {
+			document.detachEvent( "onreadystatechange", completed );
+			window.detachEvent( "onload", completed );
+		}
+	};
+
+jQuery.fn = jQuery.prototype = {
+	// The current version of jQuery being used
+	jquery: core_version,
+
+	constructor: jQuery,
+	init: function( selector, context, rootjQuery ) {
+		var match, elem;
+
+		// HANDLE: $(""), $(null), $(undefined), $(false)
+		if ( !selector ) {
+			return this;
+		}
+
+		// Handle HTML strings
+		if ( typeof selector === "string" ) {
+			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
+				// Assume that strings that start and end with <> are HTML and skip the regex check
+				match = [ null, selector, null ];
+
+			} else {
+				match = rquickExpr.exec( selector );
+			}
+
+			// Match html or make sure no context is specified for #id
+			if ( match && (match[1] || !context) ) {
+
+				// HANDLE: $(html) -> $(array)
+				if ( match[1] ) {
+					context = context instanceof jQuery ? context[0] : context;
+
+					// scripts is true for back-compat
+					jQuery.merge( this, jQuery.parseHTML(
+						match[1],
+						context && context.nodeType ? context.ownerDocument || context : document,
+						true
+					) );
+
+					// HANDLE: $(html, props)
+					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
+						for ( match in context ) {
+							// Properties of context are called as methods if possible
+							if ( jQuery.isFunction( this[ match ] ) ) {
+								this[ match ]( context[ match ] );
+
+							// ...and otherwise set as attributes
+							} else {
+								this.attr( match, context[ match ] );
+							}
+						}
+					}
+
+					return this;
+
+				// HANDLE: $(#id)
+				} else {
+					elem = document.getElementById( match[2] );
+
+					// Check parentNode to catch when Blackberry 4.6 returns
+					// nodes that are no longer in the document #6963
+					if ( elem && elem.parentNode ) {
+						// Handle the case where IE and Opera return items
+						// by name instead of ID
+						if ( elem.id !== match[2] ) {
+							return rootjQuery.find( selector );
+						}
+
+						// Otherwise, we inject the element directly into the jQuery object
+						this.length = 1;
+						this[0] = elem;
+					}
+
+					this.context = document;
+					this.selector = selector;
+					return this;
+				}
+
+			// HANDLE: $(expr, $(...))
+			} else if ( !context || context.jquery ) {
+				return ( context || rootjQuery ).find( selector );
+
+			// HANDLE: $(expr, context)
+			// (which is just equivalent to: $(context).find(expr)
+			} else {
+				return this.constructor( context ).find( selector );
+			}
+
+		// HANDLE: $(DOMElement)
+		} else if ( selector.nodeType ) {
+			this.context = this[0] = selector;
+			this.length = 1;
+			return this;
+
+		// HANDLE: $(function)
+		// Shortcut for document ready
+		} else if ( jQuery.isFunction( selector ) ) {
+			return rootjQuery.ready( selector );
+		}
+
+		if ( selector.selector !== undefined ) {
+			this.selector = selector.selector;
+			this.context = selector.context;
+		}
+
+		return jQuery.makeArray( selector, this );
+	},
+
+	// Start with an empty selector
+	selector: "",
+
+	// The default length of a jQuery object is 0
+	length: 0,
+
+	toArray: function() {
+		return core_slice.call( this );
+	},
+
+	// Get the Nth element in the matched element set OR
+	// Get the whole matched element set as a clean array
+	get: function( num ) {
+		return num == null ?
+
+			// Return a 'clean' array
+			this.toArray() :
+
+			// Return just the object
+			( num < 0 ? this[ this.length + num ] : this[ num ] );
+	},
+
+	// Take an array of elements and push it onto the stack
+	// (returning the new matched element set)
+	pushStack: function( elems ) {
+
+		// Build a new jQuery matched element set
+		var ret = jQuery.merge( this.constructor(), elems );
+
+		// Add the old object onto the stack (as a reference)
+		ret.prevObject = this;
+		ret.context = this.context;
+
+		// Return the newly-formed element set
+		return ret;
+	},
+
+	// Execute a callback for every element in the matched set.
+	// (You can seed the arguments with an array of args, but this is
+	// only used internally.)
+	each: function( callback, args ) {
+		return jQuery.each( this, callback, args );
+	},
+
+	ready: function( fn ) {
+		// Add the callback
+		jQuery.ready.promise().done( fn );
+
+		return this;
+	},
+
+	slice: function() {
+		return this.pushStack( core_slice.apply( this, arguments ) );
+	},
+
+	first: function() {
+		return this.eq( 0 );
+	},
+
+	last: function() {
+		return this.eq( -1 );
+	},
+
+	eq: function( i ) {
+		var len = this.length,
+			j = +i + ( i < 0 ? len : 0 );
+		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
+	},
+
+	map: function( callback ) {
+		return this.pushStack( jQuery.map(this, function( elem, i ) {
+			return callback.call( elem, i, elem );
+		}));
+	},
+
+	end: function() {
+		return this.prevObject || this.constructor(null);
+	},
+
+	// For internal use only.
+	// Behaves like an Array's method, not like a jQuery method.
+	push: core_push,
+	sort: [].sort,
+	splice: [].splice
+};
+
+// Give the init function the jQuery prototype for later instantiation
+jQuery.fn.init.prototype = jQuery.fn;
+
+jQuery.extend = jQuery.fn.extend = function() {
+	var src, copyIsArray, copy, name, options, clone,
+		target = arguments[0] || {},
+		i = 1,
+		length = arguments.length,
+		deep = false;
+
+	// Handle a deep copy situation
+	if ( typeof target === "boolean" ) {
+		deep = target;
+		target = arguments[1] || {};
+		// skip the boolean and the target
+		i = 2;
+	}
+
+	// Handle case when target is a string or something (possible in deep copy)
+	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
+		target = {};
+	}
+
+	// extend jQuery itself if only one argument is passed
+	if ( length === i ) {
+		target = this;
+		--i;
+	}
+
+	for ( ; i < length; i++ ) {
+		// Only deal with non-null/undefined values
+		if ( (options = arguments[ i ]) != null ) {
+			// Extend the base object
+			for ( name in options ) {
+				src = target[ name ];
+				copy = options[ name ];
+
+				// Prevent never-ending loop
+				if ( target === copy ) {
+					continue;
+				}
+
+				// Recurse if we're merging plain objects or arrays
+				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
+					if ( copyIsArray ) {
+						copyIsArray = false;
+						clone = src && jQuery.isArray(src) ? src : [];
+
+					} else {
+						clone = src && jQuery.isPlainObject(src) ? src : {};
+					}
+
+					// Never move original objects, clone them
+					target[ name ] = jQuery.extend( deep, clone, copy );
+
+				// Don't bring in undefined values
+				} else if ( copy !== undefined ) {
+					target[ name ] = copy;
+				}
+			}
+		}
+	}
+
+	// Return the modified object
+	return target;
+};
+
+jQuery.extend({
+	// Unique for each copy of jQuery on the page
+	// Non-digits removed to match rinlinejQuery
+	expando: "jQuery" + ( core_version + Math.random() ).replace( /\D/g, "" ),
+
+	noConflict: function( deep ) {
+		if ( window.$ === jQuery ) {
+			window.$ = _$;
+		}
+
+		if ( deep && window.jQuery === jQuery ) {
+			window.jQuery = _jQuery;
+		}
+
+		return jQuery;
+	},
+
+	// Is the DOM ready to be used? Set to true once it occurs.
+	isReady: false,
+
+	// A counter to track how many items to wait for before
+	// the ready event fires. See #6781
+	readyWait: 1,
+
+	// Hold (or release) the ready event
+	holdReady: function( hold ) {
+		if ( hold ) {
+			jQuery.readyWait++;
+		} else {
+			jQuery.ready( true );
+		}
+	},
+
+	// Handle when the DOM is ready
+	ready: function( wait ) {
+
+		// Abort if there are pending holds or we're already ready
+		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
+			return;
+		}
+
+		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
+		if ( !document.body ) {
+			return setTimeout( jQuery.ready );
+		}
+
+		// Remember that the DOM is ready
+		jQuery.isReady = true;
+
+		// If a normal DOM Ready event fired, decrement, and wait if need be
+		if ( wait !== true && --jQuery.readyWait > 0 ) {
+			return;
+		}
+
+		// If there are functions bound, to execute
+		readyList.resolveWith( document, [ jQuery ] );
+
+		// Trigger any bound ready events
+		if ( jQuery.fn.trigger ) {
+			jQuery( document ).trigger("ready").off("ready");
+		}
+	},
+
+	// See test/unit/core.js for details concerning isFunction.
+	// Since version 1.3, DOM methods and functions like alert
+	// aren't supported. They return false on IE (#2968).
+	isFunction: function( obj ) {
+		return jQuery.type(obj) === "function";
+	},
+
+	isArray: Array.isArray || function( obj ) {
+		return jQuery.type(obj) === "array";
+	},
+
+	isWindow: function( obj ) {
+		/* jshint eqeqeq: false */
+		return obj != null && obj == obj.window;
+	},
+
+	isNumeric: function( obj ) {
+		return !isNaN( parseFloat(obj) ) && isFinite( obj );
+	},
+
+	type: function( obj ) {
+		if ( obj == null ) {
+			return String( obj );
+		}
+		return typeof obj === "object" || typeof obj === "function" ?
+			class2type[ core_toString.call(obj) ] || "object" :
+			typeof obj;
+	},
+
+	isPlainObject: function( obj ) {
+		var key;
+
+		// Must be an Object.
+		// Because of IE, we also have to check the presence of the constructor property.
+		// Make sure that DOM nodes and window objects don't pass through, as well
+		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
+			return false;
+		}
+
+		try {
+			// Not own constructor property must be Object
+			if ( obj.constructor &&
+				!core_hasOwn.call(obj, "constructor") &&
+				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
+				return false;
+			}
+		} catch ( e ) {
+			// IE8,9 Will throw exceptions on certain host objects #9897
+			return false;
+		}
+
+		// Support: IE<9
+		// Handle iteration over inherited properties before own properties.
+		if ( jQuery.support.ownLast ) {
+			for ( key in obj ) {
+				return core_hasOwn.call( obj, key );
+			}
+		}
+
+		// Own properties are enumerated firstly, so to speed up,
+		// if last one is own, then all properties are own.
+		for ( key in obj ) {}
+
+		return key === undefined || core_hasOwn.call( obj, key );
+	},
+
+	isEmptyObject: function( obj ) {
+		var name;
+		for ( name in obj ) {
+			return false;
+		}
+		return true;
+	},
+
+	error: function( msg ) {
+		throw new Error( msg );
+	},
+
+	// data: string of html
+	// context (optional): If specified, the fragment will be created in this context, defaults to document
+	// keepScripts (optional): If true, will include scripts passed in the html string
+	parseHTML: function( data, context, keepScripts ) {
+		if ( !data || typeof data !== "string" ) {
+			return null;
+		}
+		if ( typeof context === "boolean" ) {
+			keepScripts = context;
+			context = false;
+		}
+		context = context || document;
+
+		var parsed = rsingleTag.exec( data ),
+			scripts = !keepScripts && [];
+
+		// Single tag
+		if ( parsed ) {
+			return [ context.createElement( parsed[1] ) ];
+		}
+
+		parsed = jQuery.buildFragment( [ data ], context, scripts );
+		if ( scripts ) {
+			jQuery( scripts ).remove();
+		}
+		return jQuery.merge( [], parsed.childNodes );
+	},
+
+	parseJSON: function( data ) {
+		// Attempt to parse using the native JSON parser first
+		if ( window.JSON && window.JSON.parse ) {
+			return window.JSON.parse( data );
+		}
+
+		if ( data === null ) {
+			return data;
+		}
+
+		if ( typeof data === "string" ) {
+
+			// Make sure leading/trailing whitespace is removed (IE can't handle it)
+			data = jQuery.trim( data );
+
+			if ( data ) {
+				// Make sure the incoming data is actual JSON
+				// Logic borrowed from http://json.org/json2.js
+				if ( rvalidchars.test( data.replace( rvalidescape, "@" )
+					.replace( rvalidtokens, "]" )
+					.replace( rvalidbraces, "")) ) {
+
+					return ( new Function( "return " + data ) )();
+				}
+			}
+		}
+
+		jQuery.error( "Invalid JSON: " + data );
+	},
+
+	// Cross-browser xml parsing
+	parseXML: function( data ) {
+		var xml, tmp;
+		if ( !data || typeof data !== "string" ) {
+			return null;
+		}
+		try {
+			if ( window.DOMParser ) { // Standard
+				tmp = new DOMParser();
+				xml = tmp.parseFromString( data , "text/xml" );
+			} else { // IE
+				xml = new ActiveXObject( "Microsoft.XMLDOM" );
+				xml.async = "false";
+				xml.loadXML( data );
+			}
+		} catch( e ) {
+			xml = undefined;
+		}
+		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
+			jQuery.error( "Invalid XML: " + data );
+		}
+		return xml;
+	},
+
+	noop: function() {},
+
+	// Evaluates a script in a global context
+	// Workarounds based on findings by Jim Driscoll
+	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
+	globalEval: function( data ) {
+		if ( data && jQuery.trim( data ) ) {
+			// We use execScript on Internet Explorer
+			// We use an anonymous function so that context is window
+			// rather than jQuery in Firefox
+			( window.execScript || function( data ) {
+				window[ "eval" ].call( window, data );
+			} )( data );
+		}
+	},
+
+	// Convert dashed to camelCase; used by the css and data modules
+	// Microsoft forgot to hump their vendor prefix (#9572)
+	camelCase: function( string ) {
+		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
+	},
+
+	nodeName: function( elem, name ) {
+		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
+	},
+
+	// args is for internal usage only
+	each: function( obj, callback, args ) {
+		var value,
+			i = 0,
+			length = obj.length,
+			isArray = isArraylike( obj );
+
+		if ( args ) {
+			if ( isArray ) {
+				for ( ; i < length; i++ ) {
+					value = callback.apply( obj[ i ], args );
+
+					if ( value === false ) {
+						break;
+					}
+				}
+			} else {
+				for ( i in obj ) {
+					value = callback.apply( obj[ i ], args );
+
+					if ( value === false ) {
+						break;
+					}
+				}
+			}
+
+		// A special, fast, case for the most common use of each
+		} else {
+			if ( isArray ) {
+				for ( ; i < length; i++ ) {
+					value = callback.call( obj[ i ], i, obj[ i ] );
+
+					if ( value === false ) {
+						break;
+					}
+				}
+			} else {
+				for ( i in obj ) {
+					value = callback.call( obj[ i ], i, obj[ i ] );
+
+					if ( value === false ) {
+						break;
+					}
+				}
+			}
+		}
+
+		return obj;
+	},
+
+	// Use native String.trim function wherever possible
+	trim: core_trim && !core_trim.call("\uFEFF\xA0") ?
+		function( text ) {
+			return text == null ?
+				"" :
+				core_trim.call( text );
+		} :
+
+		// Otherwise use our own trimming functionality
+		function( text ) {
+			return text == null ?
+				"" :
+				( text + "" ).replace( rtrim, "" );
+		},
+
+	// results is for internal usage only
+	makeArray: function( arr, results ) {
+		var ret = results || [];
+
+		if ( arr != null ) {
+			if ( isArraylike( Object(arr) ) ) {
+				jQuery.merge( ret,
+					typeof arr === "string" ?
+					[ arr ] : arr
+				);
+			} else {
+				core_push.call( ret, arr );
+			}
+		}
+
+		return ret;
+	},
+
+	inArray: function( elem, arr, i ) {
+		var len;
+
+		if ( arr ) {
+			if ( core_indexOf ) {
+				return core_indexOf.call( arr, elem, i );
+			}
+
+			len = arr.length;
+			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;
+
+			for ( ; i < len; i++ ) {
+				// Skip accessing in sparse arrays
+				if ( i in arr && arr[ i ] === elem ) {
+					return i;
+				}
+			}
+		}
+
+		return -1;
+	},
+
+	merge: function( first, second ) {
+		var l = second.length,
+			i = first.length,
+			j = 0;
+
+		if ( typeof l === "number" ) {
+			for ( ; j < l; j++ ) {
+				first[ i++ ] = second[ j ];
+			}
+		} else {
+			while ( second[j] !== undefined ) {
+				first[ i++ ] = second[ j++ ];
+			}
+		}
+
+		first.length = i;
+
+		return first;
+	},
+
+	grep: function( elems, callback, inv ) {
+		var retVal,
+			ret = [],
+			i = 0,
+			length = elems.length;
+		inv = !!inv;
+
+		// Go through the array, only saving the items
+		// that pass the validator function
+		for ( ; i < length; i++ ) {
+			retVal = !!callback( elems[ i ], i );
+			if ( inv !== retVal ) {
+				ret.push( elems[ i ] );
+			}
+		}
+
+		return ret;
+	},
+
+	// arg is for internal usage only
+	map: function( elems, callback, arg ) {
+		var value,
+			i = 0,
+			length = elems.length,
+			isArray = isArraylike( elems ),
+			ret = [];
+
+		// Go through the array, translating each of the items to their
+		if ( isArray ) {
+			for ( ; i < length; i++ ) {
+				value = callback( elems[ i ], i, arg );
+
+				if ( value != null ) {
+					ret[ ret.length ] = value;
+				}
+			}
+
+		// Go through every key on the object,
+		} else {
+			for ( i in elems ) {
+				value = callback( elems[ i ], i, arg );
+
+				if ( value != null ) {
+					ret[ ret.length ] = value;
+				}
+			}
+		}
+
+		// Flatten any nested arrays
+		return core_concat.apply( [], ret );
+	},
+
+	// A global GUID counter for objects
+	guid: 1,
+
+	// Bind a function to a context, optionally partially applying any
+	// arguments.
+	proxy: function( fn, context ) {
+		var args, proxy, tmp;
+
+		if ( typeof context === "string" ) {
+			tmp = fn[ context ];
+			context = fn;
+			fn = tmp;
+		}
+
+		// Quick check to determine if target is callable, in the spec
+		// this throws a TypeError, but we will just return undefined.
+		if ( !jQuery.isFunction( fn ) ) {
+			return undefined;
+		}
+
+		// Simulated bind
+		args = core_slice.call( arguments, 2 );
+		proxy = function() {
+			return fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );
+		};
+
+		// Set the guid of unique handler to the same of original handler, so it can be removed
+		proxy.guid = fn.guid = fn.guid || jQuery.guid++;
+
+		return proxy;
+	},
+
+	// Multifunctional method to get and set values of a collection
+	// The value/s can optionally be executed if it's a function
+	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
+		var i = 0,
+			length = elems.length,
+			bulk = key == null;
+
+		// Sets many values
+		if ( jQuery.type( key ) === "object" ) {
+			chainable = true;
+			for ( i in key ) {
+				jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
+			}
+
+		// Sets one value
+		} else if ( value !== undefined ) {
+			chainable = true;
+
+			if ( !jQuery.isFunction( value ) ) {
+				raw = true;
+			}
+
+			if ( bulk ) {
+				// Bulk operations run against the entire set
+				if ( raw ) {
+					fn.call( elems, value );
+					fn = null;
+
+				// ...except when executing function values
+				} else {
+					bulk = fn;
+					fn = function( elem, key, value ) {
+						return bulk.call( jQuery( elem ), value );
+					};
+				}
+			}
+
+			if ( fn ) {
+				for ( ; i < length; i++ ) {
+					fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
+				}
+			}
+		}
+
+		return chainable ?
+			elems :
+
+			// Gets
+			bulk ?
+				fn.call( elems ) :
+				length ? fn( elems[0], key ) : emptyGet;
+	},
+
+	now: function() {
+		return ( new Date() ).getTime();
+	},
+
+	// A method for quickly swapping in/out CSS properties to get correct calculations.
+	// Note: this method belongs to the css module but it's needed here for the support module.
+	// If support gets modularized, this method should be moved back to the css module.
+	swap: function( elem, options, callback, args ) {
+		var ret, name,
+			old = {};
+
+		// Remember the old values, and insert the new ones
+		for ( name in options ) {
+			old[ name ] = elem.style[ name ];
+			elem.style[ name ] = options[ name ];
+		}
+
+		ret = callback.apply( elem, args || [] );
+
+		// Revert the old values
+		for ( name in options ) {
+			elem.style[ name ] = old[ name ];
+		}
+
+		return ret;
+	}
+});
+
+jQuery.ready.promise = function( obj ) {
+	if ( !readyList ) {
+
+		readyList = jQuery.Deferred();
+
+		// Catch cases where $(document).ready() is called after the browser event has already occurred.
+		// we once tried to use readyState "interactive" here, but it caused issues like the one
+		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
+		if ( document.readyState === "complete" ) {
+			// Handle it asynchronously to allow scripts the opportunity to delay ready
+			setTimeout( jQuery.ready );
+
+		// Standards-based browsers support DOMContentLoaded
+		} else if ( document.addEventListener ) {
+			// Use the handy event callback
+			document.addEventListener( "DOMContentLoaded", completed, false );
+
+			// A fallback to window.onload, that will always work
+			window.addEventListener( "load", completed, false );
+
+		// If IE event model is used
+		} else {
+			// Ensure firing before onload, maybe late but safe also for iframes
+			document.attachEvent( "onreadystatechange", completed );
+
+			// A fallback to window.onload, that will always work
+			window.attachEvent( "onload", completed );
+
+			// If IE and not a frame
+			// continually check to see if the document is ready
+			var top = false;
+
+			try {
+				top = window.frameElement == null && document.documentElement;
+			} catch(e) {}
+
+			if ( top && top.doScroll ) {
+				(function doScrollCheck() {
+					if ( !jQuery.isReady ) {
+
+						try {
+							// Use the trick by Diego Perini
+							// http://javascript.nwbox.com/IEContentLoaded/
+							top.doScroll("left");
+						} catch(e) {
+							return setTimeout( doScrollCheck, 50 );
+						}
+
+						// detach all dom ready events
+						detach();
+
+						// and execute any waiting functions
+						jQuery.ready();
+					}
+				})();
+			}
+		}
+	}
+	return readyList.promise( obj );
+};
+
+// Populate the class2type map
+jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
+	class2type[ "[object " + name + "]" ] = name.toLowerCase();
+});
+
+function isArraylike( obj ) {
+	var length = obj.length,
+		type = jQuery.type( obj );
+
+	if ( jQuery.isWindow( obj ) ) {
+		return false;
+	}
+
+	if ( obj.nodeType === 1 && length ) {
+		return true;
+	}
+
+	return type === "array" || type !== "function" &&
+		( length === 0 ||
+		typeof length === "number" && length > 0 && ( length - 1 ) in obj );
+}
+
+// All jQuery objects should point back to these
+rootjQuery = jQuery(document);
+/*!
+ * Sizzle CSS Selector Engine v1.10.2
+ * http://sizzlejs.com/
+ *
+ * Copyright 2013 jQuery Foundation, Inc. and other contributors
+ * Released under the MIT license
+ * http://jquery.org/license
+ *
+ * Date: 2013-07-03
+ */
+(function( window, undefined ) {
+
+var i,
+	support,
+	cachedruns,
+	Expr,
+	getText,
+	isXML,
+	compile,
+	outermostContext,
+	sortInput,
+
+	// Local document vars
+	setDocument,
+	document,
+	docElem,
+	documentIsHTML,
+	rbuggyQSA,
+	rbuggyMatches,
+	matches,
+	contains,
+
+	// Instance-specific data
+	expando = "sizzle" + -(new Date()),
+	preferredDoc = window.document,
+	dirruns = 0,
+	done = 0,
+	classCache = createCache(),
+	tokenCache = createCache(),
+	compilerCache = createCache(),
+	hasDuplicate = false,
+	sortOrder = function( a, b ) {
+		if ( a === b ) {
+			hasDuplicate = true;
+			return 0;
+		}
+		return 0;
+	},
+
+	// General-purpose constants
+	strundefined = typeof undefined,
+	MAX_NEGATIVE = 1 << 31,
+
+	// Instance methods
+	hasOwn = ({}).hasOwnProperty,
+	arr = [],
+	pop = arr.pop,
+	push_native = arr.push,
+	push = arr.push,
+	slice = arr.slice,
+	// Use a stripped-down indexOf if we can't use a native one
+	indexOf = arr.indexOf || function( elem ) {
+		var i = 0,
+			len = this.length;
+		for ( ; i < len; i++ ) {
+			if ( this[i] === elem ) {
+				return i;
+			}
+		}
+		return -1;
+	},
+
+	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
+
+	// Regular expressions
+
+	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
+	whitespace = "[\\x20\\t\\r\\n\\f]",
+	// http://www.w3.org/TR/css3-syntax/#characters
+	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
+
+	// Loosely modeled on CSS identifier characters
+	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
+	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
+	identifier = characterEncoding.replace( "w", "w#" ),
+
+	// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
+	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +
+		"*(?:([*^$|!~]?=)" + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",
+
+	// Prefer arguments quoted,
+	//   then not containing pseudos/brackets,
+	//   then attribute selectors/non-parenthetical expressions,
+	//   then anything else
+	// These preferences are here to reduce the number of selectors
+	//   needing tokenize in the PSEUDO preFilter
+	pseudos = ":(" + characterEncoding + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + attributes.replace( 3, 8 ) + ")*)|.*)\\)|)",
+
+	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
+	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),
+
+	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
+	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),
+
+	rsibling = new RegExp( whitespace + "*[+~]" ),
+	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*)" + whitespace + "*\\]", "g" ),
+
+	rpseudo = new RegExp( pseudos ),
+	ridentifier = new RegExp( "^" + identifier + "$" ),
+
+	matchExpr = {
+		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
+		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
+		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
+		"ATTR": new RegExp( "^" + attributes ),
+		"PSEUDO": new RegExp( "^" + pseudos ),
+		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
+			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
+			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
+		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
+		// For use in libraries implementing .is()
+		// We use this for POS matching in `select`
+		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
+			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
+	},
+
+	rnative = /^[^{]+\{\s*\[native \w/,
+
+	// Easily-parseable/retrievable ID or TAG or CLASS selectors
+	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
+
+	rinputs = /^(?:input|select|textarea|button)$/i,
+	rheader = /^h\d$/i,
+
+	rescape = /'|\\/g,
+
+	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
+	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
+	funescape = function( _, escaped, escapedWhitespace ) {
+		var high = "0x" + escaped - 0x10000;
+		// NaN means non-codepoint
+		// Support: Firefox
+		// Workaround erroneous numeric interpretation of +"0x"
+		return high !== high || escapedWhitespace ?
+			escaped :
+			// BMP codepoint
+			high < 0 ?
+				String.fromCharCode( high + 0x10000 ) :
+				// Supplemental Plane codepoint (surrogate pair)
+				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
+	};
+
+// Optimize for push.apply( _, NodeList )
+try {
+	push.apply(
+		(arr = slice.call( preferredDoc.childNodes )),
+		preferredDoc.childNodes
+	);
+	// Support: Android<4.0
+	// Detect silently failing push.apply
+	arr[ preferredDoc.childNodes.length ].nodeType;
+} catch ( e ) {
+	push = { apply: arr.length ?
+
+		// Leverage slice if possible
+		function( target, els ) {
+			push_native.apply( target, slice.call(els) );
+		} :
+
+		// Support: IE<9
+		// Otherwise append directly
+		function( target, els ) {
+			var j = target.length,
+				i = 0;
+			// Can't trust NodeList.length
+			while ( (target[j++] = els[i++]) ) {}
+			target.length = j - 1;
+		}
+	};
+}
+
+function Sizzle( selector, context, results, seed ) {
+	var match, elem, m, nodeType,
+		// QSA vars
+		i, groups, old, nid, newContext, newSelector;
+
+	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
+		setDocument( context );
+	}
+
+	context = context || document;
+	results = results || [];
+
+	if ( !selector || typeof selector !== "string" ) {
+		return results;
+	}
+
+	if ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {
+		return [];
+	}
+
+	if ( documentIsHTML && !seed ) {
+
+		// Shortcuts
+		if ( (match = rquickExpr.exec( selector )) ) {
+			// Speed-up: Sizzle("#ID")
+			if ( (m = match[1]) ) {
+				if ( nodeType === 9 ) {
+					elem = context.getElementById( m );
+					// Check parentNode to catch when Blackberry 4.6 returns
+					// nodes that are no longer in the document #6963
+					if ( elem && elem.parentNode ) {
+						// Handle the case where IE, Opera, and Webkit return items
+						// by name instead of ID
+						if ( elem.id === m ) {
+							results.push( elem );
+							return results;
+						}
+					} else {
+						return results;
+					}
+				} else {
+					// Context is not a document
+					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
+						contains( context, elem ) && elem.id === m ) {
+						results.push( elem );
+						return results;
+					}
+				}
+
+			// Speed-up: Sizzle("TAG")
+			} else if ( match[2] ) {
+				push.apply( results, context.getElementsByTagName( selector ) );
+				return results;
+
+			// Speed-up: Sizzle(".CLASS")
+			} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {
+				push.apply( results, context.getElementsByClassName( m ) );
+				return results;
+			}
+		}
+
+		// QSA path
+		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
+			nid = old = expando;
+			newContext = context;
+			newSelector = nodeType === 9 && selector;
+
+			// qSA works strangely on Element-rooted queries
+			// We can work around this by specifying an extra ID on the root
+			// and working up from there (Thanks to Andrew Dupont for the technique)
+			// IE 8 doesn't work on object elements
+			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
+				groups = tokenize( selector );
+
+				if ( (old = context.getAttribute("id")) ) {
+					nid = old.replace( rescape, "\\$&" );
+				} else {
+					context.setAttribute( "id", nid );
+				}
+				nid = "[id='" + nid + "'] ";
+
+				i = groups.length;
+				while ( i-- ) {
+					groups[i] = nid + toSelector( groups[i] );
+				}
+				newContext = rsibling.test( selector ) && context.parentNode || context;
+				newSelector = groups.join(",");
+			}
+
+			if ( newSelector ) {
+				try {
+					push.apply( results,
+						newContext.querySelectorAll( newSelector )
+					);
+					return results;
+				} catch(qsaError) {
+				} finally {
+					if ( !old ) {
+						context.removeAttribute("id");
+					}
+				}
+			}
+		}
+	}
+
+	// All others
+	return select( selector.replace( rtrim, "$1" ), context, results, seed );
+}
+
+/**
+ * Create key-value caches of limited size
+ * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
+ *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
+ *	deleting the oldest entry
+ */
+function createCache() {
+	var keys = [];
+
+	function cache( key, value ) {
+		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
+		if ( keys.push( key += " " ) > Expr.cacheLength ) {
+			// Only keep the most recent entries
+			delete cache[ keys.shift() ];
+		}
+		return (cache[ key ] = value);
+	}
+	return cache;
+}
+
+/**
+ * Mark a function for special use by Sizzle
+ * @param {Function} fn The function to mark
+ */
+function markFunction( fn ) {
+	fn[ expando ] = true;
+	return fn;
+}
+
+/**
+ * Support testing using an element
+ * @param {Function} fn Passed the created div and expects a boolean result
+ */
+function assert( fn ) {
+	var div = document.createElement("div");
+
+	try {
+		return !!fn( div );
+	} catch (e) {
+		return false;
+	} finally {
+		// Remove from its parent by default
+		if ( div.parentNode ) {
+			div.parentNode.removeChild( div );
+		}
+		// release memory in IE
+		div = null;
+	}
+}
+
+/**
+ * Adds the same handler for all of the specified attrs
+ * @param {String} attrs Pipe-separated list of attributes
+ * @param {Function} handler The method that will be applied
+ */
+function addHandle( attrs, handler ) {
+	var arr = attrs.split("|"),
+		i = attrs.length;
+
+	while ( i-- ) {
+		Expr.attrHandle[ arr[i] ] = handler;
+	}
+}
+
+/**
+ * Checks document order of two siblings
+ * @param {Element} a
+ * @param {Element} b
+ * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
+ */
+function siblingCheck( a, b ) {
+	var cur = b && a,
+		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
+			( ~b.sourceIndex || MAX_NEGATIVE ) -
+			( ~a.sourceIndex || MAX_NEGATIVE );
+
+	// Use IE sourceIndex if available on both nodes
+	if ( diff ) {
+		return diff;
+	}
+
+	// Check if b follows a
+	if ( cur ) {
+		while ( (cur = cur.nextSibling) ) {
+			if ( cur === b ) {
+				return -1;
+			}
+		}
+	}
+
+	return a ? 1 : -1;
+}
+
+/**
+ * Returns a function to use in pseudos for input types
+ * @param {String} type
+ */
+function createInputPseudo( type ) {
+	return function( elem ) {
+		var name = elem.nodeName.toLowerCase();
+		return name === "input" && elem.type === type;
+	};
+}
+
+/**
+ * Returns a function to use in pseudos for buttons
+ * @param {String} type
+ */
+function createButtonPseudo( type ) {
+	return function( elem ) {
+		var name = elem.nodeName.toLowerCase();
+		return (name === "input" || name === "button") && elem.type === type;
+	};
+}
+
+/**
+ * Returns a function to use in pseudos for positionals
+ * @param {Function} fn
+ */
+function createPositionalPseudo( fn ) {
+	return markFunction(function( argument ) {
+		argument = +argument;
+		return markFunction(function( seed, matches ) {
+			var j,
+				matchIndexes = fn( [], seed.length, argument ),
+				i = matchIndexes.length;
+
+			// Match elements found at the specified indexes
+			while ( i-- ) {
+				if ( seed[ (j = matchIndexes[i]) ] ) {
+					seed[j] = !(matches[j] = seed[j]);
+				}
+			}
+		});
+	});
+}
+
+/**
+ * Detect xml
+ * @param {Element|Object} elem An element or a document
+ */
+isXML = Sizzle.isXML = function( elem ) {
+	// documentElement is verified for cases where it doesn't yet exist
+	// (such as loading iframes in IE - #4833)
+	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
+	return documentElement ? documentElement.nodeName !== "HTML" : false;
+};
+
+// Expose support vars for convenience
+support = Sizzle.support = {};
+
+/**
+ * Sets document-related variables once based on the current document
+ * @param {Element|Object} [doc] An element or document object to use to set the document
+ * @returns {Object} Returns the current document
+ */
+setDocument = Sizzle.setDocument = function( node ) {
+	var doc = node ? node.ownerDocument || node : preferredDoc,
+		parent = doc.defaultView;
+
+	// If no document and documentElement is available, return
+	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
+		return document;
+	}
+
+	// Set our document
+	document = doc;
+	docElem = doc.documentElement;
+
+	// Support tests
+	documentIsHTML = !isXML( doc );
+
+	// Support: IE>8
+	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
+	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
+	// IE6-8 do not support the defaultView property so parent will be undefined
+	if ( parent && parent.attachEvent && parent !== parent.top ) {
+		parent.attachEvent( "onbeforeunload", function() {
+			setDocument();
+		});
+	}
+
+	/* Attributes
+	---------------------------------------------------------------------- */
+
+	// Support: IE<8
+	// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)
+	support.attributes = assert(function( div ) {
+		div.className = "i";
+		return !div.getAttribute("className");
+	});
+
+	/* getElement(s)By*
+	---------------------------------------------------------------------- */
+
+	// Check if getElementsByTagName("*") returns only elements
+	support.getElementsByTagName = assert(function( div ) {
+		div.appendChild( doc.createComment("") );
+		return !div.getElementsByTagName("*").length;
+	});
+
+	// Check if getElementsByClassName can be trusted
+	support.getElementsByClassName = assert(function( div ) {
+		div.innerHTML = "<div class='a'></div><div class='a i'></div>";
+
+		// Support: Safari<4
+		// Catch class over-caching
+		div.firstChild.className = "i";
+		// Support: Opera<10
+		// Catch gEBCN failure to find non-leading classes
+		return div.getElementsByClassName("i").length === 2;
+	});
+
+	// Support: IE<10
+	// Check if getElementById returns elements by name
+	// The broken getElementById methods don't pick up programatically-set names,
+	// so use a roundabout getElementsByName test
+	support.getById = assert(function( div ) {
+		docElem.appendChild( div ).id = expando;
+		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
+	});
+
+	// ID find and filter
+	if ( support.getById ) {
+		Expr.find["ID"] = function( id, context ) {
+			if ( typeof context.getElementById !== strundefined && documentIsHTML ) {
+				var m = context.getElementById( id );
+				// Check parentNode to catch when Blackberry 4.6 returns
+				// nodes that are no longer in the document #6963
+				return m && m.parentNode ? [m] : [];
+			}
+		};
+		Expr.filter["ID"] = function( id ) {
+			var attrId = id.replace( runescape, funescape );
+			return function( elem ) {
+				return elem.getAttribute("id") === attrId;
+			};
+		};
+	} else {
+		// Support: IE6/7
+		// getElementById is not reliable as a find shortcut
+		delete Expr.find["ID"];
+
+		Expr.filter["ID"] =  function( id ) {
+			var attrId = id.replace( runescape, funescape );
+			return function( elem ) {
+				var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
+				return node && node.value === attrId;
+			};
+		};
+	}
+
+	// Tag
+	Expr.find["TAG"] = support.getElementsByTagName ?
+		function( tag, context ) {
+			if ( typeof context.getElementsByTagName !== strundefined ) {
+				return context.getElementsByTagName( tag );
+			}
+		} :
+		function( tag, context ) {
+			var elem,
+				tmp = [],
+				i = 0,
+				results = context.getElementsByTagName( tag );
+
+			// Filter out possible comments
+			if ( tag === "*" ) {
+				while ( (elem = results[i++]) ) {
+					if ( elem.nodeType === 1 ) {
+						tmp.push( elem );
+					}
+				}
+
+				return tmp;
+			}
+			return results;
+		};
+
+	// Class
+	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
+		if ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {
+			return context.getElementsByClassName( className );
+		}
+	};
+
+	/* QSA/matchesSelector
+	---------------------------------------------------------------------- */
+
+	// QSA and matchesSelector support
+
+	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
+	rbuggyMatches = [];
+
+	// qSa(:focus) reports false when true (Chrome 21)
+	// We allow this because of a bug in IE8/9 that throws an error
+	// whenever `document.activeElement` is accessed on an iframe
+	// So, we allow :focus to pass through QSA all the time to avoid the IE error
+	// See http://bugs.jquery.com/ticket/13378
+	rbuggyQSA = [];
+
+	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
+		// Build QSA regex
+		// Regex strategy adopted from Diego Perini
+		assert(function( div ) {
+			// Select is set to empty string on purpose
+			// This is to test IE's treatment of not explicitly
+			// setting a boolean content attribute,
+			// since its presence should be enough
+			// http://bugs.jquery.com/ticket/12359
+			div.innerHTML = "<select><option selected=''></option></select>";
+
+			// Support: IE8
+			// Boolean attributes and "value" are not treated correctly
+			if ( !div.querySelectorAll("[selected]").length ) {
+				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
+			}
+
+			// Webkit/Opera - :checked should return selected option elements
+			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
+			// IE8 throws error here and will not see later tests
+			if ( !div.querySelectorAll(":checked").length ) {
+				rbuggyQSA.push(":checked");
+			}
+		});
+
+		assert(function( div ) {
+
+			// Support: Opera 10-12/IE8
+			// ^= $= *= and empty values
+			// Should not select anything
+			// Support: Windows 8 Native Apps
+			// The type attribute is restricted during .innerHTML assignment
+			var input = doc.createElement("input");
+			input.setAttribute( "type", "hidden" );
+			div.appendChild( input ).setAttribute( "t", "" );
+
+			if ( div.querySelectorAll("[t^='']").length ) {
+				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
+			}
+
+			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
+			// IE8 throws error here and will not see later tests
+			if ( !div.querySelectorAll(":enabled").length ) {
+				rbuggyQSA.push( ":enabled", ":disabled" );
+			}
+
+			// Opera 10-11 does not throw on post-comma invalid pseudos
+			div.querySelectorAll("*,:x");
+			rbuggyQSA.push(",.*:");
+		});
+	}
+
+	if ( (support.matchesSelector = rnative.test( (matches = docElem.webkitMatchesSelector ||
+		docElem.mozMatchesSelector ||
+		docElem.oMatchesSelector ||
+		docElem.msMatchesSelector) )) ) {
+
+		assert(function( div ) {
+			// Check to see if it's possible to do matchesSelector
+			// on a disconnected node (IE 9)
+			support.disconnectedMatch = matches.call( div, "div" );
+
+			// This should fail with an exception
+			// Gecko does not error, returns false instead
+			matches.call( div, "[s!='']:x" );
+			rbuggyMatches.push( "!=", pseudos );
+		});
+	}
+
+	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
+	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );
+
+	/* Contains
+	---------------------------------------------------------------------- */
+
+	// Element contains another
+	// Purposefully does not implement inclusive descendent
+	// As in, an element does not contain itself
+	contains = rnative.test( docElem.contains ) || docElem.compareDocumentPosition ?
+		function( a, b ) {
+			var adown = a.nodeType === 9 ? a.documentElement : a,
+				bup = b && b.parentNode;
+			return a === bup || !!( bup && bup.nodeType === 1 && (
+				adown.contains ?
+					adown.contains( bup ) :
+					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
+			));
+		} :
+		function( a, b ) {
+			if ( b ) {
+				while ( (b = b.parentNode) ) {
+					if ( b === a ) {
+						return true;
+					}
+				}
+			}
+			return false;
+		};
+
+	/* Sorting
+	---------------------------------------------------------------------- */
+
+	// Document order sorting
+	sortOrder = docElem.compareDocumentPosition ?
+	function( a, b ) {
+
+		// Flag for duplicate removal
+		if ( a === b ) {
+			hasDuplicate = true;
+			return 0;
+		}
+
+		var compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b );
+
+		if ( compare ) {
+			// Disconnected nodes
+			if ( compare & 1 ||
+				(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {
+
+				// Choose the first element that is related to our preferred document
+				if ( a === doc || contains(preferredDoc, a) ) {
+					return -1;
+				}
+				if ( b === doc || contains(preferredDoc, b) ) {
+					return 1;
+				}
+
+				// Maintain original order
+				return sortInput ?
+					( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
+					0;
+			}
+
+			return compare & 4 ? -1 : 1;
+		}
+
+		// Not directly comparable, sort on existence of method
+		return a.compareDocumentPosition ? -1 : 1;
+	} :
+	function( a, b ) {
+		var cur,
+			i = 0,
+			aup = a.parentNode,
+			bup = b.parentNode,
+			ap = [ a ],
+			bp = [ b ];
+
+		// Exit early if the nodes are identical
+		if ( a === b ) {
+			hasDuplicate = true;
+			return 0;
+
+		// Parentless nodes are either documents or disconnected
+		} else if ( !aup || !bup ) {
+			return a === doc ? -1 :
+				b === doc ? 1 :
+				aup ? -1 :
+				bup ? 1 :
+				sortInput ?
+				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
+				0;
+
+		// If the nodes are siblings, we can do a quick check
+		} else if ( aup === bup ) {
+			return siblingCheck( a, b );
+		}
+
+		// Otherwise we need full lists of their ancestors for comparison
+		cur = a;
+		while ( (cur = cur.parentNode) ) {
+			ap.unshift( cur );
+		}
+		cur = b;
+		while ( (cur = cur.parentNode) ) {
+			bp.unshift( cur );
+		}
+
+		// Walk down the tree looking for a discrepancy
+		while ( ap[i] === bp[i] ) {
+			i++;
+		}
+
+		return i ?
+			// Do a sibling check if the nodes have a common ancestor
+			siblingCheck( ap[i], bp[i] ) :
+
+			// Otherwise nodes in our document sort first
+			ap[i] === preferredDoc ? -1 :
+			bp[i] === preferredDoc ? 1 :
+			0;
+	};
+
+	return doc;
+};
+
+Sizzle.matches = function( expr, elements ) {
+	return Sizzle( expr, null, null, elements );
+};
+
+Sizzle.matchesSelector = function( elem, expr ) {
+	// Set document vars if needed
+	if ( ( elem.ownerDocument || elem ) !== document ) {
+		setDocument( elem );
+	}
+
+	// Make sure that attribute selectors are quoted
+	expr = expr.replace( rattributeQuotes, "='$1']" );
+
+	if ( support.matchesSelector && documentIsHTML &&
+		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
+		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {
+
+		try {
+			var ret = matches.call( elem, expr );
+
+			// IE 9's matchesSelector returns false on disconnected nodes
+			if ( ret || support.disconnectedMatch ||
+					// As well, disconnected nodes are said to be in a document
+					// fragment in IE 9
+					elem.document && elem.document.nodeType !== 11 ) {
+				return ret;
+			}
+		} catch(e) {}
+	}
+
+	return Sizzle( expr, document, null, [elem] ).length > 0;
+};
+
+Sizzle.contains = function( context, elem ) {
+	// Set document vars if needed
+	if ( ( context.ownerDocument || context ) !== document ) {
+		setDocument( context );
+	}
+	return contains( context, elem );
+};
+
+Sizzle.attr = function( elem, name ) {
+	// Set document vars if needed
+	if ( ( elem.ownerDocument || elem ) !== document ) {
+		setDocument( elem );
+	}
+
+	var fn = Expr.attrHandle[ name.toLowerCase() ],
+		// Don't get fooled by Object.prototype properties (jQuery #13807)
+		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
+			fn( elem, name, !documentIsHTML ) :
+			undefined;
+
+	return val === undefined ?
+		support.attributes || !documentIsHTML ?
+			elem.getAttribute( name ) :
+			(val = elem.getAttributeNode(name)) && val.specified ?
+				val.value :
+				null :
+		val;
+};
+
+Sizzle.error = function( msg ) {
+	throw new Error( "Syntax error, unrecognized expression: " + msg );
+};
+
+/**
+ * Document sorting and removing duplicates
+ * @param {ArrayLike} results
+ */
+Sizzle.uniqueSort = function( results ) {
+	var elem,
+		duplicates = [],
+		j = 0,
+		i = 0;
+
+	// Unless we *know* we can detect duplicates, assume their presence
+	hasDuplicate = !support.detectDuplicates;
+	sortInput = !support.sortStable && results.slice( 0 );
+	results.sort( sortOrder );
+
+	if ( hasDuplicate ) {
+		while ( (elem = results[i++]) ) {
+			if ( elem === results[ i ] ) {
+				j = duplicates.push( i );
+			}
+		}
+		while ( j-- ) {
+			results.splice( duplicates[ j ], 1 );
+		}
+	}
+
+	return results;
+};
+
+/**
+ * Utility function for retrieving the text value of an array of DOM nodes
+ * @param {Array|Element} elem
+ */
+getText = Sizzle.getText = function( elem ) {
+	var node,
+		ret = "",
+		i = 0,
+		nodeType = elem.nodeType;
+
+	if ( !nodeType ) {
+		// If no nodeType, this is expected to be an array
+		for ( ; (node = elem[i]); i++ ) {
+			// Do not traverse comment nodes
+			ret += getText( node );
+		}
+	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
+		// Use textContent for elements
+		// innerText usage removed for consistency of new lines (see #11153)
+		if ( typeof elem.textContent === "string" ) {
+			return elem.textContent;
+		} else {
+			// Traverse its children
+			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
+				ret += getText( elem );
+			}
+		}
+	} else if ( nodeType === 3 || nodeType === 4 ) {
+		return elem.nodeValue;
+	}
+	// Do not include comment or processing instruction nodes
+
+	return ret;
+};
+
+Expr = Sizzle.selectors = {
+
+	// Can be adjusted by the user
+	cacheLength: 50,
+
+	createPseudo: markFunction,
+
+	match: matchExpr,
+
+	attrHandle: {},
+
+	find: {},
+
+	relative: {
+		">": { dir: "parentNode", first: true },
+		" ": { dir: "parentNode" },
+		"+": { dir: "previousSibling", first: true },
+		"~": { dir: "previousSibling" }
+	},
+
+	preFilter: {
+		"ATTR": function( match ) {
+			match[1] = match[1].replace( runescape, funescape );
+
+			// Move the given value to match[3] whether quoted or unquoted
+			match[3] = ( match[4] || match[5] || "" ).replace( runescape, funescape );
+
+			if ( match[2] === "~=" ) {
+				match[3] = " " + match[3] + " ";
+			}
+
+			return match.slice( 0, 4 );
+		},
+
+		"CHILD": function( match ) {
+			/* matches from matchExpr["CHILD"]
+				1 type (only|nth|...)
+				2 what (child|of-type)
+				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
+				4 xn-component of xn+y argument ([+-]?\d*n|)
+				5 sign of xn-component
+				6 x of xn-component
+				7 sign of y-component
+				8 y of y-component
+			*/
+			match[1] = match[1].toLowerCase();
+
+			if ( match[1].slice( 0, 3 ) === "nth" ) {
+				// nth-* requires argument
+				if ( !match[3] ) {
+					Sizzle.error( match[0] );
+				}
+
+				// numeric x and y parameters for Expr.filter.CHILD
+				// remember that false/true cast respectively to 0/1
+				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
+				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );
+
+			// other types prohibit arguments
+			} else if ( match[3] ) {
+				Sizzle.error( match[0] );
+			}
+
+			return match;
+		},
+
+		"PSEUDO": function( match ) {
+			var excess,
+				unquoted = !match[5] && match[2];
+
+			if ( matchExpr["CHILD"].test( match[0] ) ) {
+				return null;
+			}
+
+			// Accept quoted arguments as-is
+			if ( match[3] && match[4] !== undefined ) {
+				match[2] = match[4];
+
+			// Strip excess characters from unquoted arguments
+			} else if ( unquoted && rpseudo.test( unquoted ) &&
+				// Get excess from tokenize (recursively)
+				(excess = tokenize( unquoted, true )) &&
+				// advance to the next closing parenthesis
+				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {
+
+				// excess is a negative index
+				match[0] = match[0].slice( 0, excess );
+				match[2] = unquoted.slice( 0, excess );
+			}
+
+			// Return only captures needed by the pseudo filter method (type and argument)
+			return match.slice( 0, 3 );
+		}
+	},
+
+	filter: {
+
+		"TAG": function( nodeNameSelector ) {
+			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
+			return nodeNameSelector === "*" ?
+				function() { return true; } :
+				function( elem ) {
+					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
+				};
+		},
+
+		"CLASS": function( className ) {
+			var pattern = classCache[ className + " " ];
+
+			return pattern ||
+				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
+				classCache( className, function( elem ) {
+					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "" );
+				});
+		},
+
+		"ATTR": function( name, operator, check ) {
+			return function( elem ) {
+				var result = Sizzle.attr( elem, name );
+
+				if ( result == null ) {
+					return operator === "!=";
+				}
+				if ( !operator ) {
+					return true;
+				}
+
+				result += "";
+
+				return operator === "=" ? result === check :
+					operator === "!=" ? result !== check :
+					operator === "^=" ? check && result.indexOf( check ) === 0 :
+					operator === "*=" ? check && result.indexOf( check ) > -1 :
+					operator === "$=" ? check && result.slice( -check.length ) === check :
+					operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
+					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
+					false;
+			};
+		},
+
+		"CHILD": function( type, what, argument, first, last ) {
+			var simple = type.slice( 0, 3 ) !== "nth",
+				forward = type.slice( -4 ) !== "last",
+				ofType = what === "of-type";
+
+			return first === 1 && last === 0 ?
+
+				// Shortcut for :nth-*(n)
+				function( elem ) {
+					return !!elem.parentNode;
+				} :
+
+				function( elem, context, xml ) {
+					var cache, outerCache, node, diff, nodeIndex, start,
+						dir = simple !== forward ? "nextSibling" : "previousSibling",
+						parent = elem.parentNode,
+						name = ofType && elem.nodeName.toLowerCase(),
+						useCache = !xml && !ofType;
+
+					if ( parent ) {
+
+						// :(first|last|only)-(child|of-type)
+						if ( simple ) {
+							while ( dir ) {
+								node = elem;
+								while ( (node = node[ dir ]) ) {
+									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
+										return false;
+									}
+								}
+								// Reverse direction for :only-* (if we haven't yet done so)
+								start = dir = type === "only" && !start && "nextSibling";
+							}
+							return true;
+						}
+
+						start = [ forward ? parent.firstChild : parent.lastChild ];
+
+						// non-xml :nth-child(...) stores cache data on `parent`
+						if ( forward && useCache ) {
+							// Seek `elem` from a previously-cached index
+							outerCache = parent[ expando ] || (parent[ expando ] = {});
+							cache = outerCache[ type ] || [];
+							nodeIndex = cache[0] === dirruns && cache[1];
+							diff = cache[0] === dirruns && cache[2];
+							node = nodeIndex && parent.childNodes[ nodeIndex ];
+
+							while ( (node = ++nodeIndex && node && node[ dir ] ||
+
+								// Fallback to seeking `elem` from the start
+								(diff = nodeIndex = 0) || start.pop()) ) {
+
+								// When found, cache indexes on `parent` and break
+								if ( node.nodeType === 1 && ++diff && node === elem ) {
+									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
+									break;
+								}
+							}
+
+						// Use previously-cached element index if available
+						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
+							diff = cache[1];
+
+						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
+						} else {
+							// Use the same loop as above to seek `elem` from the start
+							while ( (node = ++nodeIndex && node && node[ dir ] ||
+								(diff = nodeIndex = 0) || start.pop()) ) {
+
+								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
+									// Cache the index of each encountered element
+									if ( useCache ) {
+										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
+									}
+
+									if ( node === elem ) {
+										break;
+									}
+								}
+							}
+						}
+
+						// Incorporate the offset, then check against cycle size
+						diff -= last;
+						return diff === first || ( diff % first === 0 && diff / first >= 0 );
+					}
+				};
+		},
+
+		"PSEUDO": function( pseudo, argument ) {
+			// pseudo-class names are case-insensitive
+			// http://www.w3.org/TR/selectors/#pseudo-classes
+			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
+			// Remember that setFilters inherits from pseudos
+			var args,
+				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
+					Sizzle.error( "unsupported pseudo: " + pseudo );
+
+			// The user may use createPseudo to indicate that
+			// arguments are needed to create the filter function
+			// just as Sizzle does
+			if ( fn[ expando ] ) {
+				return fn( argument );
+			}
+
+			// But maintain support for old signatures
+			if ( fn.length > 1 ) {
+				args = [ pseudo, pseudo, "", argument ];
+				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
+					markFunction(function( seed, matches ) {
+						var idx,
+							matched = fn( seed, argument ),
+							i = matched.length;
+						while ( i-- ) {
+							idx = indexOf.call( seed, matched[i] );
+							seed[ idx ] = !( matches[ idx ] = matched[i] );
+						}
+					}) :
+					function( elem ) {
+						return fn( elem, 0, args );
+					};
+			}
+
+			return fn;
+		}
+	},
+
+	pseudos: {
+		// Potentially complex pseudos
+		"not": markFunction(function( selector ) {
+			// Trim the selector passed to compile
+			// to avoid treating leading and trailing
+			// spaces as combinators
+			var input = [],
+				results = [],
+				matcher = compile( selector.replace( rtrim, "$1" ) );
+
+			return matcher[ expando ] ?
+				markFunction(function( seed, matches, context, xml ) {
+					var elem,
+						unmatched = matcher( seed, null, xml, [] ),
+						i = seed.length;
+
+					// Match elements unmatched by `matcher`
+					while ( i-- ) {
+						if ( (elem = unmatched[i]) ) {
+							seed[i] = !(matches[i] = elem);
+						}
+					}
+				}) :
+				function( elem, context, xml ) {
+					input[0] = elem;
+					matcher( input, null, xml, results );
+					return !results.pop();
+				};
+		}),
+
+		"has": markFunction(function( selector ) {
+			return function( elem ) {
+				return Sizzle( selector, elem ).length > 0;
+			};
+		}),
+
+		"contains": markFunction(function( text ) {
+			return function( elem ) {
+				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
+			};
+		}),
+
+		// "Whether an element is represented by a :lang() selector
+		// is based solely on the element's language value
+		// being equal to the identifier C,
+		// or beginning with the identifier C immediately followed by "-".
+		// The matching of C against the element's language value is performed case-insensitively.
+		// The identifier C does not have to be a valid language name."
+		// http://www.w3.org/TR/selectors/#lang-pseudo
+		"lang": markFunction( function( lang ) {
+			// lang value must be a valid identifier
+			if ( !ridentifier.test(lang || "") ) {
+				Sizzle.error( "unsupported lang: " + lang );
+			}
+			lang = lang.replace( runescape, funescape ).toLowerCase();
+			return function( elem ) {
+				var elemLang;
+				do {
+					if ( (elemLang = documentIsHTML ?
+						elem.lang :
+						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {
+
+						elemLang = elemLang.toLowerCase();
+						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
+					}
+				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
+				return false;
+			};
+		}),
+
+		// Miscellaneous
+		"target": function( elem ) {
+			var hash = window.location && window.location.hash;
+			return hash && hash.slice( 1 ) === elem.id;
+		},
+
+		"root": function( elem ) {
+			return elem === docElem;
+		},
+
+		"focus": function( elem ) {
+			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
+		},
+
+		// Boolean properties
+		"enabled": function( elem ) {
+			return elem.disabled === false;
+		},
+
+		"disabled": function( elem ) {
+			return elem.disabled === true;
+		},
+
+		"checked": function( elem ) {
+			// In CSS3, :checked should return both checked and selected elements
+			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
+			var nodeName = elem.nodeName.toLowerCase();
+			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
+		},
+
+		"selected": function( elem ) {
+			// Accessing this property makes selected-by-default
+			// options in Safari work properly
+			if ( elem.parentNode ) {
+				elem.parentNode.selectedIndex;
+			}
+
+			return elem.selected === true;
+		},
+
+		// Contents
+		"empty": function( elem ) {
+			// http://www.w3.org/TR/selectors/#empty-pseudo
+			// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
+			//   not comment, processing instructions, or others
+			// Thanks to Diego Perini for the nodeName shortcut
+			//   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
+			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
+				if ( elem.nodeName > "@" || elem.nodeType === 3 || elem.nodeType === 4 ) {
+					return false;
+				}
+			}
+			return true;
+		},
+
+		"parent": function( elem ) {
+			return !Expr.pseudos["empty"]( elem );
+		},
+
+		// Element/input types
+		"header": function( elem ) {
+			return rheader.test( elem.nodeName );
+		},
+
+		"input": function( elem ) {
+			return rinputs.test( elem.nodeName );
+		},
+
+		"button": function( elem ) {
+			var name = elem.nodeName.toLowerCase();
+			return name === "input" && elem.type === "button" || name === "button";
+		},
+
+		"text": function( elem ) {
+			var attr;
+			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
+			// use getAttribute instead to test this case
+			return elem.nodeName.toLowerCase() === "input" &&
+				elem.type === "text" &&
+				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === elem.type );
+		},
+
+		// Position-in-collection
+		"first": createPositionalPseudo(function() {
+			return [ 0 ];
+		}),
+
+		"last": createPositionalPseudo(function( matchIndexes, length ) {
+			return [ length - 1 ];
+		}),
+
+		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
+			return [ argument < 0 ? argument + length : argument ];
+		}),
+
+		"even": createPositionalPseudo(function( matchIndexes, length ) {
+			var i = 0;
+			for ( ; i < length; i += 2 ) {
+				matchIndexes.push( i );
+			}
+			return matchIndexes;
+		}),
+
+		"odd": createPositionalPseudo(function( matchIndexes, length ) {
+			var i = 1;
+			for ( ; i < length; i += 2 ) {
+				matchIndexes.push( i );
+			}
+			return matchIndexes;
+		}),
+
+		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
+			var i = argument < 0 ? argument + length : argument;
+			for ( ; --i >= 0; ) {
+				matchIndexes.push( i );
+			}
+			return matchIndexes;
+		}),
+
+		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
+			var i = argument < 0 ? argument + length : argument;
+			for ( ; ++i < length; ) {
+				matchIndexes.push( i );
+			}
+			return matchIndexes;
+		})
+	}
+};
+
+Expr.pseudos["nth"] = Expr.pseudos["eq"];
+
+// Add button/input type pseudos
+for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
+	Expr.pseudos[ i ] = createInputPseudo( i );
+}
+for ( i in { submit: true, reset: true } ) {
+	Expr.pseudos[ i ] = createButtonPseudo( i );
+}
+
+// Easy API for creating new setFilters
+function setFilters() {}
+setFilters.prototype = Expr.filters = Expr.pseudos;
+Expr.setFilters = new setFilters();
+
+function tokenize( selector, parseOnly ) {
+	var matched, match, tokens, type,
+		soFar, groups, preFilters,
+		cached = tokenCache[ selector + " " ];
+
+	if ( cached ) {
+		return parseOnly ? 0 : cached.slice( 0 );
+	}
+
+	soFar = selector;
+	groups = [];
+	preFilters = Expr.preFilter;
+
+	while ( soFar ) {
+
+		// Comma and first run
+		if ( !matched || (match = rcomma.exec( soFar )) ) {
+			if ( match ) {
+				// Don't consume trailing commas as valid
+				soFar = soFar.slice( match[0].length ) || soFar;
+			}
+			groups.push( tokens = [] );
+		}
+
+		matched = false;
+
+		// Combinators
+		if ( (match = rcombinators.exec( soFar )) ) {
+			matched = match.shift();
+			tokens.push({
+				value: matched,
+				// Cast descendant combinators to space
+				type: match[0].replace( rtrim, " " )
+			});
+			soFar = soFar.slice( matched.length );
+		}
+
+		// Filters
+		for ( type in Expr.filter ) {
+			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
+				(match = preFilters[ type ]( match ))) ) {
+				matched = match.shift();
+				tokens.push({
+					value: matched,
+					type: type,
+					matches: match
+				});
+				soFar = soFar.slice( matched.length );
+			}
+		}
+
+		if ( !matched ) {
+			break;
+		}
+	}
+
+	// Return the length of the invalid excess
+	// if we're just parsing
+	// Otherwise, throw an error or return tokens
+	return parseOnly ?
+		soFar.length :
+		soFar ?
+			Sizzle.error( selector ) :
+			// Cache the tokens
+			tokenCache( selector, groups ).slice( 0 );
+}
+
+function toSelector( tokens ) {
+	var i = 0,
+		len = tokens.length,
+		selector = "";
+	for ( ; i < len; i++ ) {
+		selector += tokens[i].value;
+	}
+	return selector;
+}
+
+function addCombinator( matcher, combinator, base ) {
+	var dir = combinator.dir,
+		checkNonElements = base && dir === "parentNode",
+		doneName = done++;
+
+	return combinator.first ?
+		// Check against closest ancestor/preceding element
+		function( elem, context, xml ) {
+			while ( (elem = elem[ dir ]) ) {
+				if ( elem.nodeType === 1 || checkNonElements ) {
+					return matcher( elem, context, xml );
+				}
+			}
+		} :
+
+		// Check against all ancestor/preceding elements
+		function( elem, context, xml ) {
+			var data, cache, outerCache,
+				dirkey = dirruns + " " + doneName;
+
+			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
+			if ( xml ) {
+				while ( (elem = elem[ dir ]) ) {
+					if ( elem.nodeType === 1 || checkNonElements ) {
+						if ( matcher( elem, context, xml ) ) {
+							return true;
+						}
+					}
+				}
+			} else {
+				while ( (elem = elem[ dir ]) ) {
+					if ( elem.nodeType === 1 || checkNonElements ) {
+						outerCache = elem[ expando ] || (elem[ expando ] = {});
+						if ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {
+							if ( (data = cache[1]) === true || data === cachedruns ) {
+								return data === true;
+							}
+						} else {
+							cache = outerCache[ dir ] = [ dirkey ];
+							cache[1] = matcher( elem, context, xml ) || cachedruns;
+							if ( cache[1] === true ) {
+								return true;
+							}
+						}
+					}
+				}
+			}
+		};
+}
+
+function elementMatcher( matchers ) {
+	return matchers.length > 1 ?
+		function( elem, context, xml ) {
+			var i = matchers.length;
+			while ( i-- ) {
+				if ( !matchers[i]( elem, context, xml ) ) {
+					return false;
+				}
+			}
+			return true;
+		} :
+		matchers[0];
+}
+
+function condense( unmatched, map, filter, context, xml ) {
+	var elem,
+		newUnmatched = [],
+		i = 0,
+		len = unmatched.length,
+		mapped = map != null;
+
+	for ( ; i < len; i++ ) {
+		if ( (elem = unmatched[i]) ) {
+			if ( !filter || filter( elem, context, xml ) ) {
+				newUnmatched.push( elem );
+				if ( mapped ) {
+					map.push( i );
+				}
+			}
+		}
+	}
+
+	return newUnmatched;
+}
+
+function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
+	if ( postFilter && !postFilter[ expando ] ) {
+		postFilter = setMatcher( postFilter );
+	}
+	if ( postFinder && !postFinder[ expando ] ) {
+		postFinder = setMatcher( postFinder, postSelector );
+	}
+	return markFunction(function( seed, results, context, xml ) {
+		var temp, i, elem,
+			preMap = [],
+			postMap = [],
+			preexisting = results.length,
+
+			// Get initial elements from seed or context
+			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),
+
+			// Prefilter to get matcher input, preserving a map for seed-results synchronization
+			matcherIn = preFilter && ( seed || !selector ) ?
+				condense( elems, preMap, preFilter, context, xml ) :
+				elems,
+
+			matcherOut = matcher ?
+				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
+				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?
+
+					// ...intermediate processing is necessary
+					[] :
+
+					// ...otherwise use results directly
+					results :
+				matcherIn;
+
+		// Find primary matches
+		if ( matcher ) {
+			matcher( matcherIn, matcherOut, context, xml );
+		}
+
+		// Apply postFilter
+		if ( postFilter ) {
+			temp = condense( matcherOut, postMap );
+			postFilter( temp, [], context, xml );
+
+			// Un-match failing elements by moving them back to matcherIn
+			i = temp.length;
+			while ( i-- ) {
+				if ( (elem = temp[i]) ) {
+					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
+				}
+			}
+		}
+
+		if ( seed ) {
+			if ( postFinder || preFilter ) {
+				if ( postFinder ) {
+					// Get the final matcherOut by condensing this intermediate into postFinder contexts
+					temp = [];
+					i = matcherOut.length;
+					while ( i-- ) {
+						if ( (elem = matcherOut[i]) ) {
+							// Restore matcherIn since elem is not yet a final match
+							temp.push( (matcherIn[i] = elem) );
+						}
+					}
+					postFinder( null, (matcherOut = []), temp, xml );
+				}
+
+				// Move matched elements from seed to results to keep them synchronized
+				i = matcherOut.length;
+				while ( i-- ) {
+					if ( (elem = matcherOut[i]) &&
+						(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {
+
+						seed[temp] = !(results[temp] = elem);
+					}
+				}
+			}
+
+		// Add elements to results, through postFinder if defined
+		} else {
+			matcherOut = condense(
+				matcherOut === results ?
+					matcherOut.splice( preexisting, matcherOut.length ) :
+					matcherOut
+			);
+			if ( postFinder ) {
+				postFinder( null, results, matcherOut, xml );
+			} else {
+				push.apply( results, matcherOut );
+			}
+		}
+	});
+}
+
+function matcherFromTokens( tokens ) {
+	var checkContext, matcher, j,
+		len = tokens.length,
+		leadingRelative = Expr.relative[ tokens[0].type ],
+		implicitRelative = leadingRelative || Expr.relative[" "],
+		i = leadingRelative ? 1 : 0,
+
+		// The foundational matcher ensures that elements are reachable from top-level context(s)
+		matchContext = addCombinator( function( elem ) {
+			return elem === checkContext;
+		}, implicitRelative, true ),
+		matchAnyContext = addCombinator( function( elem ) {
+			return indexOf.call( checkContext, elem ) > -1;
+		}, implicitRelative, true ),
+		matchers = [ function( elem, context, xml ) {
+			return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
+				(checkContext = context).nodeType ?
+					matchContext( elem, context, xml ) :
+					matchAnyContext( elem, context, xml ) );
+		} ];
+
+	for ( ; i < len; i++ ) {
+		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
+			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
+		} else {
+			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );
+
+			// Return special upon seeing a positional matcher
+			if ( matcher[ expando ] ) {
+				// Find the next relative operator (if any) for proper handling
+				j = ++i;
+				for ( ; j < len; j++ ) {
+					if ( Expr.relative[ tokens[j].type ] ) {
+						break;
+					}
+				}
+				return setMatcher(
+					i > 1 && elementMatcher( matchers ),
+					i > 1 && toSelector(
+						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
+						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
+					).replace( rtrim, "$1" ),
+					matcher,
+					i < j && matcherFromTokens( tokens.slice( i, j ) ),
+					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
+					j < len && toSelector( tokens )
+				);
+			}
+			matchers.push( matcher );
+		}
+	}
+
+	return elementMatcher( matchers );
+}
+
+function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
+	// A counter to specify which element is currently being matched
+	var matcherCachedRuns = 0,
+		bySet = setMatchers.length > 0,
+		byElement = elementMatchers.length > 0,
+		superMatcher = function( seed, context, xml, results, expandContext ) {
+			var elem, j, matcher,
+				setMatched = [],
+				matchedCount = 0,
+				i = "0",
+				unmatched = seed && [],
+				outermost = expandContext != null,
+				contextBackup = outermostContext,
+				// We must always have either seed elements or context
+				elems = seed || byElement && Expr.find["TAG"]( "*", expandContext && context.parentNode || context ),
+				// Use integer dirruns iff this is the outermost matcher
+				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);
+
+			if ( outermost ) {
+				outermostContext = context !== document && context;
+				cachedruns = matcherCachedRuns;
+			}
+
+			// Add elements passing elementMatchers directly to results
+			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
+			for ( ; (elem = elems[i]) != null; i++ ) {
+				if ( byElement && elem ) {
+					j = 0;
+					while ( (matcher = elementMatchers[j++]) ) {
+						if ( matcher( elem, context, xml ) ) {
+							results.push( elem );
+							break;
+						}
+					}
+					if ( outermost ) {
+						dirruns = dirrunsUnique;
+						cachedruns = ++matcherCachedRuns;
+					}
+				}
+
+				// Track unmatched elements for set filters
+				if ( bySet ) {
+					// They will have gone through all possible matchers
+					if ( (elem = !matcher && elem) ) {
+						matchedCount--;
+					}
+
+					// Lengthen the array for every element, matched or not
+					if ( seed ) {
+						unmatched.push( elem );
+					}
+				}
+			}
+
+			// Apply set filters to unmatched elements
+			matchedCount += i;
+			if ( bySet && i !== matchedCount ) {
+				j = 0;
+				while ( (matcher = setMatchers[j++]) ) {
+					matcher( unmatched, setMatched, context, xml );
+				}
+
+				if ( seed ) {
+					// Reintegrate element matches to eliminate the need for sorting
+					if ( matchedCount > 0 ) {
+						while ( i-- ) {
+							if ( !(unmatched[i] || setMatched[i]) ) {
+								setMatched[i] = pop.call( results );
+							}
+						}
+					}
+
+					// Discard index placeholder values to get only actual matches
+					setMatched = condense( setMatched );
+				}
+
+				// Add matches to results
+				push.apply( results, setMatched );
+
+				// Seedless set matches succeeding multiple successful matchers stipulate sorting
+				if ( outermost && !seed && setMatched.length > 0 &&
+					( matchedCount + setMatchers.length ) > 1 ) {
+
+					Sizzle.uniqueSort( results );
+				}
+			}
+
+			// Override manipulation of globals by nested matchers
+			if ( outermost ) {
+				dirruns = dirrunsUnique;
+				outermostContext = contextBackup;
+			}
+
+			return unmatched;
+		};
+
+	return bySet ?
+		markFunction( superMatcher ) :
+		superMatcher;
+}
+
+compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
+	var i,
+		setMatchers = [],
+		elementMatchers = [],
+		cached = compilerCache[ selector + " " ];
+
+	if ( !cached ) {
+		// Generate a function of recursive functions that can be used to check each element
+		if ( !group ) {
+			group = tokenize( selector );
+		}
+		i = group.length;
+		while ( i-- ) {
+			cached = matcherFromTokens( group[i] );
+			if ( cached[ expando ] ) {
+				setMatchers.push( cached );
+			} else {
+				elementMatchers.push( cached );
+			}
+		}
+
+		// Cache the compiled function
+		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
+	}
+	return cached;
+};
+
+function multipleContexts( selector, contexts, results ) {
+	var i = 0,
+		len = contexts.length;
+	for ( ; i < len; i++ ) {
+		Sizzle( selector, contexts[i], results );
+	}
+	return results;
+}
+
+function select( selector, context, results, seed ) {
+	var i, tokens, token, type, find,
+		match = tokenize( selector );
+
+	if ( !seed ) {
+		// Try to minimize operations if there is only one group
+		if ( match.length === 1 ) {
+
+			// Take a shortcut and set the context if the root selector is an ID
+			tokens = match[0] = match[0].slice( 0 );
+			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
+					support.getById && context.nodeType === 9 && documentIsHTML &&
+					Expr.relative[ tokens[1].type ] ) {
+
+				context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
+				if ( !context ) {
+					return results;
+				}
+				selector = selector.slice( tokens.shift().value.length );
+			}
+
+			// Fetch a seed set for right-to-left matching
+			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
+			while ( i-- ) {
+				token = tokens[i];
+
+				// Abort if we hit a combinator
+				if ( Expr.relative[ (type = token.type) ] ) {
+					break;
+				}
+				if ( (find = Expr.find[ type ]) ) {
+					// Search, expanding context for leading sibling combinators
+					if ( (seed = find(
+						token.matches[0].replace( runescape, funescape ),
+						rsibling.test( tokens[0].type ) && context.parentNode || context
+					)) ) {
+
+						// If seed is empty or no tokens remain, we can return early
+						tokens.splice( i, 1 );
+						selector = seed.length && toSelector( tokens );
+						if ( !selector ) {
+							push.apply( results, seed );
+							return results;
+						}
+
+						break;
+					}
+				}
+			}
+		}
+	}
+
+	// Compile and execute a filtering function
+	// Provide `match` to avoid retokenization if we modified the selector above
+	compile( selector, match )(
+		seed,
+		context,
+		!documentIsHTML,
+		results,
+		rsibling.test( selector )
+	);
+	return results;
+}
+
+// One-time assignments
+
+// Sort stability
+support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;
+
+// Support: Chrome<14
+// Always assume duplicates if they aren't passed to the comparison function
+support.detectDuplicates = hasDuplicate;
+
+// Initialize against the default document
+setDocument();
+
+// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
+// Detached nodes confoundingly follow *each other*
+support.sortDetached = assert(function( div1 ) {
+	// Should return 1, but returns 4 (following)
+	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
+});
+
+// Support: IE<8
+// Prevent attribute/property "interpolation"
+// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
+if ( !assert(function( div ) {
+	div.innerHTML = "<a href='#'></a>";
+	return div.firstChild.getAttribute("href") === "#" ;
+}) ) {
+	addHandle( "type|href|height|width", function( elem, name, isXML ) {
+		if ( !isXML ) {
+			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
+		}
+	});
+}
+
+// Support: IE<9
+// Use defaultValue in place of getAttribute("value")
+if ( !support.attributes || !assert(function( div ) {
+	div.innerHTML = "<input/>";
+	div.firstChild.setAttribute( "value", "" );
+	return div.firstChild.getAttribute( "value" ) === "";
+}) ) {
+	addHandle( "value", function( elem, name, isXML ) {
+		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
+			return elem.defaultValue;
+		}
+	});
+}
+
+// Support: IE<9
+// Use getAttributeNode to fetch booleans when getAttribute lies
+if ( !assert(function( div ) {
+	return div.getAttribute("disabled") == null;
+}) ) {
+	addHandle( booleans, function( elem, name, isXML ) {
+		var val;
+		if ( !isXML ) {
+			return (val = elem.getAttributeNode( name )) && val.specified ?
+				val.value :
+				elem[ name ] === true ? name.toLowerCase() : null;
+		}
+	});
+}
+
+jQuery.find = Sizzle;
+jQuery.expr = Sizzle.selectors;
+jQuery.expr[":"] = jQuery.expr.pseudos;
+jQuery.unique = Sizzle.uniqueSort;
+jQuery.text = Sizzle.getText;
+jQuery.isXMLDoc = Sizzle.isXML;
+jQuery.contains = Sizzle.contains;
+
+
+})( window );
+// String to Object options format cache
+var optionsCache = {};
+
+// Convert String-formatted options into Object-formatted ones and store in cache
+function createOptions( options ) {
+	var object = optionsCache[ options ] = {};
+	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
+		object[ flag ] = true;
+	});
+	return object;
+}
+
+/*
+ * Create a callback list using the following parameters:
+ *
+ *	options: an optional list of space-separated options that will change how
+ *			the callback list behaves or a more traditional option object
+ *
+ * By default a callback list will act like an event callback list and can be
+ * "fired" multiple times.
+ *
+ * Possible options:
+ *
+ *	once:			will ensure the callback list can only be fired once (like a Deferred)
+ *
+ *	memory:			will keep track of previous values and will call any callback added
+ *					after the list has been fired right away with the latest "memorized"
+ *					values (like a Deferred)
+ *
+ *	unique:			will ensure a callback can only be added once (no duplicate in the list)
+ *
+ *	stopOnFalse:	interrupt callings when a callback returns false
+ *
+ */
+jQuery.Callbacks = function( options ) {
+
+	// Convert options from String-formatted to Object-formatted if needed
+	// (we check in cache first)
+	options = typeof options === "string" ?
+		( optionsCache[ options ] || createOptions( options ) ) :
+		jQuery.extend( {}, options );
+
+	var // Flag to know if list is currently firing
+		firing,
+		// Last fire value (for non-forgettable lists)
+		memory,
+		// Flag to know if list was already fired
+		fired,
+		// End of the loop when firing
+		firingLength,
+		// Index of currently firing callback (modified by remove if needed)
+		firingIndex,
+		// First callback to fire (used internally by add and fireWith)
+		firingStart,
+		// Actual callback list
+		list = [],
+		// Stack of fire calls for repeatable lists
+		stack = !options.once && [],
+		// Fire callbacks
+		fire = function( data ) {
+			memory = options.memory && data;
+			fired = true;
+			firingIndex = firingStart || 0;
+			firingStart = 0;
+			firingLength = list.length;
+			firing = true;
+			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
+				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
+					memory = false; // To prevent further calls using add
+					break;
+				}
+			}
+			firing = false;
+			if ( list ) {
+				if ( stack ) {
+					if ( stack.length ) {
+						fire( stack.shift() );
+					}
+				} else if ( memory ) {
+					list = [];
+				} else {
+					self.disable();
+				}
+			}
+		},
+		// Actual Callbacks object
+		self = {
+			// Add a callback or a collection of callbacks to the list
+			add: function() {
+				if ( list ) {
+					// First, we save the current length
+					var start = list.length;
+					(function add( args ) {
+						jQuery.each( args, function( _, arg ) {
+							var type = jQuery.type( arg );
+							if ( type === "function" ) {
+								if ( !options.unique || !self.has( arg ) ) {
+									list.push( arg );
+								}
+							} else if ( arg && arg.length && type !== "string" ) {
+								// Inspect recursively
+								add( arg );
+							}
+						});
+					})( arguments );
+					// Do we need to add the callbacks to the
+					// current firing batch?
+					if ( firing ) {
+						firingLength = list.length;
+					// With memory, if we're not firing then
+					// we should call right away
+					} else if ( memory ) {
+						firingStart = start;
+						fire( memory );
+					}
+				}
+				return this;
+			},
+			// Remove a callback from the list
+			remove: function() {
+				if ( list ) {
+					jQuery.each( arguments, function( _, arg ) {
+						var index;
+						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
+							list.splice( index, 1 );
+							// Handle firing indexes
+							if ( firing ) {
+								if ( index <= firingLength ) {
+									firingLength--;
+								}
+								if ( index <= firingIndex ) {
+									firingIndex--;
+								}
+							}
+						}
+					});
+				}
+				return this;
+			},
+			// Check if a given callback is in the list.
+			// If no argument is given, return whether or not list has callbacks attached.
+			has: function( fn ) {
+				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
+			},
+			// Remove all callbacks from the list
+			empty: function() {
+				list = [];
+				firingLength = 0;
+				return this;
+			},
+			// Have the list do nothing anymore
+			disable: function() {
+				list = stack = memory = undefined;
+				return this;
+			},
+			// Is it disabled?
+			disabled: function() {
+				return !list;
+			},
+			// Lock the list in its current state
+			lock: function() {
+				stack = undefined;
+				if ( !memory ) {
+					self.disable();
+				}
+				return this;
+			},
+			// Is it locked?
+			locked: function() {
+				return !stack;
+			},
+			// Call all callbacks with the given context and arguments
+			fireWith: function( context, args ) {
+				if ( list && ( !fired || stack ) ) {
+					args = args || [];
+					args = [ context, args.slice ? args.slice() : args ];
+					if ( firing ) {
+						stack.push( args );
+					} else {
+						fire( args );
+					}
+				}
+				return this;
+			},
+			// Call all the callbacks with the given arguments
+			fire: function() {
+				self.fireWith( this, arguments );
+				return this;
+			},
+			// To know if the callbacks have already been called at least once
+			fired: function() {
+				return !!fired;
+			}
+		};
+
+	return self;
+};
+jQuery.extend({
+
+	Deferred: function( func ) {
+		var tuples = [
+				// action, add listener, listener list, final state
+				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
+				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
+				[ "notify", "progress", jQuery.Callbacks("memory") ]
+			],
+			state = "pending",
+			promise = {
+				state: function() {
+					return state;
+				},
+				always: function() {
+					deferred.done( arguments ).fail( arguments );
+					return this;
+				},
+				then: function( /* fnDone, fnFail, fnProgress */ ) {
+					var fns = arguments;
+					return jQuery.Deferred(function( newDefer ) {
+						jQuery.each( tuples, function( i, tuple ) {
+							var action = tuple[ 0 ],
+								fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
+							// deferred[ done | fail | progress ] for forwarding actions to newDefer
+							deferred[ tuple[1] ](function() {
+								var returned = fn && fn.apply( this, arguments );
+								if ( returned && jQuery.isFunction( returned.promise ) ) {
+									returned.promise()
+										.done( newDefer.resolve )
+										.fail( newDefer.reject )
+										.progress( newDefer.notify );
+								} else {
+									newDefer[ action + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
+								}
+							});
+						});
+						fns = null;
+					}).promise();
+				},
+				// Get a promise for this deferred
+				// If obj is provided, the promise aspect is added to the object
+				promise: function( obj ) {
+					return obj != null ? jQuery.extend( obj, promise ) : promise;
+				}
+			},
+			deferred = {};
+
+		// Keep pipe for back-compat
+		promise.pipe = promise.then;
+
+		// Add list-specific methods
+		jQuery.each( tuples, function( i, tuple ) {
+			var list = tuple[ 2 ],
+				stateString = tuple[ 3 ];
+
+			// promise[ done | fail | progress ] = list.add
+			promise[ tuple[1] ] = list.add;
+
+			// Handle state
+			if ( stateString ) {
+				list.add(function() {
+					// state = [ resolved | rejected ]
+					state = stateString;
+
+				// [ reject_list | resolve_list ].disable; progress_list.lock
+				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
+			}
+
+			// deferred[ resolve | reject | notify ]
+			deferred[ tuple[0] ] = function() {
+				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
+				return this;
+			};
+			deferred[ tuple[0] + "With" ] = list.fireWith;
+		});
+
+		// Make the deferred a promise
+		promise.promise( deferred );
+
+		// Call given func if any
+		if ( func ) {
+			func.call( deferred, deferred );
+		}
+
+		// All done!
+		return deferred;
+	},
+
+	// Deferred helper
+	when: function( subordinate /* , ..., subordinateN */ ) {
+		var i = 0,
+			resolveValues = core_slice.call( arguments ),
+			length = resolveValues.length,
+
+			// the count of uncompleted subordinates
+			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,
+
+			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
+			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
+
+			// Update function for both resolve and progress values
+			updateFunc = function( i, contexts, values ) {
+				return function( value ) {
+					contexts[ i ] = this;
+					values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
+					if( values === progressValues ) {
+						deferred.notifyWith( contexts, values );
+					} else if ( !( --remaining ) ) {
+						deferred.resolveWith( contexts, values );
+					}
+				};
+			},
+
+			progressValues, progressContexts, resolveContexts;
+
+		// add listeners to Deferred subordinates; treat others as resolved
+		if ( length > 1 ) {
+			progressValues = new Array( length );
+			progressContexts = new Array( length );
+			resolveContexts = new Array( length );
+			for ( ; i < length; i++ ) {
+				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
+					resolveValues[ i ].promise()
+						.done( updateFunc( i, resolveContexts, resolveValues ) )
+						.fail( deferred.reject )
+						.progress( updateFunc( i, progressContexts, progressValues ) );
+				} else {
+					--remaining;
+				}
+			}
+		}
+
+		// if we're not waiting on anything, resolve the master
+		if ( !remaining ) {
+			deferred.resolveWith( resolveContexts, resolveValues );
+		}
+
+		return deferred.promise();
+	}
+});
+jQuery.support = (function( support ) {
+
+	var all, a, input, select, fragment, opt, eventName, isSupported, i,
+		div = document.createElement("div");
+
+	// Setup
+	div.setAttribute( "className", "t" );
+	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
+
+	// Finish early in limited (non-browser) environments
+	all = div.getElementsByTagName("*") || [];
+	a = div.getElementsByTagName("a")[ 0 ];
+	if ( !a || !a.style || !all.length ) {
+		return support;
+	}
+
+	// First batch of tests
+	select = document.createElement("select");
+	opt = select.appendChild( document.createElement("option") );
+	input = div.getElementsByTagName("input")[ 0 ];
+
+	a.style.cssText = "top:1px;float:left;opacity:.5";
+
+	// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
+	support.getSetAttribute = div.className !== "t";
+
+	// IE strips leading whitespace when .innerHTML is used
+	support.leadingWhitespace = div.firstChild.nodeType === 3;
+
+	// Make sure that tbody elements aren't automatically inserted
+	// IE will insert them into empty tables
+	support.tbody = !div.getElementsByTagName("tbody").length;
+
+	// Make sure that link elements get serialized correctly by innerHTML
+	// This requires a wrapper element in IE
+	support.htmlSerialize = !!div.getElementsByTagName("link").length;
+
+	// Get the style information from getAttribute
+	// (IE uses .cssText instead)
+	support.style = /top/.test( a.getAttribute("style") );
+
+	// Make sure that URLs aren't manipulated
+	// (IE normalizes it by default)
+	support.hrefNormalized = a.getAttribute("href") === "/a";
+
+	// Make sure that element opacity exists
+	// (IE uses filter instead)
+	// Use a regex to work around a WebKit issue. See #5145
+	support.opacity = /^0.5/.test( a.style.opacity );
+
+	// Verify style float existence
+	// (IE uses styleFloat instead of cssFloat)
+	support.cssFloat = !!a.style.cssFloat;
+
+	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
+	support.checkOn = !!input.value;
+
+	// Make sure that a selected-by-default option has a working selected property.
+	// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
+	support.optSelected = opt.selected;
+
+	// Tests for enctype support on a form (#6743)
+	support.enctype = !!document.createElement("form").enctype;
+
+	// Makes sure cloning an html5 element does not cause problems
+	// Where outerHTML is undefined, this still works
+	support.html5Clone = document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>";
+
+	// Will be defined later
+	support.inlineBlockNeedsLayout = false;
+	support.shrinkWrapBlocks = false;
+	support.pixelPosition = false;
+	support.deleteExpando = true;
+	support.noCloneEvent = true;
+	support.reliableMarginRight = true;
+	support.boxSizingReliable = true;
+
+	// Make sure checked status is properly cloned
+	input.checked = true;
+	support.noCloneChecked = input.cloneNode( true ).checked;
+
+	// Make sure that the options inside disabled selects aren't marked as disabled
+	// (WebKit marks them as disabled)
+	select.disabled = true;
+	support.optDisabled = !opt.disabled;
+
+	// Support: IE<9
+	try {
+		delete div.test;
+	} catch( e ) {
+		support.deleteExpando = false;
+	}
+
+	// Check if we can trust getAttribute("value")
+	input = document.createElement("input");
+	input.setAttribute( "value", "" );
+	support.input = input.getAttribute( "value" ) === "";
+
+	// Check if an input maintains its value after becoming a radio
+	input.value = "t";
+	input.setAttribute( "type", "radio" );
+	support.radioValue = input.value === "t";
+
+	// #11217 - WebKit loses check when the name is after the checked attribute
+	input.setAttribute( "checked", "t" );
+	input.setAttribute( "name", "t" );
+
+	fragment = document.createDocumentFragment();
+	fragment.appendChild( input );
+
+	// Check if a disconnected checkbox will retain its checked
+	// value of true after appended to the DOM (IE6/7)
+	support.appendChecked = input.checked;
+
+	// WebKit doesn't clone checked state correctly in fragments
+	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;
+
+	// Support: IE<9
+	// Opera does not clone events (and typeof div.attachEvent === undefined).
+	// IE9-10 clones events bound via attachEvent, but they don't trigger with .click()
+	if ( div.attachEvent ) {
+		div.attachEvent( "onclick", function() {
+			support.noCloneEvent = false;
+		});
+
+		div.cloneNode( true ).click();
+	}
+
+	// Support: IE<9 (lack submit/change bubble), Firefox 17+ (lack focusin event)
+	// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
+	for ( i in { submit: true, change: true, focusin: true }) {
+		div.setAttribute( eventName = "on" + i, "t" );
+
+		support[ i + "Bubbles" ] = eventName in window || div.attributes[ eventName ].expando === false;
+	}
+
+	div.style.backgroundClip = "content-box";
+	div.cloneNode( true ).style.backgroundClip = "";
+	support.clearCloneStyle = div.style.backgroundClip === "content-box";
+
+	// Support: IE<9
+	// Iteration over object's inherited properties before its own.
+	for ( i in jQuery( support ) ) {
+		break;
+	}
+	support.ownLast = i !== "0";
+
+	// Run tests that need a body at doc ready
+	jQuery(function() {
+		var container, marginDiv, tds,
+			divReset = "padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",
+			body = document.getElementsByTagName("body")[0];
+
+		if ( !body ) {
+			// Return for frameset docs that don't have a body
+			return;
+		}
+
+		container = document.createElement("div");
+		container.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px";
+
+		body.appendChild( container ).appendChild( div );
+
+		// Support: IE8
+		// Check if table cells still have offsetWidth/Height when they are set
+		// to display:none and there are still other visible table cells in a
+		// table row; if so, offsetWidth/Height are not reliable for use when
+		// determining if an element has been hidden directly using
+		// display:none (it is still safe to use offsets if a parent element is
+		// hidden; don safety goggles and see bug #4512 for more information).
+		div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
+		tds = div.getElementsByTagName("td");
+		tds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";
+		isSupported = ( tds[ 0 ].offsetHeight === 0 );
+
+		tds[ 0 ].style.display = "";
+		tds[ 1 ].style.display = "none";
+
+		// Support: IE8
+		// Check if empty table cells still have offsetWidth/Height
+		support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );
+
+		// Check box-sizing and margin behavior.
+		div.innerHTML = "";
+		div.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";
+
+		// Workaround failing boxSizing test due to offsetWidth returning wrong value
+		// with some non-1 values of body zoom, ticket #13543
+		jQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function() {
+			support.boxSizing = div.offsetWidth === 4;
+		});
+
+		// Use window.getComputedStyle because jsdom on node.js will break without it.
+		if ( window.getComputedStyle ) {
+			support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
+			support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";
+
+			// Check if div with explicit width and no margin-right incorrectly
+			// gets computed margin-right based on width of container. (#3333)
+			// Fails in WebKit before Feb 2011 nightlies
+			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
+			marginDiv = div.appendChild( document.createElement("div") );
+			marginDiv.style.cssText = div.style.cssText = divReset;
+			marginDiv.style.marginRight = marginDiv.style.width = "0";
+			div.style.width = "1px";
+
+			support.reliableMarginRight =
+				!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
+		}
+
+		if ( typeof div.style.zoom !== core_strundefined ) {
+			// Support: IE<8
+			// Check if natively block-level elements act like inline-block
+			// elements when setting their display to 'inline' and giving
+			// them layout
+			div.innerHTML = "";
+			div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
+			support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );
+
+			// Support: IE6
+			// Check if elements with layout shrink-wrap their children
+			div.style.display = "block";
+			div.innerHTML = "<div></div>";
+			div.firstChild.style.width = "5px";
+			support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );
+
+			if ( support.inlineBlockNeedsLayout ) {
+				// Prevent IE 6 from affecting layout for positioned elements #11048
+				// Prevent IE from shrinking the body in IE 7 mode #12869
+				// Support: IE<8
+				body.style.zoom = 1;
+			}
+		}
+
+		body.removeChild( container );
+
+		// Null elements to avoid leaks in IE
+		container = div = tds = marginDiv = null;
+	});
+
+	// Null elements to avoid leaks in IE
+	all = select = fragment = opt = a = input = null;
+
+	return support;
+})({});
+
+var rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
+	rmultiDash = /([A-Z])/g;
+
+function internalData( elem, name, data, pvt /* Internal Use Only */ ){
+	if ( !jQuery.acceptData( elem ) ) {
+		return;
+	}
+
+	var ret, thisCache,
+		internalKey = jQuery.expando,
+
+		// We have to handle DOM nodes and JS objects differently because IE6-7
+		// can't GC object references properly across the DOM-JS boundary
+		isNode = elem.nodeType,
+
+		// Only DOM nodes need the global jQuery cache; JS object data is
+		// attached directly to the object so GC can occur automatically
+		cache = isNode ? jQuery.cache : elem,
+
+		// Only defining an ID for JS objects if its cache already exists allows
+		// the code to shortcut on the same path as a DOM node with no cache
+		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;
+
+	// Avoid doing any more work than we need to when trying to get data on an
+	// object that has no data at all
+	if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === "string" ) {
+		return;
+	}
+
+	if ( !id ) {
+		// Only DOM nodes need a new unique ID for each element since their data
+		// ends up in the global cache
+		if ( isNode ) {
+			id = elem[ internalKey ] = core_deletedIds.pop() || jQuery.guid++;
+		} else {
+			id = internalKey;
+		}
+	}
+
+	if ( !cache[ id ] ) {
+		// Avoid exposing jQuery metadata on plain JS objects when the object
+		// is serialized using JSON.stringify
+		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
+	}
+
+	// An object can be passed to jQuery.data instead of a key/value pair; this gets
+	// shallow copied over onto the existing cache
+	if ( typeof name === "object" || typeof name === "function" ) {
+		if ( pvt ) {
+			cache[ id ] = jQuery.extend( cache[ id ], name );
+		} else {
+			cache[ id ].data = jQuery.extend( cache[ id ].data, name );
+		}
+	}
+
+	thisCache = cache[ id ];
+
+	// jQuery data() is stored in a separate object inside the object's internal data
+	// cache in order to avoid key collisions between internal data and user-defined
+	// data.
+	if ( !pvt ) {
+		if ( !thisCache.data ) {
+			thisCache.data = {};
+		}
+
+		thisCache = thisCache.data;
+	}
+
+	if ( data !== undefined ) {
+		thisCache[ jQuery.camelCase( name ) ] = data;
+	}
+
+	// Check for both converted-to-camel and non-converted data property names
+	// If a data property was specified
+	if ( typeof name === "string" ) {
+
+		// First Try to find as-is property data
+		ret = thisCache[ name ];
+
+		// Test for null|undefined property data
+		if ( ret == null ) {
+
+			// Try to find the camelCased property
+			ret = thisCache[ jQuery.camelCase( name ) ];
+		}
+	} else {
+		ret = thisCache;
+	}
+
+	return ret;
+}
+
+function internalRemoveData( elem, name, pvt ) {
+	if ( !jQuery.acceptData( elem ) ) {
+		return;
+	}
+
+	var thisCache, i,
+		isNode = elem.nodeType,
+
+		// See jQuery.data for more information
+		cache = isNode ? jQuery.cache : elem,
+		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;
+
+	// If there is already no cache entry for this object, there is no
+	// purpose in continuing
+	if ( !cache[ id ] ) {
+		return;
+	}
+
+	if ( name ) {
+
+		thisCache = pvt ? cache[ id ] : cache[ id ].data;
+
+		if ( thisCache ) {
+
+			// Support array or space separated string names for data keys
+			if ( !jQuery.isArray( name ) ) {
+
+				// try the string as a key before any manipulation
+				if ( name in thisCache ) {
+					name = [ name ];
+				} else {
+
+					// split the camel cased version by spaces unless a key with the spaces exists
+					name = jQuery.camelCase( name );
+					if ( name in thisCache ) {
+						name = [ name ];
+					} else {
+						name = name.split(" ");
+					}
+				}
+			} else {
+				// If "name" is an array of keys...
+				// When data is initially created, via ("key", "val") signature,
+				// keys will be converted to camelCase.
+				// Since there is no way to tell _how_ a key was added, remove
+				// both plain key and camelCase key. #12786
+				// This will only penalize the array argument path.
+				name = name.concat( jQuery.map( name, jQuery.camelCase ) );
+			}
+
+			i = name.length;
+			while ( i-- ) {
+				delete thisCache[ name[i] ];
+			}
+
+			// If there is no data left in the cache, we want to continue
+			// and let the cache object itself get destroyed
+			if ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {
+				return;
+			}
+		}
+	}
+
+	// See jQuery.data for more information
+	if ( !pvt ) {
+		delete cache[ id ].data;
+
+		// Don't destroy the parent cache unless the internal data object
+		// had been the only thing left in it
+		if ( !isEmptyDataObject( cache[ id ] ) ) {
+			return;
+		}
+	}
+
+	// Destroy the cache
+	if ( isNode ) {
+		jQuery.cleanData( [ elem ], true );
+
+	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
+	/* jshint eqeqeq: false */
+	} else if ( jQuery.support.deleteExpando || cache != cache.window ) {
+		/* jshint eqeqeq: true */
+		delete cache[ id ];
+
+	// When all else fails, null
+	} else {
+		cache[ id ] = null;
+	}
+}
+
+jQuery.extend({
+	cache: {},
+
+	// The following elements throw uncatchable exceptions if you
+	// attempt to add expando properties to them.
+	noData: {
+		"applet": true,
+		"embed": true,
+		// Ban all objects except for Flash (which handle expandos)
+		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
+	},
+
+	hasData: function( elem ) {
+		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
+		return !!elem && !isEmptyDataObject( elem );
+	},
+
+	data: function( elem, name, data ) {
+		return internalData( elem, name, data );
+	},
+
+	removeData: function( elem, name ) {
+		return internalRemoveData( elem, name );
+	},
+
+	// For internal use only.
+	_data: function( elem, name, data ) {
+		return internalData( elem, name, data, true );
+	},
+
+	_removeData: function( elem, name ) {
+		return internalRemoveData( elem, name, true );
+	},
+
+	// A method for determining if a DOM node can handle the data expando
+	acceptData: function( elem ) {
+		// Do not set data on non-element because it will not be cleared (#8335).
+		if ( elem.nodeType && elem.nodeType !== 1 && elem.nodeType !== 9 ) {
+			return false;
+		}
+
+		var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];
+
+		// nodes accept data unless otherwise specified; rejection can be conditional
+		return !noData || noData !== true && elem.getAttribute("classid") === noData;
+	}
+});
+
+jQuery.fn.extend({
+	data: function( key, value ) {
+		var attrs, name,
+			data = null,
+			i = 0,
+			elem = this[0];
+
+		// Special expections of .data basically thwart jQuery.access,
+		// so implement the relevant behavior ourselves
+
+		// Gets all values
+		if ( key === undefined ) {
+			if ( this.length ) {
+				data = jQuery.data( elem );
+
+				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
+					attrs = elem.attributes;
+					for ( ; i < attrs.length; i++ ) {
+						name = attrs[i].name;
+
+						if ( name.indexOf("data-") === 0 ) {
+							name = jQuery.camelCase( name.slice(5) );
+
+							dataAttr( elem, name, data[ name ] );
+						}
+					}
+					jQuery._data( elem, "parsedAttrs", true );
+				}
+			}
+
+			return data;
+		}
+
+		// Sets multiple values
+		if ( typeof key === "object" ) {
+			return this.each(function() {
+				jQuery.data( this, key );
+			});
+		}
+
+		return arguments.length > 1 ?
+
+			// Sets one value
+			this.each(function() {
+				jQuery.data( this, key, value );
+			}) :
+
+			// Gets one value
+			// Try to fetch any internally stored data first
+			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : null;
+	},
+
+	removeData: function( key ) {
+		return this.each(function() {
+			jQuery.removeData( this, key );
+		});
+	}
+});
+
+function dataAttr( elem, key, data ) {
+	// If nothing was found internally, try to fetch any
+	// data from the HTML5 data-* attribute
+	if ( data === undefined && elem.nodeType === 1 ) {
+
+		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
+
+		data = elem.getAttribute( name );
+
+		if ( typeof data === "string" ) {
+			try {
+				data = data === "true" ? true :
+					data === "false" ? false :
+					data === "null" ? null :
+					// Only convert to a number if it doesn't change the string
+					+data + "" === data ? +data :
+					rbrace.test( data ) ? jQuery.parseJSON( data ) :
+						data;
+			} catch( e ) {}
+
+			// Make sure we set the data so it isn't changed later
+			jQuery.data( elem, key, data );
+
+		} else {
+			data = undefined;
+		}
+	}
+
+	return data;
+}
+
+// checks a cache object for emptiness
+function isEmptyDataObject( obj ) {
+	var name;
+	for ( name in obj ) {
+
+		// if the public data object is empty, the private is still empty
+		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
+			continue;
+		}
+		if ( name !== "toJSON" ) {
+			return false;
+		}
+	}
+
+	return true;
+}
+jQuery.extend({
+	queue: function( elem, type, data ) {
+		var queue;
+
+		if ( elem ) {
+			type = ( type || "fx" ) + "queue";
+			queue = jQuery._data( elem, type );
+
+			// Speed up dequeue by getting out quickly if this is just a lookup
+			if ( data ) {
+				if ( !queue || jQuery.isArray(data) ) {
+					queue = jQuery._data( elem, type, jQuery.makeArray(data) );
+				} else {
+					queue.push( data );
+				}
+			}
+			return queue || [];
+		}
+	},
+
+	dequeue: function( elem, type ) {
+		type = type || "fx";
+
+		var queue = jQuery.queue( elem, type ),
+			startLength = queue.length,
+			fn = queue.shift(),
+			hooks = jQuery._queueHooks( elem, type ),
+			next = function() {
+				jQuery.dequeue( elem, type );
+			};
+
+		// If the fx queue is dequeued, always remove the progress sentinel
+		if ( fn === "inprogress" ) {
+			fn = queue.shift();
+			startLength--;
+		}
+
+		if ( fn ) {
+
+			// Add a progress sentinel to prevent the fx queue from being
+			// automatically dequeued
+			if ( type === "fx" ) {
+				queue.unshift( "inprogress" );
+			}
+
+			// clear up the last queue stop function
+			delete hooks.stop;
+			fn.call( elem, next, hooks );
+		}
+
+		if ( !startLength && hooks ) {
+			hooks.empty.fire();
+		}
+	},
+
+	// not intended for public consumption - generates a queueHooks object, or returns the current one
+	_queueHooks: function( elem, type ) {
+		var key = type + "queueHooks";
+		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
+			empty: jQuery.Callbacks("once memory").add(function() {
+				jQuery._removeData( elem, type + "queue" );
+				jQuery._removeData( elem, key );
+			})
+		});
+	}
+});
+
+jQuery.fn.extend({
+	queue: function( type, data ) {
+		var setter = 2;
+
+		if ( typeof type !== "string" ) {
+			data = type;
+			type = "fx";
+			setter--;
+		}
+
+		if ( arguments.length < setter ) {
+			return jQuery.queue( this[0], type );
+		}
+
+		return data === undefined ?
+			this :
+			this.each(function() {
+				var queue = jQuery.queue( this, type, data );
+
+				// ensure a hooks for this queue
+				jQuery._queueHooks( this, type );
+
+				if ( type === "fx" && queue[0] !== "inprogress" ) {
+					jQuery.dequeue( this, type );
+				}
+			});
+	},
+	dequeue: function( type ) {
+		return this.each(function() {
+			jQuery.dequeue( this, type );
+		});
+	},
+	// Based off of the plugin by Clint Helfers, with permission.
+	// http://blindsignals.com/index.php/2009/07/jquery-delay/
+	delay: function( time, type ) {
+		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
+		type = type || "fx";
+
+		return this.queue( type, function( next, hooks ) {
+			var timeout = setTimeout( next, time );
+			hooks.stop = function() {
+				clearTimeout( timeout );
+			};
+		});
+	},
+	clearQueue: function( type ) {
+		return this.queue( type || "fx", [] );
+	},
+	// Get a promise resolved when queues of a certain type
+	// are emptied (fx is the type by default)
+	promise: function( type, obj ) {
+		var tmp,
+			count = 1,
+			defer = jQuery.Deferred(),
+			elements = this,
+			i = this.length,
+			resolve = function() {
+				if ( !( --count ) ) {
+					defer.resolveWith( elements, [ elements ] );
+				}
+			};
+
+		if ( typeof type !== "string" ) {
+			obj = type;
+			type = undefined;
+		}
+		type = type || "fx";
+
+		while( i-- ) {
+			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
+			if ( tmp && tmp.empty ) {
+				count++;
+				tmp.empty.add( resolve );
+			}
+		}
+		resolve();
+		return defer.promise( obj );
+	}
+});
+var nodeHook, boolHook,
+	rclass = /[\t\r\n\f]/g,
+	rreturn = /\r/g,
+	rfocusable = /^(?:input|select|textarea|button|object)$/i,
+	rclickable = /^(?:a|area)$/i,
+	ruseDefault = /^(?:checked|selected)$/i,
+	getSetAttribute = jQuery.support.getSetAttribute,
+	getSetInput = jQuery.support.input;
+
+jQuery.fn.extend({
+	attr: function( name, value ) {
+		return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
+	},
+
+	removeAttr: function( name ) {
+		return this.each(function() {
+			jQuery.removeAttr( this, name );
+		});
+	},
+
+	prop: function( name, value ) {
+		return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
+	},
+
+	removeProp: function( name ) {
+		name = jQuery.propFix[ name ] || name;
+		return this.each(function() {
+			// try/catch handles cases where IE balks (such as removing a property on window)
+			try {
+				this[ name ] = undefined;
+				delete this[ name ];
+			} catch( e ) {}
+		});
+	},
+
+	addClass: function( value ) {
+		var classes, elem, cur, clazz, j,
+			i = 0,
+			len = this.length,
+			proceed = typeof value === "string" && value;
+
+		if ( jQuery.isFunction( value ) ) {
+			return this.each(function( j ) {
+				jQuery( this ).addClass( value.call( this, j, this.className ) );
+			});
+		}
+
+		if ( proceed ) {
+			// The disjunction here is for better compressibility (see removeClass)
+			classes = ( value || "" ).match( core_rnotwhite ) || [];
+
+			for ( ; i < len; i++ ) {
+				elem = this[ i ];
+				cur = elem.nodeType === 1 && ( elem.className ?
+					( " " + elem.className + " " ).replace( rclass, " " ) :
+					" "
+				);
+
+				if ( cur ) {
+					j = 0;
+					while ( (clazz = classes[j++]) ) {
+						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
+							cur += clazz + " ";
+						}
+					}
+					elem.className = jQuery.trim( cur );
+
+				}
+			}
+		}
+
+		return this;
+	},
+
+	removeClass: function( value ) {
+		var classes, elem, cur, clazz, j,
+			i = 0,
+			len = this.length,
+			proceed = arguments.length === 0 || typeof value === "string" && value;
+
+		if ( jQuery.isFunction( value ) ) {
+			return this.each(function( j ) {
+				jQuery( this ).removeClass( value.call( this, j, this.className ) );
+			});
+		}
+		if ( proceed ) {
+			classes = ( value || "" ).match( core_rnotwhite ) || [];
+
+			for ( ; i < len; i++ ) {
+				elem = this[ i ];
+				// This expression is here for better compressibility (see addClass)
+				cur = elem.nodeType === 1 && ( elem.className ?
+					( " " + elem.className + " " ).replace( rclass, " " ) :
+					""
+				);
+
+				if ( cur ) {
+					j = 0;
+					while ( (clazz = classes[j++]) ) {
+						// Remove *all* instances
+						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
+							cur = cur.replace( " " + clazz + " ", " " );
+						}
+					}
+					elem.className = value ? jQuery.trim( cur ) : "";
+				}
+			}
+		}
+
+		return this;
+	},
+
+	toggleClass: function( value, stateVal ) {
+		var type = typeof value;
+
+		if ( typeof stateVal === "boolean" && type === "string" ) {
+			return stateVal ? this.addClass( value ) : this.removeClass( value );
+		}
+
+		if ( jQuery.isFunction( value ) ) {
+			return this.each(function( i ) {
+				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
+			});
+		}
+
+		return this.each(function() {
+			if ( type === "string" ) {
+				// toggle individual class names
+				var className,
+					i = 0,
+					self = jQuery( this ),
+					classNames = value.match( core_rnotwhite ) || [];
+
+				while ( (className = classNames[ i++ ]) ) {
+					// check each className given, space separated list
+					if ( self.hasClass( className ) ) {
+						self.removeClass( className );
+					} else {
+						self.addClass( className );
+					}
+				}
+
+			// Toggle whole class name
+			} else if ( type === core_strundefined || type === "boolean" ) {
+				if ( this.className ) {
+					// store className if set
+					jQuery._data( this, "__className__", this.className );
+				}
+
+				// If the element has a class name or if we're passed "false",
+				// then remove the whole classname (if there was one, the above saved it).
+				// Otherwise bring back whatever was previously saved (if anything),
+				// falling back to the empty string if nothing was stored.
+				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
+			}
+		});
+	},
+
+	hasClass: function( selector ) {
+		var className = " " + selector + " ",
+			i = 0,
+			l = this.length;
+		for ( ; i < l; i++ ) {
+			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
+				return true;
+			}
+		}
+
+		return false;
+	},
+
+	val: function( value ) {
+		var ret, hooks, isFunction,
+			elem = this[0];
+
+		if ( !arguments.length ) {
+			if ( elem ) {
+				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];
+
+				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
+					return ret;
+				}
+
+				ret = elem.value;
+
+				return typeof ret === "string" ?
+					// handle most common string cases
+					ret.replace(rreturn, "") :
+					// handle cases where value is null/undef or number
+					ret == null ? "" : ret;
+			}
+
+			return;
+		}
+
+		isFunction = jQuery.isFunction( value );
+
+		return this.each(function( i ) {
+			var val;
+
+			if ( this.nodeType !== 1 ) {
+				return;
+			}
+
+			if ( isFunction ) {
+				val = value.call( this, i, jQuery( this ).val() );
+			} else {
+				val = value;
+			}
+
+			// Treat null/undefined as ""; convert numbers to string
+			if ( val == null ) {
+				val = "";
+			} else if ( typeof val === "number" ) {
+				val += "";
+			} else if ( jQuery.isArray( val ) ) {
+				val = jQuery.map(val, function ( value ) {
+					return value == null ? "" : value + "";
+				});
+			}
+
+			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];
+
+			// If set returns undefined, fall back to normal setting
+			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
+				this.value = val;
+			}
+		});
+	}
+});
+
+jQuery.extend({
+	valHooks: {
+		option: {
+			get: function( elem ) {
+				// Use proper attribute retrieval(#6932, #12072)
+				var val = jQuery.find.attr( elem, "value" );
+				return val != null ?
+					val :
+					elem.text;
+			}
+		},
+		select: {
+			get: function( elem ) {
+				var value, option,
+					options = elem.options,
+					index = elem.selectedIndex,
+					one = elem.type === "select-one" || index < 0,
+					values = one ? null : [],
+					max = one ? index + 1 : options.length,
+					i = index < 0 ?
+						max :
+						one ? index : 0;
+
+				// Loop through all the selected options
+				for ( ; i < max; i++ ) {
+					option = options[ i ];
+
+					// oldIE doesn't update selected after form reset (#2551)
+					if ( ( option.selected || i === index ) &&
+							// Don't return options that are disabled or in a disabled optgroup
+							( jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
+							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {
+
+						// Get the specific value for the option
+						value = jQuery( option ).val();
+
+						// We don't need an array for one selects
+						if ( one ) {
+							return value;
+						}
+
+						// Multi-Selects return an array
+						values.push( value );
+					}
+				}
+
+				return values;
+			},
+
+			set: function( elem, value ) {
+				var optionSet, option,
+					options = elem.options,
+					values = jQuery.makeArray( value ),
+					i = options.length;
+
+				while ( i-- ) {
+					option = options[ i ];
+					if ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {
+						optionSet = true;
+					}
+				}
+
+				// force browsers to behave consistently when non-matching value is set
+				if ( !optionSet ) {
+					elem.selectedIndex = -1;
+				}
+				return values;
+			}
+		}
+	},
+
+	attr: function( elem, name, value ) {
+		var hooks, ret,
+			nType = elem.nodeType;
+
+		// don't get/set attributes on text, comment and attribute nodes
+		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
+			return;
+		}
+
+		// Fallback to prop when attributes are not supported
+		if ( typeof elem.getAttribute === core_strundefined ) {
+			return jQuery.prop( elem, name, value );
+		}
+
+		// All attributes are lowercase
+		// Grab necessary hook if one is defined
+		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
+			name = name.toLowerCase();
+			hooks = jQuery.attrHooks[ name ] ||
+				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
+		}
+
+		if ( value !== undefined ) {
+
+			if ( value === null ) {
+				jQuery.removeAttr( elem, name );
+
+			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
+				return ret;
+
+			} else {
+				elem.setAttribute( name, value + "" );
+				return value;
+			}
+
+		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
+			return ret;
+
+		} else {
+			ret = jQuery.find.attr( elem, name );
+
+			// Non-existent attributes return null, we normalize to undefined
+			return ret == null ?
+				undefined :
+				ret;
+		}
+	},
+
+	removeAttr: function( elem, value ) {
+		var name, propName,
+			i = 0,
+			attrNames = value && value.match( core_rnotwhite );
+
+		if ( attrNames && elem.nodeType === 1 ) {
+			while ( (name = attrNames[i++]) ) {
+				propName = jQuery.propFix[ name ] || name;
+
+				// Boolean attributes get special treatment (#10870)
+				if ( jQuery.expr.match.bool.test( name ) ) {
+					// Set corresponding property to false
+					if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
+						elem[ propName ] = false;
+					// Support: IE<9
+					// Also clear defaultChecked/defaultSelected (if appropriate)
+					} else {
+						elem[ jQuery.camelCase( "default-" + name ) ] =
+							elem[ propName ] = false;
+					}
+
+				// See #9699 for explanation of this approach (setting first, then removal)
+				} else {
+					jQuery.attr( elem, name, "" );
+				}
+
+				elem.removeAttribute( getSetAttribute ? name : propName );
+			}
+		}
+	},
+
+	attrHooks: {
+		type: {
+			set: function( elem, value ) {
+				if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
+					// Setting the type on a radio button after the value resets the value in IE6-9
+					// Reset value to default in case type is set after value during creation
+					var val = elem.value;
+					elem.setAttribute( "type", value );
+					if ( val ) {
+						elem.value = val;
+					}
+					return value;
+				}
+			}
+		}
+	},
+
+	propFix: {
+		"for": "htmlFor",
+		"class": "className"
+	},
+
+	prop: function( elem, name, value ) {
+		var ret, hooks, notxml,
+			nType = elem.nodeType;
+
+		// don't get/set properties on text, comment and attribute nodes
+		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
+			return;
+		}
+
+		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );
+
+		if ( notxml ) {
+			// Fix name and attach hooks
+			name = jQuery.propFix[ name ] || name;
+			hooks = jQuery.propHooks[ name ];
+		}
+
+		if ( value !== undefined ) {
+			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
+				ret :
+				( elem[ name ] = value );
+
+		} else {
+			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
+				ret :
+				elem[ name ];
+		}
+	},
+
+	propHooks: {
+		tabIndex: {
+			get: function( elem ) {
+				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
+				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
+				// Use proper attribute retrieval(#12072)
+				var tabindex = jQuery.find.attr( elem, "tabindex" );
+
+				return tabindex ?
+					parseInt( tabindex, 10 ) :
+					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
+						0 :
+						-1;
+			}
+		}
+	}
+});
+
+// Hooks for boolean attributes
+boolHook = {
+	set: function( elem, value, name ) {
+		if ( value === false ) {
+			// Remove boolean attributes when set to false
+			jQuery.removeAttr( elem, name );
+		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
+			// IE<8 needs the *property* name
+			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );
+
+		// Use defaultChecked and defaultSelected for oldIE
+		} else {
+			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
+		}
+
+		return name;
+	}
+};
+jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
+	var getter = jQuery.expr.attrHandle[ name ] || jQuery.find.attr;
+
+	jQuery.expr.attrHandle[ name ] = getSetInput && getSetAttribute || !ruseDefault.test( name ) ?
+		function( elem, name, isXML ) {
+			var fn = jQuery.expr.attrHandle[ name ],
+				ret = isXML ?
+					undefined :
+					/* jshint eqeqeq: false */
+					(jQuery.expr.attrHandle[ name ] = undefined) !=
+						getter( elem, name, isXML ) ?
+
+						name.toLowerCase() :
+						null;
+			jQuery.expr.attrHandle[ name ] = fn;
+			return ret;
+		} :
+		function( elem, name, isXML ) {
+			return isXML ?
+				undefined :
+				elem[ jQuery.camelCase( "default-" + name ) ] ?
+					name.toLowerCase() :
+					null;
+		};
+});
+
+// fix oldIE attroperties
+if ( !getSetInput || !getSetAttribute ) {
+	jQuery.attrHooks.value = {
+		set: function( elem, value, name ) {
+			if ( jQuery.nodeName( elem, "input" ) ) {
+				// Does not return so that setAttribute is also used
+				elem.defaultValue = value;
+			} else {
+				// Use nodeHook if defined (#1954); otherwise setAttribute is fine
+				return nodeHook && nodeHook.set( elem, value, name );
+			}
+		}
+	};
+}
+
+// IE6/7 do not support getting/setting some attributes with get/setAttribute
+if ( !getSetAttribute ) {
+
+	// Use this for any attribute in IE6/7
+	// This fixes almost every IE6/7 issue
+	nodeHook = {
+		set: function( elem, value, name ) {
+			// Set the existing or create a new attribute node
+			var ret = elem.getAttributeNode( name );
+			if ( !ret ) {
+				elem.setAttributeNode(
+					(ret = elem.ownerDocument.createAttribute( name ))
+				);
+			}
+
+			ret.value = value += "";
+
+			// Break association with cloned elements by also using setAttribute (#9646)
+			return name === "value" || value === elem.getAttribute( name ) ?
+				value :
+				undefined;
+		}
+	};
+	jQuery.expr.attrHandle.id = jQuery.expr.attrHandle.name = jQuery.expr.attrHandle.coords =
+		// Some attributes are constructed with empty-string values when not defined
+		function( elem, name, isXML ) {
+			var ret;
+			return isXML ?
+				undefined :
+				(ret = elem.getAttributeNode( name )) && ret.value !== "" ?
+					ret.value :
+					null;
+		};
+	jQuery.valHooks.button = {
+		get: function( elem, name ) {
+			var ret = elem.getAttributeNode( name );
+			return ret && ret.specified ?
+				ret.value :
+				undefined;
+		},
+		set: nodeHook.set
+	};
+
+	// Set contenteditable to false on removals(#10429)
+	// Setting to empty string throws an error as an invalid value
+	jQuery.attrHooks.contenteditable = {
+		set: function( elem, value, name ) {
+			nodeHook.set( elem, value === "" ? false : value, name );
+		}
+	};
+
+	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
+	// This is for removals
+	jQuery.each([ "width", "height" ], function( i, name ) {
+		jQuery.attrHooks[ name ] = {
+			set: function( elem, value ) {
+				if ( value === "" ) {
+					elem.setAttribute( name, "auto" );
+					return value;
+				}
+			}
+		};
+	});
+}
+
+
+// Some attributes require a special call on IE
+// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
+if ( !jQuery.support.hrefNormalized ) {
+	// href/src property should get the full normalized URL (#10299/#12915)
+	jQuery.each([ "href", "src" ], function( i, name ) {
+		jQuery.propHooks[ name ] = {
+			get: function( elem ) {
+				return elem.getAttribute( name, 4 );
+			}
+		};
+	});
+}
+
+if ( !jQuery.support.style ) {
+	jQuery.attrHooks.style = {
+		get: function( elem ) {
+			// Return undefined in the case of empty string
+			// Note: IE uppercases css property names, but if we were to .toLowerCase()
+			// .cssText, that would destroy case senstitivity in URL's, like in "background"
+			return elem.style.cssText || undefined;
+		},
+		set: function( elem, value ) {
+			return ( elem.style.cssText = value + "" );
+		}
+	};
+}
+
+// Safari mis-reports the default selected property of an option
+// Accessing the parent's selectedIndex property fixes it
+if ( !jQuery.support.optSelected ) {
+	jQuery.propHooks.selected = {
+		get: function( elem ) {
+			var parent = elem.parentNode;
+
+			if ( parent ) {
+				parent.selectedIndex;
+
+				// Make sure that it also works with optgroups, see #5701
+				if ( parent.parentNode ) {
+					parent.parentNode.selectedIndex;
+				}
+			}
+			return null;
+		}
+	};
+}
+
+jQuery.each([
+	"tabIndex",
+	"readOnly",
+	"maxLength",
+	"cellSpacing",
+	"cellPadding",
+	"rowSpan",
+	"colSpan",
+	"useMap",
+	"frameBorder",
+	"contentEditable"
+], function() {
+	jQuery.propFix[ this.toLowerCase() ] = this;
+});
+
+// IE6/7 call enctype encoding
+if ( !jQuery.support.enctype ) {
+	jQuery.propFix.enctype = "encoding";
+}
+
+// Radios and checkboxes getter/setter
+jQuery.each([ "radio", "checkbox" ], function() {
+	jQuery.valHooks[ this ] = {
+		set: function( elem, value ) {
+			if ( jQuery.isArray( value ) ) {
+				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
+			}
+		}
+	};
+	if ( !jQuery.support.checkOn ) {
+		jQuery.valHooks[ this ].get = function( elem ) {
+			// Support: Webkit
+			// "" is returned instead of "on" if a value isn't specified
+			return elem.getAttribute("value") === null ? "on" : elem.value;
+		};
+	}
+});
+var rformElems = /^(?:input|select|textarea)$/i,
+	rkeyEvent = /^key/,
+	rmouseEvent = /^(?:mouse|contextmenu)|click/,
+	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
+	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;
+
+function returnTrue() {
+	return true;
+}
+
+function returnFalse() {
+	return false;
+}
+
+function safeActiveElement() {
+	try {
+		return document.activeElement;
+	} catch ( err ) { }
+}
+
+/*
+ * Helper functions for managing events -- not part of the public interface.
+ * Props to Dean Edwards' addEvent library for many of the ideas.
+ */
+jQuery.event = {
+
+	global: {},
+
+	add: function( elem, types, handler, data, selector ) {
+		var tmp, events, t, handleObjIn,
+			special, eventHandle, handleObj,
+			handlers, type, namespaces, origType,
+			elemData = jQuery._data( elem );
+
+		// Don't attach events to noData or text/comment nodes (but allow plain objects)
+		if ( !elemData ) {
+			return;
+		}
+
+		// Caller can pass in an object of custom data in lieu of the handler
+		if ( handler.handler ) {
+			handleObjIn = handler;
+			handler = handleObjIn.handler;
+			selector = handleObjIn.selector;
+		}
+
+		// Make sure that the handler has a unique ID, used to find/remove it later
+		if ( !handler.guid ) {
+			handler.guid = jQuery.guid++;
+		}
+
+		// Init the element's event structure and main handler, if this is the first
+		if ( !(events = elemData.events) ) {
+			events = elemData.events = {};
+		}
+		if ( !(eventHandle = elemData.handle) ) {
+			eventHandle = elemData.handle = function( e ) {
+				// Discard the second event of a jQuery.event.trigger() and
+				// when an event is called after a page has unloaded
+				return typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?
+					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
+					undefined;
+			};
+			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
+			eventHandle.elem = elem;
+		}
+
+		// Handle multiple events separated by a space
+		types = ( types || "" ).match( core_rnotwhite ) || [""];
+		t = types.length;
+		while ( t-- ) {
+			tmp = rtypenamespace.exec( types[t] ) || [];
+			type = origType = tmp[1];
+			namespaces = ( tmp[2] || "" ).split( "." ).sort();
+
+			// There *must* be a type, no attaching namespace-only handlers
+			if ( !type ) {
+				continue;
+			}
+
+			// If event changes its type, use the special event handlers for the changed type
+			special = jQuery.event.special[ type ] || {};
+
+			// If selector defined, determine special event api type, otherwise given type
+			type = ( selector ? special.delegateType : special.bindType ) || type;
+
+			// Update special based on newly reset type
+			special = jQuery.event.special[ type ] || {};
+
+			// handleObj is passed to all event handlers
+			handleObj = jQuery.extend({
+				type: type,
+				origType: origType,
+				data: data,
+				handler: handler,
+				guid: handler.guid,
+				selector: selector,
+				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
+				namespace: namespaces.join(".")
+			}, handleObjIn );
+
+			// Init the event handler queue if we're the first
+			if ( !(handlers = events[ type ]) ) {
+				handlers = events[ type ] = [];
+				handlers.delegateCount = 0;
+
+				// Only use addEventListener/attachEvent if the special events handler returns false
+				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
+					// Bind the global event handler to the element
+					if ( elem.addEventListener ) {
+						elem.addEventListener( type, eventHandle, false );
+
+					} else if ( elem.attachEvent ) {
+						elem.attachEvent( "on" + type, eventHandle );
+					}
+				}
+			}
+
+			if ( special.add ) {
+				special.add.call( elem, handleObj );
+
+				if ( !handleObj.handler.guid ) {
+					handleObj.handler.guid = handler.guid;
+				}
+			}
+
+			// Add to the element's handler list, delegates in front
+			if ( selector ) {
+				handlers.splice( handlers.delegateCount++, 0, handleObj );
+			} else {
+				handlers.push( handleObj );
+			}
+
+			// Keep track of which events have ever been used, for event optimization
+			jQuery.event.global[ type ] = true;
+		}
+
+		// Nullify elem to prevent memory leaks in IE
+		elem = null;
+	},
+
+	// Detach an event or set of events from an element
+	remove: function( elem, types, handler, selector, mappedTypes ) {
+		var j, handleObj, tmp,
+			origCount, t, events,
+			special, handlers, type,
+			namespaces, origType,
+			elemData = jQuery.hasData( elem ) && jQuery._data( elem );
+
+		if ( !elemData || !(events = elemData.events) ) {
+			return;
+		}
+
+		// Once for each type.namespace in types; type may be omitted
+		types = ( types || "" ).match( core_rnotwhite ) || [""];
+		t = types.length;
+		while ( t-- ) {
+			tmp = rtypenamespace.exec( types[t] ) || [];
+			type = origType = tmp[1];
+			namespaces = ( tmp[2] || "" ).split( "." ).sort();
+
+			// Unbind all events (on this namespace, if provided) for the element
+			if ( !type ) {
+				for ( type in events ) {
+					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
+				}
+				continue;
+			}
+
+			special = jQuery.event.special[ type ] || {};
+			type = ( selector ? special.delegateType : special.bindType ) || type;
+			handlers = events[ type ] || [];
+			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );
+
+			// Remove matching events
+			origCount = j = handlers.length;
+			while ( j-- ) {
+				handleObj = handlers[ j ];
+
+				if ( ( mappedTypes || origType === handleObj.origType ) &&
+					( !handler || handler.guid === handleObj.guid ) &&
+					( !tmp || tmp.test( handleObj.namespace ) ) &&
+					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
+					handlers.splice( j, 1 );
+
+					if ( handleObj.selector ) {
+						handlers.delegateCount--;
+					}
+					if ( special.remove ) {
+						special.remove.call( elem, handleObj );
+					}
+				}
+			}
+
+			// Remove generic event handler if we removed something and no more handlers exist
+			// (avoids potential for endless recursion during removal of special event handlers)
+			if ( origCount && !handlers.length ) {
+				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
+					jQuery.removeEvent( elem, type, elemData.handle );
+				}
+
+				delete events[ type ];
+			}
+		}
+
+		// Remove the expando if it's no longer used
+		if ( jQuery.isEmptyObject( events ) ) {
+			delete elemData.handle;
+
+			// removeData also checks for emptiness and clears the expando if empty
+			// so use it instead of delete
+			jQuery._removeData( elem, "events" );
+		}
+	},
+
+	trigger: function( event, data, elem, onlyHandlers ) {
+		var handle, ontype, cur,
+			bubbleType, special, tmp, i,
+			eventPath = [ elem || document ],
+			type = core_hasOwn.call( event, "type" ) ? event.type : event,
+			namespaces = core_hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];
+
+		cur = tmp = elem = elem || document;
+
+		// Don't do events on text and comment nodes
+		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
+			return;
+		}
+
+		// focus/blur morphs to focusin/out; ensure we're not firing them right now
+		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
+			return;
+		}
+
+		if ( type.indexOf(".") >= 0 ) {
+			// Namespaced trigger; create a regexp to match event type in handle()
+			namespaces = type.split(".");
+			type = namespaces.shift();
+			namespaces.sort();
+		}
+		ontype = type.indexOf(":") < 0 && "on" + type;
+
+		// Caller can pass in a jQuery.Event object, Object, or just an event type string
+		event = event[ jQuery.expando ] ?
+			event :
+			new jQuery.Event( type, typeof event === "object" && event );
+
+		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
+		event.isTrigger = onlyHandlers ? 2 : 3;
+		event.namespace = namespaces.join(".");
+		event.namespace_re = event.namespace ?
+			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
+			null;
+
+		// Clean up the event in case it is being reused
+		event.result = undefined;
+		if ( !event.target ) {
+			event.target = elem;
+		}
+
+		// Clone any incoming data and prepend the event, creating the handler arg list
+		data = data == null ?
+			[ event ] :
+			jQuery.makeArray( data, [ event ] );
+
+		// Allow special events to draw outside the lines
+		special = jQuery.event.special[ type ] || {};
+		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
+			return;
+		}
+
+		// Determine event propagation path in advance, per W3C events spec (#9951)
+		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
+		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {
+
+			bubbleType = special.delegateType || type;
+			if ( !rfocusMorph.test( bubbleType + type ) ) {
+				cur = cur.parentNode;
+			}
+			for ( ; cur; cur = cur.parentNode ) {
+				eventPath.push( cur );
+				tmp = cur;
+			}
+
+			// Only add window if we got to document (e.g., not plain obj or detached DOM)
+			if ( tmp === (elem.ownerDocument || document) ) {
+				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
+			}
+		}
+
+		// Fire handlers on the event path
+		i = 0;
+		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {
+
+			event.type = i > 1 ?
+				bubbleType :
+				special.bindType || type;
+
+			// jQuery handler
+			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
+			if ( handle ) {
+				handle.apply( cur, data );
+			}
+
+			// Native handler
+			handle = ontype && cur[ ontype ];
+			if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {
+				event.preventDefault();
+			}
+		}
+		event.type = type;
+
+		// If nobody prevented the default action, do it now
+		if ( !onlyHandlers && !event.isDefaultPrevented() ) {
+
+			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
+				jQuery.acceptData( elem ) ) {
+
+				// Call a native DOM method on the target with the same name name as the event.
+				// Can't use an .isFunction() check here because IE6/7 fails that test.
+				// Don't do default actions on window, that's where global variables be (#6170)
+				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {
+
+					// Don't re-trigger an onFOO event when we call its FOO() method
+					tmp = elem[ ontype ];
+
+					if ( tmp ) {
+						elem[ ontype ] = null;
+					}
+
+					// Prevent re-triggering of the same event, since we already bubbled it above
+					jQuery.event.triggered = type;
+					try {
+						elem[ type ]();
+					} catch ( e ) {
+						// IE<9 dies on focus/blur to hidden element (#1486,#12518)
+						// only reproducible on winXP IE8 native, not IE9 in IE8 mode
+					}
+					jQuery.event.triggered = undefined;
+
+					if ( tmp ) {
+						elem[ ontype ] = tmp;
+					}
+				}
+			}
+		}
+
+		return event.result;
+	},
+
+	dispatch: function( event ) {
+
+		// Make a writable jQuery.Event from the native event object
+		event = jQuery.event.fix( event );
+
+		var i, ret, handleObj, matched, j,
+			handlerQueue = [],
+			args = core_slice.call( arguments ),
+			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
+			special = jQuery.event.special[ event.type ] || {};
+
+		// Use the fix-ed jQuery.Event rather than the (read-only) native event
+		args[0] = event;
+		event.delegateTarget = this;
+
+		// Call the preDispatch hook for the mapped type, and let it bail if desired
+		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
+			return;
+		}
+
+		// Determine handlers
+		handlerQueue = jQuery.event.handlers.call( this, event, handlers );
+
+		// Run delegates first; they may want to stop propagation beneath us
+		i = 0;
+		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
+			event.currentTarget = matched.elem;
+
+			j = 0;
+			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {
+
+				// Triggered event must either 1) have no namespace, or
+				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
+				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {
+
+					event.handleObj = handleObj;
+					event.data = handleObj.data;
+
+					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
+							.apply( matched.elem, args );
+
+					if ( ret !== undefined ) {
+						if ( (event.result = ret) === false ) {
+							event.preventDefault();
+							event.stopPropagation();
+						}
+					}
+				}
+			}
+		}
+
+		// Call the postDispatch hook for the mapped type
+		if ( special.postDispatch ) {
+			special.postDispatch.call( this, event );
+		}
+
+		return event.result;
+	},
+
+	handlers: function( event, handlers ) {
+		var sel, handleObj, matches, i,
+			handlerQueue = [],
+			delegateCount = handlers.delegateCount,
+			cur = event.target;
+
+		// Find delegate handlers
+		// Black-hole SVG <use> instance trees (#13180)
+		// Avoid non-left-click bubbling in Firefox (#3861)
+		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {
+
+			/* jshint eqeqeq: false */
+			for ( ; cur != this; cur = cur.parentNode || this ) {
+				/* jshint eqeqeq: true */
+
+				// Don't check non-elements (#13208)
+				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
+				if ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== "click") ) {
+					matches = [];
+					for ( i = 0; i < delegateCount; i++ ) {
+						handleObj = handlers[ i ];
+
+						// Don't conflict with Object.prototype properties (#13203)
+						sel = handleObj.selector + " ";
+
+						if ( matches[ sel ] === undefined ) {
+							matches[ sel ] = handleObj.needsContext ?
+								jQuery( sel, this ).index( cur ) >= 0 :
+								jQuery.find( sel, this, null, [ cur ] ).length;
+						}
+						if ( matches[ sel ] ) {
+							matches.push( handleObj );
+						}
+					}
+					if ( matches.length ) {
+						handlerQueue.push({ elem: cur, handlers: matches });
+					}
+				}
+			}
+		}
+
+		// Add the remaining (directly-bound) handlers
+		if ( delegateCount < handlers.length ) {
+			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
+		}
+
+		return handlerQueue;
+	},
+
+	fix: function( event ) {
+		if ( event[ jQuery.expando ] ) {
+			return event;
+		}
+
+		// Create a writable copy of the event object and normalize some properties
+		var i, prop, copy,
+			type = event.type,
+			originalEvent = event,
+			fixHook = this.fixHooks[ type ];
+
+		if ( !fixHook ) {
+			this.fixHooks[ type ] = fixHook =
+				rmouseEvent.test( type ) ? this.mouseHooks :
+				rkeyEvent.test( type ) ? this.keyHooks :
+				{};
+		}
+		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;
+
+		event = new jQuery.Event( originalEvent );
+
+		i = copy.length;
+		while ( i-- ) {
+			prop = copy[ i ];
+			event[ prop ] = originalEvent[ prop ];
+		}
+
+		// Support: IE<9
+		// Fix target property (#1925)
+		if ( !event.target ) {
+			event.target = originalEvent.srcElement || document;
+		}
+
+		// Support: Chrome 23+, Safari?
+		// Target should not be a text node (#504, #13143)
+		if ( event.target.nodeType === 3 ) {
+			event.target = event.target.parentNode;
+		}
+
+		// Support: IE<9
+		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
+		event.metaKey = !!event.metaKey;
+
+		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
+	},
+
+	// Includes some event props shared by KeyEvent and MouseEvent
+	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
+
+	fixHooks: {},
+
+	keyHooks: {
+		props: "char charCode key keyCode".split(" "),
+		filter: function( event, original ) {
+
+			// Add which for key events
+			if ( event.which == null ) {
+				event.which = original.charCode != null ? original.charCode : original.keyCode;
+			}
+
+			return event;
+		}
+	},
+
+	mouseHooks: {
+		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
+		filter: function( event, original ) {
+			var body, eventDoc, doc,
+				button = original.button,
+				fromElement = original.fromElement;
+
+			// Calculate pageX/Y if missing and clientX/Y available
+			if ( event.pageX == null && original.clientX != null ) {
+				eventDoc = event.target.ownerDocument || document;
+				doc = eventDoc.documentElement;
+				body = eventDoc.body;
+
+				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
+				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
+			}
+
+			// Add relatedTarget, if necessary
+			if ( !event.relatedTarget && fromElement ) {
+				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
+			}
+
+			// Add which for click: 1 === left; 2 === middle; 3 === right
+			// Note: button is not normalized, so don't use it
+			if ( !event.which && button !== undefined ) {
+				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
+			}
+
+			return event;
+		}
+	},
+
+	special: {
+		load: {
+			// Prevent triggered image.load events from bubbling to window.load
+			noBubble: true
+		},
+		focus: {
+			// Fire native event if possible so blur/focus sequence is correct
+			trigger: function() {
+				if ( this !== safeActiveElement() && this.focus ) {
+					try {
+						this.focus();
+						return false;
+					} catch ( e ) {
+						// Support: IE<9
+						// If we error on focus to hidden element (#1486, #12518),
+						// let .trigger() run the handlers
+					}
+				}
+			},
+			delegateType: "focusin"
+		},
+		blur: {
+			trigger: function() {
+				if ( this === safeActiveElement() && this.blur ) {
+					this.blur();
+					return false;
+				}
+			},
+			delegateType: "focusout"
+		},
+		click: {
+			// For checkbox, fire native event so checked state will be right
+			trigger: function() {
+				if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
+					this.click();
+					return false;
+				}
+			},
+
+			// For cross-browser consistency, don't fire native .click() on links
+			_default: function( event ) {
+				return jQuery.nodeName( event.target, "a" );
+			}
+		},
+
+		beforeunload: {
+			postDispatch: function( event ) {
+
+				// Even when returnValue equals to undefined Firefox will still show alert
+				if ( event.result !== undefined ) {
+					event.originalEvent.returnValue = event.result;
+				}
+			}
+		}
+	},
+
+	simulate: function( type, elem, event, bubble ) {
+		// Piggyback on a donor event to simulate a different one.
+		// Fake originalEvent to avoid donor's stopPropagation, but if the
+		// simulated event prevents default then we do the same on the donor.
+		var e = jQuery.extend(
+			new jQuery.Event(),
+			event,
+			{
+				type: type,
+				isSimulated: true,
+				originalEvent: {}
+			}
+		);
+		if ( bubble ) {
+			jQuery.event.trigger( e, null, elem );
+		} else {
+			jQuery.event.dispatch.call( elem, e );
+		}
+		if ( e.isDefaultPrevented() ) {
+			event.preventDefault();
+		}
+	}
+};
+
+jQuery.removeEvent = document.removeEventListener ?
+	function( elem, type, handle ) {
+		if ( elem.removeEventListener ) {
+			elem.removeEventListener( type, handle, false );
+		}
+	} :
+	function( elem, type, handle ) {
+		var name = "on" + type;
+
+		if ( elem.detachEvent ) {
+
+			// #8545, #7054, preventing memory leaks for custom events in IE6-8
+			// detachEvent needed property on element, by name of that event, to properly expose it to GC
+			if ( typeof elem[ name ] === core_strundefined ) {
+				elem[ name ] = null;
+			}
+
+			elem.detachEvent( name, handle );
+		}
+	};
+
+jQuery.Event = function( src, props ) {
+	// Allow instantiation without the 'new' keyword
+	if ( !(this instanceof jQuery.Event) ) {
+		return new jQuery.Event( src, props );
+	}
+
+	// Event object
+	if ( src && src.type ) {
+		this.originalEvent = src;
+		this.type = src.type;
+
+		// Events bubbling up the document may have been marked as prevented
+		// by a handler lower down the tree; reflect the correct value.
+		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
+			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;
+
+	// Event type
+	} else {
+		this.type = src;
+	}
+
+	// Put explicitly provided properties onto the event object
+	if ( props ) {
+		jQuery.extend( this, props );
+	}
+
+	// Create a timestamp if incoming event doesn't have one
+	this.timeStamp = src && src.timeStamp || jQuery.now();
+
+	// Mark it as fixed
+	this[ jQuery.expando ] = true;
+};
+
+// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
+// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
+jQuery.Event.prototype = {
+	isDefaultPrevented: returnFalse,
+	isPropagationStopped: returnFalse,
+	isImmediatePropagationStopped: returnFalse,
+
+	preventDefault: function() {
+		var e = this.originalEvent;
+
+		this.isDefaultPrevented = returnTrue;
+		if ( !e ) {
+			return;
+		}
+
+		// If preventDefault exists, run it on the original event
+		if ( e.preventDefault ) {
+			e.preventDefault();
+
+		// Support: IE
+		// Otherwise set the returnValue property of the original event to false
+		} else {
+			e.returnValue = false;
+		}
+	},
+	stopPropagation: function() {
+		var e = this.originalEvent;
+
+		this.isPropagationStopped = returnTrue;
+		if ( !e ) {
+			return;
+		}
+		// If stopPropagation exists, run it on the original event
+		if ( e.stopPropagation ) {
+			e.stopPropagation();
+		}
+
+		// Support: IE
+		// Set the cancelBubble property of the original event to true
+		e.cancelBubble = true;
+	},
+	stopImmediatePropagation: function() {
+		this.isImmediatePropagationStopped = returnTrue;
+		this.stopPropagation();
+	}
+};
+
+// Create mouseenter/leave events using mouseover/out and event-time checks
+jQuery.each({
+	mouseenter: "mouseover",
+	mouseleave: "mouseout"
+}, function( orig, fix ) {
+	jQuery.event.special[ orig ] = {
+		delegateType: fix,
+		bindType: fix,
+
+		handle: function( event ) {
+			var ret,
+				target = this,
+				related = event.relatedTarget,
+				handleObj = event.handleObj;
+
+			// For mousenter/leave call the handler if related is outside the target.
+			// NB: No relatedTarget if the mouse left/entered the browser window
+			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
+				event.type = handleObj.origType;
+				ret = handleObj.handler.apply( this, arguments );
+				event.type = fix;
+			}
+			return ret;
+		}
+	};
+});
+
+// IE submit delegation
+if ( !jQuery.support.submitBubbles ) {
+
+	jQuery.event.special.submit = {
+		setup: function() {
+			// Only need this for delegated form submit events
+			if ( jQuery.nodeName( this, "form" ) ) {
+				return false;
+			}
+
+			// Lazy-add a submit handler when a descendant form may potentially be submitted
+			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
+				// Node name check avoids a VML-related crash in IE (#9807)
+				var elem = e.target,
+					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
+				if ( form && !jQuery._data( form, "submitBubbles" ) ) {
+					jQuery.event.add( form, "submit._submit", function( event ) {
+						event._submit_bubble = true;
+					});
+					jQuery._data( form, "submitBubbles", true );
+				}
+			});
+			// return undefined since we don't need an event listener
+		},
+
+		postDispatch: function( event ) {
+			// If form was submitted by the user, bubble the event up the tree
+			if ( event._submit_bubble ) {
+				delete event._submit_bubble;
+				if ( this.parentNode && !event.isTrigger ) {
+					jQuery.event.simulate( "submit", this.parentNode, event, true );
+				}
+			}
+		},
+
+		teardown: function() {
+			// Only need this for delegated form submit events
+			if ( jQuery.nodeName( this, "form" ) ) {
+				return false;
+			}
+
+			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
+			jQuery.event.remove( this, "._submit" );
+		}
+	};
+}
+
+// IE change delegation and checkbox/radio fix
+if ( !jQuery.support.changeBubbles ) {
+
+	jQuery.event.special.change = {
+
+		setup: function() {
+
+			if ( rformElems.test( this.nodeName ) ) {
+				// IE doesn't fire change on a check/radio until blur; trigger it on click
+				// after a propertychange. Eat the blur-change in special.change.handle.
+				// This still fires onchange a second time for check/radio after blur.
+				if ( this.type === "checkbox" || this.type === "radio" ) {
+					jQuery.event.add( this, "propertychange._change", function( event ) {
+						if ( event.originalEvent.propertyName === "checked" ) {
+							this._just_changed = true;
+						}
+					});
+					jQuery.event.add( this, "click._change", function( event ) {
+						if ( this._just_changed && !event.isTrigger ) {
+							this._just_changed = false;
+						}
+						// Allow triggered, simulated change events (#11500)
+						jQuery.event.simulate( "change", this, event, true );
+					});
+				}
+				return false;
+			}
+			// Delegated event; lazy-add a change handler on descendant inputs
+			jQuery.event.add( this, "beforeactivate._change", function( e ) {
+				var elem = e.target;
+
+				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "changeBubbles" ) ) {
+					jQuery.event.add( elem, "change._change", function( event ) {
+						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
+							jQuery.event.simulate( "change", this.parentNode, event, true );
+						}
+					});
+					jQuery._data( elem, "changeBubbles", true );
+				}
+			});
+		},
+
+		handle: function( event ) {
+			var elem = event.target;
+
+			// Swallow native change events from checkbox/radio, we already triggered them above
+			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
+				return event.handleObj.handler.apply( this, arguments );
+			}
+		},
+
+		teardown: function() {
+			jQuery.event.remove( this, "._change" );
+
+			return !rformElems.test( this.nodeName );
+		}
+	};
+}
+
+// Create "bubbling" focus and blur events
+if ( !jQuery.support.focusinBubbles ) {
+	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
+
+		// Attach a single capturing handler while someone wants focusin/focusout
+		var attaches = 0,
+			handler = function( event ) {
+				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
+			};
+
+		jQuery.event.special[ fix ] = {
+			setup: function() {
+				if ( attaches++ === 0 ) {
+					document.addEventListener( orig, handler, true );
+				}
+			},
+			teardown: function() {
+				if ( --attaches === 0 ) {
+					document.removeEventListener( orig, handler, true );
+				}
+			}
+		};
+	});
+}
+
+jQuery.fn.extend({
+
+	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
+		var type, origFn;
+
+		// Types can be a map of types/handlers
+		if ( typeof types === "object" ) {
+			// ( types-Object, selector, data )
+			if ( typeof selector !== "string" ) {
+				// ( types-Object, data )
+				data = data || selector;
+				selector = undefined;
+			}
+			for ( type in types ) {
+				this.on( type, selector, data, types[ type ], one );
+			}
+			return this;
+		}
+
+		if ( data == null && fn == null ) {
+			// ( types, fn )
+			fn = selector;
+			data = selector = undefined;
+		} else if ( fn == null ) {
+			if ( typeof selector === "string" ) {
+				// ( types, selector, fn )
+				fn = data;
+				data = undefined;
+			} else {
+				// ( types, data, fn )
+				fn = data;
+				data = selector;
+				selector = undefined;
+			}
+		}
+		if ( fn === false ) {
+			fn = returnFalse;
+		} else if ( !fn ) {
+			return this;
+		}
+
+		if ( one === 1 ) {
+			origFn = fn;
+			fn = function( event ) {
+				// Can use an empty set, since event contains the info
+				jQuery().off( event );
+				return origFn.apply( this, arguments );
+			};
+			// Use same guid so caller can remove using origFn
+			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
+		}
+		return this.each( function() {
+			jQuery.event.add( this, types, fn, data, selector );
+		});
+	},
+	one: function( types, selector, data, fn ) {
+		return this.on( types, selector, data, fn, 1 );
+	},
+	off: function( types, selector, fn ) {
+		var handleObj, type;
+		if ( types && types.preventDefault && types.handleObj ) {
+			// ( event )  dispatched jQuery.Event
+			handleObj = types.handleObj;
+			jQuery( types.delegateTarget ).off(
+				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
+				handleObj.selector,
+				handleObj.handler
+			);
+			return this;
+		}
+		if ( typeof types === "object" ) {
+			// ( types-object [, selector] )
+			for ( type in types ) {
+				this.off( type, selector, types[ type ] );
+			}
+			return this;
+		}
+		if ( selector === false || typeof selector === "function" ) {
+			// ( types [, fn] )
+			fn = selector;
+			selector = undefined;
+		}
+		if ( fn === false ) {
+			fn = returnFalse;
+		}
+		return this.each(function() {
+			jQuery.event.remove( this, types, fn, selector );
+		});
+	},
+
+	trigger: function( type, data ) {
+		return this.each(function() {
+			jQuery.event.trigger( type, data, this );
+		});
+	},
+	triggerHandler: function( type, data ) {
+		var elem = this[0];
+		if ( elem ) {
+			return jQuery.event.trigger( type, data, elem, true );
+		}
+	}
+});
+var isSimple = /^.[^:#\[\.,]*$/,
+	rparentsprev = /^(?:parents|prev(?:Until|All))/,
+	rneedsContext = jQuery.expr.match.needsContext,
+	// methods guaranteed to produce a unique set when starting from a unique set
+	guaranteedUnique = {
+		children: true,
+		contents: true,
+		next: true,
+		prev: true
+	};
+
+jQuery.fn.extend({
+	find: function( selector ) {
+		var i,
+			ret = [],
+			self = this,
+			len = self.length;
+
+		if ( typeof selector !== "string" ) {
+			return this.pushStack( jQuery( selector ).filter(function() {
+				for ( i = 0; i < len; i++ ) {
+					if ( jQuery.contains( self[ i ], this ) ) {
+						return true;
+					}
+				}
+			}) );
+		}
+
+		for ( i = 0; i < len; i++ ) {
+			jQuery.find( selector, self[ i ], ret );
+		}
+
+		// Needed because $( selector, context ) becomes $( context ).find( selector )
+		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
+		ret.selector = this.selector ? this.selector + " " + selector : selector;
+		return ret;
+	},
+
+	has: function( target ) {
+		var i,
+			targets = jQuery( target, this ),
+			len = targets.length;
+
+		return this.filter(function() {
+			for ( i = 0; i < len; i++ ) {
+				if ( jQuery.contains( this, targets[i] ) ) {
+					return true;
+				}
+			}
+		});
+	},
+
+	not: function( selector ) {
+		return this.pushStack( winnow(this, selector || [], true) );
+	},
+
+	filter: function( selector ) {
+		return this.pushStack( winnow(this, selector || [], false) );
+	},
+
+	is: function( selector ) {
+		return !!winnow(
+			this,
+
+			// If this is a positional/relative selector, check membership in the returned set
+			// so $("p:first").is("p:last") won't return true for a doc with two "p".
+			typeof selector === "string" && rneedsContext.test( selector ) ?
+				jQuery( selector ) :
+				selector || [],
+			false
+		).length;
+	},
+
+	closest: function( selectors, context ) {
+		var cur,
+			i = 0,
+			l = this.length,
+			ret = [],
+			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
+				jQuery( selectors, context || this.context ) :
+				0;
+
+		for ( ; i < l; i++ ) {
+			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
+				// Always skip document fragments
+				if ( cur.nodeType < 11 && (pos ?
+					pos.index(cur) > -1 :
+
+					// Don't pass non-elements to Sizzle
+					cur.nodeType === 1 &&
+						jQuery.find.matchesSelector(cur, selectors)) ) {
+
+					cur = ret.push( cur );
+					break;
+				}
+			}
+		}
+
+		return this.pushStack( ret.length > 1 ? jQuery.unique( ret ) : ret );
+	},
+
+	// Determine the position of an element within
+	// the matched set of elements
+	index: function( elem ) {
+
+		// No argument, return index in parent
+		if ( !elem ) {
+			return ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;
+		}
+
+		// index in selector
+		if ( typeof elem === "string" ) {
+			return jQuery.inArray( this[0], jQuery( elem ) );
+		}
+
+		// Locate the position of the desired element
+		return jQuery.inArray(
+			// If it receives a jQuery object, the first element is used
+			elem.jquery ? elem[0] : elem, this );
+	},
+
+	add: function( selector, context ) {
+		var set = typeof selector === "string" ?
+				jQuery( selector, context ) :
+				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
+			all = jQuery.merge( this.get(), set );
+
+		return this.pushStack( jQuery.unique(all) );
+	},
+
+	addBack: function( selector ) {
+		return this.add( selector == null ?
+			this.prevObject : this.prevObject.filter(selector)
+		);
+	}
+});
+
+function sibling( cur, dir ) {
+	do {
+		cur = cur[ dir ];
+	} while ( cur && cur.nodeType !== 1 );
+
+	return cur;
+}
+
+jQuery.each({
+	parent: function( elem ) {
+		var parent = elem.parentNode;
+		return parent && parent.nodeType !== 11 ? parent : null;
+	},
+	parents: function( elem ) {
+		return jQuery.dir( elem, "parentNode" );
+	},
+	parentsUntil: function( elem, i, until ) {
+		return jQuery.dir( elem, "parentNode", until );
+	},
+	next: function( elem ) {
+		return sibling( elem, "nextSibling" );
+	},
+	prev: function( elem ) {
+		return sibling( elem, "previousSibling" );
+	},
+	nextAll: function( elem ) {
+		return jQuery.dir( elem, "nextSibling" );
+	},
+	prevAll: function( elem ) {
+		return jQuery.dir( elem, "previousSibling" );
+	},
+	nextUntil: function( elem, i, until ) {
+		return jQuery.dir( elem, "nextSibling", until );
+	},
+	prevUntil: function( elem, i, until ) {
+		return jQuery.dir( elem, "previousSibling", until );
+	},
+	siblings: function( elem ) {
+		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
+	},
+	children: function( elem ) {
+		return jQuery.sibling( elem.firstChild );
+	},
+	contents: function( elem ) {
+		return jQuery.nodeName( elem, "iframe" ) ?
+			elem.contentDocument || elem.contentWindow.document :
+			jQuery.merge( [], elem.childNodes );
+	}
+}, function( name, fn ) {
+	jQuery.fn[ name ] = function( until, selector ) {
+		var ret = jQuery.map( this, fn, until );
+
+		if ( name.slice( -5 ) !== "Until" ) {
+			selector = until;
+		}
+
+		if ( selector && typeof selector === "string" ) {
+			ret = jQuery.filter( selector, ret );
+		}
+
+		if ( this.length > 1 ) {
+			// Remove duplicates
+			if ( !guaranteedUnique[ name ] ) {
+				ret = jQuery.unique( ret );
+			}
+
+			// Reverse order for parents* and prev-derivatives
+			if ( rparentsprev.test( name ) ) {
+				ret = ret.reverse();
+			}
+		}
+
+		return this.pushStack( ret );
+	};
+});
+
+jQuery.extend({
+	filter: function( expr, elems, not ) {
+		var elem = elems[ 0 ];
+
+		if ( not ) {
+			expr = ":not(" + expr + ")";
+		}
+
+		return elems.length === 1 && elem.nodeType === 1 ?
+			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
+			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
+				return elem.nodeType === 1;
+			}));
+	},
+
+	dir: function( elem, dir, until ) {
+		var matched = [],
+			cur = elem[ dir ];
+
+		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
+			if ( cur.nodeType === 1 ) {
+				matched.push( cur );
+			}
+			cur = cur[dir];
+		}
+		return matched;
+	},
+
+	sibling: function( n, elem ) {
+		var r = [];
+
+		for ( ; n; n = n.nextSibling ) {
+			if ( n.nodeType === 1 && n !== elem ) {
+				r.push( n );
+			}
+		}
+
+		return r;
+	}
+});
+
+// Implement the identical functionality for filter and not
+function winnow( elements, qualifier, not ) {
+	if ( jQuery.isFunction( qualifier ) ) {
+		return jQuery.grep( elements, function( elem, i ) {
+			/* jshint -W018 */
+			return !!qualifier.call( elem, i, elem ) !== not;
+		});
+
+	}
+
+	if ( qualifier.nodeType ) {
+		return jQuery.grep( elements, function( elem ) {
+			return ( elem === qualifier ) !== not;
+		});
+
+	}
+
+	if ( typeof qualifier === "string" ) {
+		if ( isSimple.test( qualifier ) ) {
+			return jQuery.filter( qualifier, elements, not );
+		}
+
+		qualifier = jQuery.filter( qualifier, elements );
+	}
+
+	return jQuery.grep( elements, function( elem ) {
+		return ( jQuery.inArray( elem, qualifier ) >= 0 ) !== not;
+	});
+}
+function createSafeFragment( document ) {
+	var list = nodeNames.split( "|" ),
+		safeFrag = document.createDocumentFragment();
+
+	if ( safeFrag.createElement ) {
+		while ( list.length ) {
+			safeFrag.createElement(
+				list.pop()
+			);
+		}
+	}
+	return safeFrag;
+}
+
+var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
+		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
+	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
+	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
+	rleadingWhitespace = /^\s+/,
+	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
+	rtagName = /<([\w:]+)/,
+	rtbody = /<tbody/i,
+	rhtml = /<|&#?\w+;/,
+	rnoInnerhtml = /<(?:script|style|link)/i,
+	manipulation_rcheckableType = /^(?:checkbox|radio)$/i,
+	// checked="checked" or checked
+	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
+	rscriptType = /^$|\/(?:java|ecma)script/i,
+	rscriptTypeMasked = /^true\/(.*)/,
+	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
+
+	// We have to close these tags to support XHTML (#13200)
+	wrapMap = {
+		option: [ 1, "<select multiple='multiple'>", "</select>" ],
+		legend: [ 1, "<fieldset>", "</fieldset>" ],
+		area: [ 1, "<map>", "</map>" ],
+		param: [ 1, "<object>", "</object>" ],
+		thead: [ 1, "<table>", "</table>" ],
+		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
+		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
+		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
+
+		// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
+		// unless wrapped in a div with non-breaking characters in front of it.
+		_default: jQuery.support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>"  ]
+	},
+	safeFragment = createSafeFragment( document ),
+	fragmentDiv = safeFragment.appendChild( document.createElement("div") );
+
+wrapMap.optgroup = wrapMap.option;
+wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
+wrapMap.th = wrapMap.td;
+
+jQuery.fn.extend({
+	text: function( value ) {
+		return jQuery.access( this, function( value ) {
+			return value === undefined ?
+				jQuery.text( this ) :
+				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
+		}, null, value, arguments.length );
+	},
+
+	append: function() {
+		return this.domManip( arguments, function( elem ) {
+			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
+				var target = manipulationTarget( this, elem );
+				target.appendChild( elem );
+			}
+		});
+	},
+
+	prepend: function() {
+		return this.domManip( arguments, function( elem ) {
+			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
+				var target = manipulationTarget( this, elem );
+				target.insertBefore( elem, target.firstChild );
+			}
+		});
+	},
+
+	before: function() {
+		return this.domManip( arguments, function( elem ) {
+			if ( this.parentNode ) {
+				this.parentNode.insertBefore( elem, this );
+			}
+		});
+	},
+
+	after: function() {
+		return this.domManip( arguments, function( elem ) {
+			if ( this.parentNode ) {
+				this.parentNode.insertBefore( elem, this.nextSibling );
+			}
+		});
+	},
+
+	// keepData is for internal use only--do not document
+	remove: function( selector, keepData ) {
+		var elem,
+			elems = selector ? jQuery.filter( selector, this ) : this,
+			i = 0;
+
+		for ( ; (elem = elems[i]) != null; i++ ) {
+
+			if ( !keepData && elem.nodeType === 1 ) {
+				jQuery.cleanData( getAll( elem ) );
+			}
+
+			if ( elem.parentNode ) {
+				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
+					setGlobalEval( getAll( elem, "script" ) );
+				}
+				elem.parentNode.removeChild( elem );
+			}
+		}
+
+		return this;
+	},
+
+	empty: function() {
+		var elem,
+			i = 0;
+
+		for ( ; (elem = this[i]) != null; i++ ) {
+			// Remove element nodes and prevent memory leaks
+			if ( elem.nodeType === 1 ) {
+				jQuery.cleanData( getAll( elem, false ) );
+			}
+
+			// Remove any remaining nodes
+			while ( elem.firstChild ) {
+				elem.removeChild( elem.firstChild );
+			}
+
+			// If this is a select, ensure that it displays empty (#12336)
+			// Support: IE<9
+			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
+				elem.options.length = 0;
+			}
+		}
+
+		return this;
+	},
+
+	clone: function( dataAndEvents, deepDataAndEvents ) {
+		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
+		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
+
+		return this.map( function () {
+			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
+		});
+	},
+
+	html: function( value ) {
+		return jQuery.access( this, function( value ) {
+			var elem = this[0] || {},
+				i = 0,
+				l = this.length;
+
+			if ( value === undefined ) {
+				return elem.nodeType === 1 ?
+					elem.innerHTML.replace( rinlinejQuery, "" ) :
+					undefined;
+			}
+
+			// See if we can take a shortcut and just use innerHTML
+			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
+				( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&
+				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
+				!wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] ) {
+
+				value = value.replace( rxhtmlTag, "<$1></$2>" );
+
+				try {
+					for (; i < l; i++ ) {
+						// Remove element nodes and prevent memory leaks
+						elem = this[i] || {};
+						if ( elem.nodeType === 1 ) {
+							jQuery.cleanData( getAll( elem, false ) );
+							elem.innerHTML = value;
+						}
+					}
+
+					elem = 0;
+
+				// If using innerHTML throws an exception, use the fallback method
+				} catch(e) {}
+			}
+
+			if ( elem ) {
+				this.empty().append( value );
+			}
+		}, null, value, arguments.length );
+	},
+
+	replaceWith: function() {
+		var
+			// Snapshot the DOM in case .domManip sweeps something relevant into its fragment
+			args = jQuery.map( this, function( elem ) {
+				return [ elem.nextSibling, elem.parentNode ];
+			}),
+			i = 0;
+
+		// Make the changes, replacing each context element with the new content
+		this.domManip( arguments, function( elem ) {
+			var next = args[ i++ ],
+				parent = args[ i++ ];
+
+			if ( parent ) {
+				// Don't use the snapshot next if it has moved (#13810)
+				if ( next && next.parentNode !== parent ) {
+					next = this.nextSibling;
+				}
+				jQuery( this ).remove();
+				parent.insertBefore( elem, next );
+			}
+		// Allow new content to include elements from the context set
+		}, true );
+
+		// Force removal if there was no new content (e.g., from empty arguments)
+		return i ? this : this.remove();
+	},
+
+	detach: function( selector ) {
+		return this.remove( selector, true );
+	},
+
+	domManip: function( args, callback, allowIntersection ) {
+
+		// Flatten any nested arrays
+		args = core_concat.apply( [], args );
+
+		var first, node, hasScripts,
+			scripts, doc, fragment,
+			i = 0,
+			l = this.length,
+			set = this,
+			iNoClone = l - 1,
+			value = args[0],
+			isFunction = jQuery.isFunction( value );
+
+		// We can't cloneNode fragments that contain checked, in WebKit
+		if ( isFunction || !( l <= 1 || typeof value !== "string" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {
+			return this.each(function( index ) {
+				var self = set.eq( index );
+				if ( isFunction ) {
+					args[0] = value.call( this, index, self.html() );
+				}
+				self.domManip( args, callback, allowIntersection );
+			});
+		}
+
+		if ( l ) {
+			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, !allowIntersection && this );
+			first = fragment.firstChild;
+
+			if ( fragment.childNodes.length === 1 ) {
+				fragment = first;
+			}
+
+			if ( first ) {
+				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
+				hasScripts = scripts.length;
+
+				// Use the original fragment for the last item instead of the first because it can end up
+				// being emptied incorrectly in certain situations (#8070).
+				for ( ; i < l; i++ ) {
+					node = fragment;
+
+					if ( i !== iNoClone ) {
+						node = jQuery.clone( node, true, true );
+
+						// Keep references to cloned scripts for later restoration
+						if ( hasScripts ) {
+							jQuery.merge( scripts, getAll( node, "script" ) );
+						}
+					}
+
+					callback.call( this[i], node, i );
+				}
+
+				if ( hasScripts ) {
+					doc = scripts[ scripts.length - 1 ].ownerDocument;
+
+					// Reenable scripts
+					jQuery.map( scripts, restoreScript );
+
+					// Evaluate executable scripts on first document insertion
+					for ( i = 0; i < hasScripts; i++ ) {
+						node = scripts[ i ];
+						if ( rscriptType.test( node.type || "" ) &&
+							!jQuery._data( node, "globalEval" ) && jQuery.contains( doc, node ) ) {
+
+							if ( node.src ) {
+								// Hope ajax is available...
+								jQuery._evalUrl( node.src );
+							} else {
+								jQuery.globalEval( ( node.text || node.textContent || node.innerHTML || "" ).replace( rcleanScript, "" ) );
+							}
+						}
+					}
+				}
+
+				// Fix #11809: Avoid leaking memory
+				fragment = first = null;
+			}
+		}
+
+		return this;
+	}
+});
+
+// Support: IE<8
+// Manipulating tables requires a tbody
+function manipulationTarget( elem, content ) {
+	return jQuery.nodeName( elem, "table" ) &&
+		jQuery.nodeName( content.nodeType === 1 ? content : content.firstChild, "tr" ) ?
+
+		elem.getElementsByTagName("tbody")[0] ||
+			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
+		elem;
+}
+
+// Replace/restore the type attribute of script elements for safe DOM manipulation
+function disableScript( elem ) {
+	elem.type = (jQuery.find.attr( elem, "type" ) !== null) + "/" + elem.type;
+	return elem;
+}
+function restoreScript( elem ) {
+	var match = rscriptTypeMasked.exec( elem.type );
+	if ( match ) {
+		elem.type = match[1];
+	} else {
+		elem.removeAttribute("type");
+	}
+	return elem;
+}
+
+// Mark scripts as having already been evaluated
+function setGlobalEval( elems, refElements ) {
+	var elem,
+		i = 0;
+	for ( ; (elem = elems[i]) != null; i++ ) {
+		jQuery._data( elem, "globalEval", !refElements || jQuery._data( refElements[i], "globalEval" ) );
+	}
+}
+
+function cloneCopyEvent( src, dest ) {
+
+	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
+		return;
+	}
+
+	var type, i, l,
+		oldData = jQuery._data( src ),
+		curData = jQuery._data( dest, oldData ),
+		events = oldData.events;
+
+	if ( events ) {
+		delete curData.handle;
+		curData.events = {};
+
+		for ( type in events ) {
+			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
+				jQuery.event.add( dest, type, events[ type ][ i ] );
+			}
+		}
+	}
+
+	// make the cloned public data object a copy from the original
+	if ( curData.data ) {
+		curData.data = jQuery.extend( {}, curData.data );
+	}
+}
+
+function fixCloneNodeIssues( src, dest ) {
+	var nodeName, e, data;
+
+	// We do not need to do anything for non-Elements
+	if ( dest.nodeType !== 1 ) {
+		return;
+	}
+
+	nodeName = dest.nodeName.toLowerCase();
+
+	// IE6-8 copies events bound via attachEvent when using cloneNode.
+	if ( !jQuery.support.noCloneEvent && dest[ jQuery.expando ] ) {
+		data = jQuery._data( dest );
+
+		for ( e in data.events ) {
+			jQuery.removeEvent( dest, e, data.handle );
+		}
+
+		// Event data gets referenced instead of copied if the expando gets copied too
+		dest.removeAttribute( jQuery.expando );
+	}
+
+	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
+	if ( nodeName === "script" && dest.text !== src.text ) {
+		disableScript( dest ).text = src.text;
+		restoreScript( dest );
+
+	// IE6-10 improperly clones children of object elements using classid.
+	// IE10 throws NoModificationAllowedError if parent is null, #12132.
+	} else if ( nodeName === "object" ) {
+		if ( dest.parentNode ) {
+			dest.outerHTML = src.outerHTML;
+		}
+
+		// This path appears unavoidable for IE9. When cloning an object
+		// element in IE9, the outerHTML strategy above is not sufficient.
+		// If the src has innerHTML and the destination does not,
+		// copy the src.innerHTML into the dest.innerHTML. #10324
+		if ( jQuery.support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {
+			dest.innerHTML = src.innerHTML;
+		}
+
+	} else if ( nodeName === "input" && manipulation_rcheckableType.test( src.type ) ) {
+		// IE6-8 fails to persist the checked state of a cloned checkbox
+		// or radio button. Worse, IE6-7 fail to give the cloned element
+		// a checked appearance if the defaultChecked value isn't also set
+
+		dest.defaultChecked = dest.checked = src.checked;
+
+		// IE6-7 get confused and end up setting the value of a cloned
+		// checkbox/radio button to an empty string instead of "on"
+		if ( dest.value !== src.value ) {
+			dest.value = src.value;
+		}
+
+	// IE6-8 fails to return the selected option to the default selected
+	// state when cloning options
+	} else if ( nodeName === "option" ) {
+		dest.defaultSelected = dest.selected = src.defaultSelected;
+
+	// IE6-8 fails to set the defaultValue to the correct value when
+	// cloning other types of input fields
+	} else if ( nodeName === "input" || nodeName === "textarea" ) {
+		dest.defaultValue = src.defaultValue;
+	}
+}
+
+jQuery.each({
+	appendTo: "append",
+	prependTo: "prepend",
+	insertBefore: "before",
+	insertAfter: "after",
+	replaceAll: "replaceWith"
+}, function( name, original ) {
+	jQuery.fn[ name ] = function( selector ) {
+		var elems,
+			i = 0,
+			ret = [],
+			insert = jQuery( selector ),
+			last = insert.length - 1;
+
+		for ( ; i <= last; i++ ) {
+			elems = i === last ? this : this.clone(true);
+			jQuery( insert[i] )[ original ]( elems );
+
+			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
+			core_push.apply( ret, elems.get() );
+		}
+
+		return this.pushStack( ret );
+	};
+});
+
+function getAll( context, tag ) {
+	var elems, elem,
+		i = 0,
+		found = typeof context.getElementsByTagName !== core_strundefined ? context.getElementsByTagName( tag || "*" ) :
+			typeof context.querySelectorAll !== core_strundefined ? context.querySelectorAll( tag || "*" ) :
+			undefined;
+
+	if ( !found ) {
+		for ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {
+			if ( !tag || jQuery.nodeName( elem, tag ) ) {
+				found.push( elem );
+			} else {
+				jQuery.merge( found, getAll( elem, tag ) );
+			}
+		}
+	}
+
+	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
+		jQuery.merge( [ context ], found ) :
+		found;
+}
+
+// Used in buildFragment, fixes the defaultChecked property
+function fixDefaultChecked( elem ) {
+	if ( manipulation_rcheckableType.test( elem.type ) ) {
+		elem.defaultChecked = elem.checked;
+	}
+}
+
+jQuery.extend({
+	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
+		var destElements, node, clone, i, srcElements,
+			inPage = jQuery.contains( elem.ownerDocument, elem );
+
+		if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
+			clone = elem.cloneNode( true );
+
+		// IE<=8 does not properly clone detached, unknown element nodes
+		} else {
+			fragmentDiv.innerHTML = elem.outerHTML;
+			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
+		}
+
+		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
+				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
+
+			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
+			destElements = getAll( clone );
+			srcElements = getAll( elem );
+
+			// Fix all IE cloning issues
+			for ( i = 0; (node = srcElements[i]) != null; ++i ) {
+				// Ensure that the destination node is not null; Fixes #9587
+				if ( destElements[i] ) {
+					fixCloneNodeIssues( node, destElements[i] );
+				}
+			}
+		}
+
+		// Copy the events from the original to the clone
+		if ( dataAndEvents ) {
+			if ( deepDataAndEvents ) {
+				srcElements = srcElements || getAll( elem );
+				destElements = destElements || getAll( clone );
+
+				for ( i = 0; (node = srcElements[i]) != null; i++ ) {
+					cloneCopyEvent( node, destElements[i] );
+				}
+			} else {
+				cloneCopyEvent( elem, clone );
+			}
+		}
+
+		// Preserve script evaluation history
+		destElements = getAll( clone, "script" );
+		if ( destElements.length > 0 ) {
+			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
+		}
+
+		destElements = srcElements = node = null;
+
+		// Return the cloned set
+		return clone;
+	},
+
+	buildFragment: function( elems, context, scripts, selection ) {
+		var j, elem, contains,
+			tmp, tag, tbody, wrap,
+			l = elems.length,
+
+			// Ensure a safe fragment
+			safe = createSafeFragment( context ),
+
+			nodes = [],
+			i = 0;
+
+		for ( ; i < l; i++ ) {
+			elem = elems[ i ];
+
+			if ( elem || elem === 0 ) {
+
+				// Add nodes directly
+				if ( jQuery.type( elem ) === "object" ) {
+					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );
+
+				// Convert non-html into a text node
+				} else if ( !rhtml.test( elem ) ) {
+					nodes.push( context.createTextNode( elem ) );
+
+				// Convert html into DOM nodes
+				} else {
+					tmp = tmp || safe.appendChild( context.createElement("div") );
+
+					// Deserialize a standard representation
+					tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase();
+					wrap = wrapMap[ tag ] || wrapMap._default;
+
+					tmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[2];
+
+					// Descend through wrappers to the right content
+					j = wrap[0];
+					while ( j-- ) {
+						tmp = tmp.lastChild;
+					}
+
+					// Manually add leading whitespace removed by IE
+					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
+						nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );
+					}
+
+					// Remove IE's autoinserted <tbody> from table fragments
+					if ( !jQuery.support.tbody ) {
+
+						// String was a <table>, *may* have spurious <tbody>
+						elem = tag === "table" && !rtbody.test( elem ) ?
+							tmp.firstChild :
+
+							// String was a bare <thead> or <tfoot>
+							wrap[1] === "<table>" && !rtbody.test( elem ) ?
+								tmp :
+								0;
+
+						j = elem && elem.childNodes.length;
+						while ( j-- ) {
+							if ( jQuery.nodeName( (tbody = elem.childNodes[j]), "tbody" ) && !tbody.childNodes.length ) {
+								elem.removeChild( tbody );
+							}
+						}
+					}
+
+					jQuery.merge( nodes, tmp.childNodes );
+
+					// Fix #12392 for WebKit and IE > 9
+					tmp.textContent = "";
+
+					// Fix #12392 for oldIE
+					while ( tmp.firstChild ) {
+						tmp.removeChild( tmp.firstChild );
+					}
+
+					// Remember the top-level container for proper cleanup
+					tmp = safe.lastChild;
+				}
+			}
+		}
+
+		// Fix #11356: Clear elements from fragment
+		if ( tmp ) {
+			safe.removeChild( tmp );
+		}
+
+		// Reset defaultChecked for any radios and checkboxes
+		// about to be appended to the DOM in IE 6/7 (#8060)
+		if ( !jQuery.support.appendChecked ) {
+			jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
+		}
+
+		i = 0;
+		while ( (elem = nodes[ i++ ]) ) {
+
+			// #4087 - If origin and destination elements are the same, and this is
+			// that element, do not do anything
+			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
+				continue;
+			}
+
+			contains = jQuery.contains( elem.ownerDocument, elem );
+
+			// Append to fragment
+			tmp = getAll( safe.appendChild( elem ), "script" );
+
+			// Preserve script evaluation history
+			if ( contains ) {
+				setGlobalEval( tmp );
+			}
+
+			// Capture executables
+			if ( scripts ) {
+				j = 0;
+				while ( (elem = tmp[ j++ ]) ) {
+					if ( rscriptType.test( elem.type || "" ) ) {
+						scripts.push( elem );
+					}
+				}
+			}
+		}
+
+		tmp = null;
+
+		return safe;
+	},
+
+	cleanData: function( elems, /* internal */ acceptData ) {
+		var elem, type, id, data,
+			i = 0,
+			internalKey = jQuery.expando,
+			cache = jQuery.cache,
+			deleteExpando = jQuery.support.deleteExpando,
+			special = jQuery.event.special;
+
+		for ( ; (elem = elems[i]) != null; i++ ) {
+
+			if ( acceptData || jQuery.acceptData( elem ) ) {
+
+				id = elem[ internalKey ];
+				data = id && cache[ id ];
+
+				if ( data ) {
+					if ( data.events ) {
+						for ( type in data.events ) {
+							if ( special[ type ] ) {
+								jQuery.event.remove( elem, type );
+
+							// This is a shortcut to avoid jQuery.event.remove's overhead
+							} else {
+								jQuery.removeEvent( elem, type, data.handle );
+							}
+						}
+					}
+
+					// Remove cache only if it was not already removed by jQuery.event.remove
+					if ( cache[ id ] ) {
+
+						delete cache[ id ];
+
+						// IE does not allow us to delete expando properties from nodes,
+						// nor does it have a removeAttribute function on Document nodes;
+						// we must handle all of these cases
+						if ( deleteExpando ) {
+							delete elem[ internalKey ];
+
+						} else if ( typeof elem.removeAttribute !== core_strundefined ) {
+							elem.removeAttribute( internalKey );
+
+						} else {
+							elem[ internalKey ] = null;
+						}
+
+						core_deletedIds.push( id );
+					}
+				}
+			}
+		}
+	},
+
+	_evalUrl: function( url ) {
+		return jQuery.ajax({
+			url: url,
+			type: "GET",
+			dataType: "script",
+			async: false,
+			global: false,
+			"throws": true
+		});
+	}
+});
+jQuery.fn.extend({
+	wrapAll: function( html ) {
+		if ( jQuery.isFunction( html ) ) {
+			return this.each(function(i) {
+				jQuery(this).wrapAll( html.call(this, i) );
+			});
+		}
+
+		if ( this[0] ) {
+			// The elements to wrap the target around
+			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);
+
+			if ( this[0].parentNode ) {
+				wrap.insertBefore( this[0] );
+			}
+
+			wrap.map(function() {
+				var elem = this;
+
+				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
+					elem = elem.firstChild;
+				}
+
+				return elem;
+			}).append( this );
+		}
+
+		return this;
+	},
+
+	wrapInner: function( html ) {
+		if ( jQuery.isFunction( html ) ) {
+			return this.each(function(i) {
+				jQuery(this).wrapInner( html.call(this, i) );
+			});
+		}
+
+		return this.each(function() {
+			var self = jQuery( this ),
+				contents = self.contents();
+
+			if ( contents.length ) {
+				contents.wrapAll( html );
+
+			} else {
+				self.append( html );
+			}
+		});
+	},
+
+	wrap: function( html ) {
+		var isFunction = jQuery.isFunction( html );
+
+		return this.each(function(i) {
+			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
+		});
+	},
+
+	unwrap: function() {
+		return this.parent().each(function() {
+			if ( !jQuery.nodeName( this, "body" ) ) {
+				jQuery( this ).replaceWith( this.childNodes );
+			}
+		}).end();
+	}
+});
+var iframe, getStyles, curCSS,
+	ralpha = /alpha\([^)]*\)/i,
+	ropacity = /opacity\s*=\s*([^)]*)/,
+	rposition = /^(top|right|bottom|left)$/,
+	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
+	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
+	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
+	rmargin = /^margin/,
+	rnumsplit = new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),
+	rnumnonpx = new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),
+	rrelNum = new RegExp( "^([+-])=(" + core_pnum + ")", "i" ),
+	elemdisplay = { BODY: "block" },
+
+	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
+	cssNormalTransform = {
+		letterSpacing: 0,
+		fontWeight: 400
+	},
+
+	cssExpand = [ "Top", "Right", "Bottom", "Left" ],
+	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];
+
+// return a css property mapped to a potentially vendor prefixed property
+function vendorPropName( style, name ) {
+
+	// shortcut for names that are not vendor prefixed
+	if ( name in style ) {
+		return name;
+	}
+
+	// check for vendor prefixed names
+	var capName = name.charAt(0).toUpperCase() + name.slice(1),
+		origName = name,
+		i = cssPrefixes.length;
+
+	while ( i-- ) {
+		name = cssPrefixes[ i ] + capName;
+		if ( name in style ) {
+			return name;
+		}
+	}
+
+	return origName;
+}
+
+function isHidden( elem, el ) {
+	// isHidden might be called from jQuery#filter function;
+	// in that case, element will be second argument
+	elem = el || elem;
+	return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
+}
+
+function showHide( elements, show ) {
+	var display, elem, hidden,
+		values = [],
+		index = 0,
+		length = elements.length;
+
+	for ( ; index < length; index++ ) {
+		elem = elements[ index ];
+		if ( !elem.style ) {
+			continue;
+		}
+
+		values[ index ] = jQuery._data( elem, "olddisplay" );
+		display = elem.style.display;
+		if ( show ) {
+			// Reset the inline display of this element to learn if it is
+			// being hidden by cascaded rules or not
+			if ( !values[ index ] && display === "none" ) {
+				elem.style.display = "";
+			}
+
+			// Set elements which have been overridden with display: none
+			// in a stylesheet to whatever the default browser style is
+			// for such an element
+			if ( elem.style.display === "" && isHidden( elem ) ) {
+				values[ index ] = jQuery._data( elem, "olddisplay", css_defaultDisplay(elem.nodeName) );
+			}
+		} else {
+
+			if ( !values[ index ] ) {
+				hidden = isHidden( elem );
+
+				if ( display && display !== "none" || !hidden ) {
+					jQuery._data( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
+				}
+			}
+		}
+	}
+
+	// Set the display of most of the elements in a second loop
+	// to avoid the constant reflow
+	for ( index = 0; index < length; index++ ) {
+		elem = elements[ index ];
+		if ( !elem.style ) {
+			continue;
+		}
+		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
+			elem.style.display = show ? values[ index ] || "" : "none";
+		}
+	}
+
+	return elements;
+}
+
+jQuery.fn.extend({
+	css: function( name, value ) {
+		return jQuery.access( this, function( elem, name, value ) {
+			var len, styles,
+				map = {},
+				i = 0;
+
+			if ( jQuery.isArray( name ) ) {
+				styles = getStyles( elem );
+				len = name.length;
+
+				for ( ; i < len; i++ ) {
+					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
+				}
+
+				return map;
+			}
+
+			return value !== undefined ?
+				jQuery.style( elem, name, value ) :
+				jQuery.css( elem, name );
+		}, name, value, arguments.length > 1 );
+	},
+	show: function() {
+		return showHide( this, true );
+	},
+	hide: function() {
+		return showHide( this );
+	},
+	toggle: function( state ) {
+		if ( typeof state === "boolean" ) {
+			return state ? this.show() : this.hide();
+		}
+
+		return this.each(function() {
+			if ( isHidden( this ) ) {
+				jQuery( this ).show();
+			} else {
+				jQuery( this ).hide();
+			}
+		});
+	}
+});
+
+jQuery.extend({
+	// Add in style property hooks for overriding the default
+	// behavior of getting and setting a style property
+	cssHooks: {
+		opacity: {
+			get: function( elem, computed ) {
+				if ( computed ) {
+					// We should always get a number back from opacity
+					var ret = curCSS( elem, "opacity" );
+					return ret === "" ? "1" : ret;
+				}
+			}
+		}
+	},
+
+	// Don't automatically add "px" to these possibly-unitless properties
+	cssNumber: {
+		"columnCount": true,
+		"fillOpacity": true,
+		"fontWeight": true,
+		"lineHeight": true,
+		"opacity": true,
+		"order": true,
+		"orphans": true,
+		"widows": true,
+		"zIndex": true,
+		"zoom": true
+	},
+
+	// Add in properties whose names you wish to fix before
+	// setting or getting the value
+	cssProps: {
+		// normalize float css property
+		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
+	},
+
+	// Get and set the style property on a DOM Node
+	style: function( elem, name, value, extra ) {
+		// Don't set styles on text and comment nodes
+		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
+			return;
+		}
+
+		// Make sure that we're working with the right name
+		var ret, type, hooks,
+			origName = jQuery.camelCase( name ),
+			style = elem.style;
+
+		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );
+
+		// gets hook for the prefixed version
+		// followed by the unprefixed version
+		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
+
+		// Check if we're setting a value
+		if ( value !== undefined ) {
+			type = typeof value;
+
+			// convert relative number strings (+= or -=) to relative numbers. #7345
+			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
+				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
+				// Fixes bug #9237
+				type = "number";
+			}
+
+			// Make sure that NaN and null values aren't set. See: #7116
+			if ( value == null || type === "number" && isNaN( value ) ) {
+				return;
+			}
+
+			// If a number was passed in, add 'px' to the (except for certain CSS properties)
+			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
+				value += "px";
+			}
+
+			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
+			// but it would mean to define eight (for every problematic property) identical functions
+			if ( !jQuery.support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
+				style[ name ] = "inherit";
+			}
+
+			// If a hook was provided, use that value, otherwise just set the specified value
+			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
+
+				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
+				// Fixes bug #5509
+				try {
+					style[ name ] = value;
+				} catch(e) {}
+			}
+
+		} else {
+			// If a hook was provided get the non-computed value from there
+			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
+				return ret;
+			}
+
+			// Otherwise just get the value from the style object
+			return style[ name ];
+		}
+	},
+
+	css: function( elem, name, extra, styles ) {
+		var num, val, hooks,
+			origName = jQuery.camelCase( name );
+
+		// Make sure that we're working with the right name
+		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );
+
+		// gets hook for the prefixed version
+		// followed by the unprefixed version
+		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
+
+		// If a hook was provided get the computed value from there
+		if ( hooks && "get" in hooks ) {
+			val = hooks.get( elem, true, extra );
+		}
+
+		// Otherwise, if a way to get the computed value exists, use that
+		if ( val === undefined ) {
+			val = curCSS( elem, name, styles );
+		}
+
+		//convert "normal" to computed value
+		if ( val === "normal" && name in cssNormalTransform ) {
+			val = cssNormalTransform[ name ];
+		}
+
+		// Return, converting to number if forced or a qualifier was provided and val looks numeric
+		if ( extra === "" || extra ) {
+			num = parseFloat( val );
+			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
+		}
+		return val;
+	}
+});
+
+// NOTE: we've included the "window" in window.getComputedStyle
+// because jsdom on node.js will break without it.
+if ( window.getComputedStyle ) {
+	getStyles = function( elem ) {
+		return window.getComputedStyle( elem, null );
+	};
+
+	curCSS = function( elem, name, _computed ) {
+		var width, minWidth, maxWidth,
+			computed = _computed || getStyles( elem ),
+
+			// getPropertyValue is only needed for .css('filter') in IE9, see #12537
+			ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,
+			style = elem.style;
+
+		if ( computed ) {
+
+			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
+				ret = jQuery.style( elem, name );
+			}
+
+			// A tribute to the "awesome hack by Dean Edwards"
+			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
+			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
+			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
+			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {
+
+				// Remember the original values
+				width = style.width;
+				minWidth = style.minWidth;
+				maxWidth = style.maxWidth;
+
+				// Put in the new values to get a computed value out
+				style.minWidth = style.maxWidth = style.width = ret;
+				ret = computed.width;
+
+				// Revert the changed values
+				style.width = width;
+				style.minWidth = minWidth;
+				style.maxWidth = maxWidth;
+			}
+		}
+
+		return ret;
+	};
+} else if ( document.documentElement.currentStyle ) {
+	getStyles = function( elem ) {
+		return elem.currentStyle;
+	};
+
+	curCSS = function( elem, name, _computed ) {
+		var left, rs, rsLeft,
+			computed = _computed || getStyles( elem ),
+			ret = computed ? computed[ name ] : undefined,
+			style = elem.style;
+
+		// Avoid setting ret to empty string here
+		// so we don't default to auto
+		if ( ret == null && style && style[ name ] ) {
+			ret = style[ name ];
+		}
+
+		// From the awesome hack by Dean Edwards
+		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
+
+		// If we're not dealing with a regular pixel number
+		// but a number that has a weird ending, we need to convert it to pixels
+		// but not position css attributes, as those are proportional to the parent element instead
+		// and we can't measure the parent instead because it might trigger a "stacking dolls" problem
+		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {
+
+			// Remember the original values
+			left = style.left;
+			rs = elem.runtimeStyle;
+			rsLeft = rs && rs.left;
+
+			// Put in the new values to get a computed value out
+			if ( rsLeft ) {
+				rs.left = elem.currentStyle.left;
+			}
+			style.left = name === "fontSize" ? "1em" : ret;
+			ret = style.pixelLeft + "px";
+
+			// Revert the changed values
+			style.left = left;
+			if ( rsLeft ) {
+				rs.left = rsLeft;
+			}
+		}
+
+		return ret === "" ? "auto" : ret;
+	};
+}
+
+function setPositiveNumber( elem, value, subtract ) {
+	var matches = rnumsplit.exec( value );
+	return matches ?
+		// Guard against undefined "subtract", e.g., when used as in cssHooks
+		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
+		value;
+}
+
+function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
+	var i = extra === ( isBorderBox ? "border" : "content" ) ?
+		// If we already have the right measurement, avoid augmentation
+		4 :
+		// Otherwise initialize for horizontal or vertical properties
+		name === "width" ? 1 : 0,
+
+		val = 0;
+
+	for ( ; i < 4; i += 2 ) {
+		// both box models exclude margin, so add it if we want it
+		if ( extra === "margin" ) {
+			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
+		}
+
+		if ( isBorderBox ) {
+			// border-box includes padding, so remove it if we want content
+			if ( extra === "content" ) {
+				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
+			}
+
+			// at this point, extra isn't border nor margin, so remove border
+			if ( extra !== "margin" ) {
+				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
+			}
+		} else {
+			// at this point, extra isn't content, so add padding
+			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
+
+			// at this point, extra isn't content nor padding, so add border
+			if ( extra !== "padding" ) {
+				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
+			}
+		}
+	}
+
+	return val;
+}
+
+function getWidthOrHeight( elem, name, extra ) {
+
+	// Start with offset property, which is equivalent to the border-box value
+	var valueIsBorderBox = true,
+		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
+		styles = getStyles( elem ),
+		isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box";
+
+	// some non-html elements return undefined for offsetWidth, so check for null/undefined
+	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
+	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
+	if ( val <= 0 || val == null ) {
+		// Fall back to computed then uncomputed css if necessary
+		val = curCSS( elem, name, styles );
+		if ( val < 0 || val == null ) {
+			val = elem.style[ name ];
+		}
+
+		// Computed unit is not pixels. Stop here and return.
+		if ( rnumnonpx.test(val) ) {
+			return val;
+		}
+
+		// we need the check for style in case a browser which returns unreliable values
+		// for getComputedStyle silently falls back to the reliable elem.style
+		valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );
+
+		// Normalize "", auto, and prepare for extra
+		val = parseFloat( val ) || 0;
+	}
+
+	// use the active box-sizing model to add/subtract irrelevant styles
+	return ( val +
+		augmentWidthOrHeight(
+			elem,
+			name,
+			extra || ( isBorderBox ? "border" : "content" ),
+			valueIsBorderBox,
+			styles
+		)
+	) + "px";
+}
+
+// Try to determine the default display value of an element
+function css_defaultDisplay( nodeName ) {
+	var doc = document,
+		display = elemdisplay[ nodeName ];
+
+	if ( !display ) {
+		display = actualDisplay( nodeName, doc );
+
+		// If the simple way fails, read from inside an iframe
+		if ( display === "none" || !display ) {
+			// Use the already-created iframe if possible
+			iframe = ( iframe ||
+				jQuery("<iframe frameborder='0' width='0' height='0'/>")
+				.css( "cssText", "display:block !important" )
+			).appendTo( doc.documentElement );
+
+			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
+			doc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;
+			doc.write("<!doctype html><html><body>");
+			doc.close();
+
+			display = actualDisplay( nodeName, doc );
+			iframe.detach();
+		}
+
+		// Store the correct default display
+		elemdisplay[ nodeName ] = display;
+	}
+
+	return display;
+}
+
+// Called ONLY from within css_defaultDisplay
+function actualDisplay( name, doc ) {
+	var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),
+		display = jQuery.css( elem[0], "display" );
+	elem.remove();
+	return display;
+}
+
+jQuery.each([ "height", "width" ], function( i, name ) {
+	jQuery.cssHooks[ name ] = {
+		get: function( elem, computed, extra ) {
+			if ( computed ) {
+				// certain elements can have dimension info if we invisibly show them
+				// however, it must have a current display style that would benefit from this
+				return elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, "display" ) ) ?
+					jQuery.swap( elem, cssShow, function() {
+						return getWidthOrHeight( elem, name, extra );
+					}) :
+					getWidthOrHeight( elem, name, extra );
+			}
+		},
+
+		set: function( elem, value, extra ) {
+			var styles = extra && getStyles( elem );
+			return setPositiveNumber( elem, value, extra ?
+				augmentWidthOrHeight(
+					elem,
+					name,
+					extra,
+					jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
+					styles
+				) : 0
+			);
+		}
+	};
+});
+
+if ( !jQuery.support.opacity ) {
+	jQuery.cssHooks.opacity = {
+		get: function( elem, computed ) {
+			// IE uses filters for opacity
+			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
+				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
+				computed ? "1" : "";
+		},
+
+		set: function( elem, value ) {
+			var style = elem.style,
+				currentStyle = elem.currentStyle,
+				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
+				filter = currentStyle && currentStyle.filter || style.filter || "";
+
+			// IE has trouble with opacity if it does not have layout
+			// Force it by setting the zoom level
+			style.zoom = 1;
+
+			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
+			// if value === "", then remove inline opacity #12685
+			if ( ( value >= 1 || value === "" ) &&
+					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
+					style.removeAttribute ) {
+
+				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
+				// if "filter:" is present at all, clearType is disabled, we want to avoid this
+				// style.removeAttribute is IE Only, but so apparently is this code path...
+				style.removeAttribute( "filter" );
+
+				// if there is no filter style applied in a css rule or unset inline opacity, we are done
+				if ( value === "" || currentStyle && !currentStyle.filter ) {
+					return;
+				}
+			}
+
+			// otherwise, set new filter values
+			style.filter = ralpha.test( filter ) ?
+				filter.replace( ralpha, opacity ) :
+				filter + " " + opacity;
+		}
+	};
+}
+
+// These hooks cannot be added until DOM ready because the support test
+// for it is not run until after DOM ready
+jQuery(function() {
+	if ( !jQuery.support.reliableMarginRight ) {
+		jQuery.cssHooks.marginRight = {
+			get: function( elem, computed ) {
+				if ( computed ) {
+					// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
+					// Work around by temporarily setting element display to inline-block
+					return jQuery.swap( elem, { "display": "inline-block" },
+						curCSS, [ elem, "marginRight" ] );
+				}
+			}
+		};
+	}
+
+	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
+	// getComputedStyle returns percent when specified for top/left/bottom/right
+	// rather than make the css module depend on the offset module, we just check for it here
+	if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {
+		jQuery.each( [ "top", "left" ], function( i, prop ) {
+			jQuery.cssHooks[ prop ] = {
+				get: function( elem, computed ) {
+					if ( computed ) {
+						computed = curCSS( elem, prop );
+						// if curCSS returns percentage, fallback to offset
+						return rnumnonpx.test( computed ) ?
+							jQuery( elem ).position()[ prop ] + "px" :
+							computed;
+					}
+				}
+			};
+		});
+	}
+
+});
+
+if ( jQuery.expr && jQuery.expr.filters ) {
+	jQuery.expr.filters.hidden = function( elem ) {
+		// Support: Opera <= 12.12
+		// Opera reports offsetWidths and offsetHeights less than zero on some elements
+		return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||
+			(!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
+	};
+
+	jQuery.expr.filters.visible = function( elem ) {
+		return !jQuery.expr.filters.hidden( elem );
+	};
+}
+
+// These hooks are used by animate to expand properties
+jQuery.each({
+	margin: "",
+	padding: "",
+	border: "Width"
+}, function( prefix, suffix ) {
+	jQuery.cssHooks[ prefix + suffix ] = {
+		expand: function( value ) {
+			var i = 0,
+				expanded = {},
+
+				// assumes a single number if not a string
+				parts = typeof value === "string" ? value.split(" ") : [ value ];
+
+			for ( ; i < 4; i++ ) {
+				expanded[ prefix + cssExpand[ i ] + suffix ] =
+					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
+			}
+
+			return expanded;
+		}
+	};
+
+	if ( !rmargin.test( prefix ) ) {
+		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
+	}
+});
+var r20 = /%20/g,
+	rbracket = /\[\]$/,
+	rCRLF = /\r?\n/g,
+	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
+	rsubmittable = /^(?:input|select|textarea|keygen)/i;
+
+jQuery.fn.extend({
+	serialize: function() {
+		return jQuery.param( this.serializeArray() );
+	},
+	serializeArray: function() {
+		return this.map(function(){
+			// Can add propHook for "elements" to filter or add form elements
+			var elements = jQuery.prop( this, "elements" );
+			return elements ? jQuery.makeArray( elements ) : this;
+		})
+		.filter(function(){
+			var type = this.type;
+			// Use .is(":disabled") so that fieldset[disabled] works
+			return this.name && !jQuery( this ).is( ":disabled" ) &&
+				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
+				( this.checked || !manipulation_rcheckableType.test( type ) );
+		})
+		.map(function( i, elem ){
+			var val = jQuery( this ).val();
+
+			return val == null ?
+				null :
+				jQuery.isArray( val ) ?
+					jQuery.map( val, function( val ){
+						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
+					}) :
+					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
+		}).get();
+	}
+});
+
+//Serialize an array of form elements or a set of
+//key/values into a query string
+jQuery.param = function( a, traditional ) {
+	var prefix,
+		s = [],
+		add = function( key, value ) {
+			// If value is a function, invoke it and return its value
+			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
+			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
+		};
+
+	// Set traditional to true for jQuery <= 1.3.2 behavior.
+	if ( traditional === undefined ) {
+		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
+	}
+
+	// If an array was passed in, assume that it is an array of form elements.
+	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
+		// Serialize the form elements
+		jQuery.each( a, function() {
+			add( this.name, this.value );
+		});
+
+	} else {
+		// If traditional, encode the "old" way (the way 1.3.2 or older
+		// did it), otherwise encode params recursively.
+		for ( prefix in a ) {
+			buildParams( prefix, a[ prefix ], traditional, add );
+		}
+	}
+
+	// Return the resulting serialization
+	return s.join( "&" ).replace( r20, "+" );
+};
+
+function buildParams( prefix, obj, traditional, add ) {
+	var name;
+
+	if ( jQuery.isArray( obj ) ) {
+		// Serialize array item.
+		jQuery.each( obj, function( i, v ) {
+			if ( traditional || rbracket.test( prefix ) ) {
+				// Treat each array item as a scalar.
+				add( prefix, v );
+
+			} else {
+				// Item is non-scalar (array or object), encode its numeric index.
+				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
+			}
+		});
+
+	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
+		// Serialize object item.
+		for ( name in obj ) {
+			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
+		}
+
+	} else {
+		// Serialize scalar item.
+		add( prefix, obj );
+	}
+}
+jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
+	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
+	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
+
+	// Handle event binding
+	jQuery.fn[ name ] = function( data, fn ) {
+		return arguments.length > 0 ?
+			this.on( name, null, data, fn ) :
+			this.trigger( name );
+	};
+});
+
+jQuery.fn.extend({
+	hover: function( fnOver, fnOut ) {
+		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
+	},
+
+	bind: function( types, data, fn ) {
+		return this.on( types, null, data, fn );
+	},
+	unbind: function( types, fn ) {
+		return this.off( types, null, fn );
+	},
+
+	delegate: function( selector, types, data, fn ) {
+		return this.on( types, selector, data, fn );
+	},
+	undelegate: function( selector, types, fn ) {
+		// ( namespace ) or ( selector, types [, fn] )
+		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
+	}
+});
+var
+	// Document location
+	ajaxLocParts,
+	ajaxLocation,
+	ajax_nonce = jQuery.now(),
+
+	ajax_rquery = /\?/,
+	rhash = /#.*$/,
+	rts = /([?&])_=[^&]*/,
+	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
+	// #7653, #8125, #8152: local protocol detection
+	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
+	rnoContent = /^(?:GET|HEAD)$/,
+	rprotocol = /^\/\//,
+	rurl = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,
+
+	// Keep a copy of the old load method
+	_load = jQuery.fn.load,
+
+	/* Prefilters
+	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
+	 * 2) These are called:
+	 *    - BEFORE asking for a transport
+	 *    - AFTER param serialization (s.data is a string if s.processData is true)
+	 * 3) key is the dataType
+	 * 4) the catchall symbol "*" can be used
+	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
+	 */
+	prefilters = {},
+
+	/* Transports bindings
+	 * 1) key is the dataType
+	 * 2) the catchall symbol "*" can be used
+	 * 3) selection will start with transport dataType and THEN go to "*" if needed
+	 */
+	transports = {},
+
+	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
+	allTypes = "*/".concat("*");
+
+// #8138, IE may throw an exception when accessing
+// a field from window.location if document.domain has been set
+try {
+	ajaxLocation = location.href;
+} catch( e ) {
+	// Use the href attribute of an A element
+	// since IE will modify it given document.location
+	ajaxLocation = document.createElement( "a" );
+	ajaxLocation.href = "";
+	ajaxLocation = ajaxLocation.href;
+}
+
+// Segment location into parts
+ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];
+
+// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
+function addToPrefiltersOrTransports( structure ) {
+
+	// dataTypeExpression is optional and defaults to "*"
+	return function( dataTypeExpression, func ) {
+
+		if ( typeof dataTypeExpression !== "string" ) {
+			func = dataTypeExpression;
+			dataTypeExpression = "*";
+		}
+
+		var dataType,
+			i = 0,
+			dataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];
+
+		if ( jQuery.isFunction( func ) ) {
+			// For each dataType in the dataTypeExpression
+			while ( (dataType = dataTypes[i++]) ) {
+				// Prepend if requested
+				if ( dataType[0] === "+" ) {
+					dataType = dataType.slice( 1 ) || "*";
+					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );
+
+				// Otherwise append
+				} else {
+					(structure[ dataType ] = structure[ dataType ] || []).push( func );
+				}
+			}
+		}
+	};
+}
+
+// Base inspection function for prefilters and transports
+function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
+
+	var inspected = {},
+		seekingTransport = ( structure === transports );
+
+	function inspect( dataType ) {
+		var selected;
+		inspected[ dataType ] = true;
+		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
+			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
+			if( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
+				options.dataTypes.unshift( dataTypeOrTransport );
+				inspect( dataTypeOrTransport );
+				return false;
+			} else if ( seekingTransport ) {
+				return !( selected = dataTypeOrTransport );
+			}
+		});
+		return selected;
+	}
+
+	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
+}
+
+// A special extend for ajax options
+// that takes "flat" options (not to be deep extended)
+// Fixes #9887
+function ajaxExtend( target, src ) {
+	var deep, key,
+		flatOptions = jQuery.ajaxSettings.flatOptions || {};
+
+	for ( key in src ) {
+		if ( src[ key ] !== undefined ) {
+			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
+		}
+	}
+	if ( deep ) {
+		jQuery.extend( true, target, deep );
+	}
+
+	return target;
+}
+
+jQuery.fn.load = function( url, params, callback ) {
+	if ( typeof url !== "string" && _load ) {
+		return _load.apply( this, arguments );
+	}
+
+	var selector, response, type,
+		self = this,
+		off = url.indexOf(" ");
+
+	if ( off >= 0 ) {
+		selector = url.slice( off, url.length );
+		url = url.slice( 0, off );
+	}
+
+	// If it's a function
+	if ( jQuery.isFunction( params ) ) {
+
+		// We assume that it's the callback
+		callback = params;
+		params = undefined;
+
+	// Otherwise, build a param string
+	} else if ( params && typeof params === "object" ) {
+		type = "POST";
+	}
+
+	// If we have elements to modify, make the request
+	if ( self.length > 0 ) {
+		jQuery.ajax({
+			url: url,
+
+			// if "type" variable is undefined, then "GET" method will be used
+			type: type,
+			dataType: "html",
+			data: params
+		}).done(function( responseText ) {
+
+			// Save response for use in complete callback
+			response = arguments;
+
+			self.html( selector ?
+
+				// If a selector was specified, locate the right elements in a dummy div
+				// Exclude scripts to avoid IE 'Permission Denied' errors
+				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :
+
+				// Otherwise use the full result
+				responseText );
+
+		}).complete( callback && function( jqXHR, status ) {
+			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
+		});
+	}
+
+	return this;
+};
+
+// Attach a bunch of functions for handling common AJAX events
+jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
+	jQuery.fn[ type ] = function( fn ){
+		return this.on( type, fn );
+	};
+});
+
+jQuery.extend({
+
+	// Counter for holding the number of active queries
+	active: 0,
+
+	// Last-Modified header cache for next request
+	lastModified: {},
+	etag: {},
+
+	ajaxSettings: {
+		url: ajaxLocation,
+		type: "GET",
+		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
+		global: true,
+		processData: true,
+		async: true,
+		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
+		/*
+		timeout: 0,
+		data: null,
+		dataType: null,
+		username: null,
+		password: null,
+		cache: null,
+		throws: false,
+		traditional: false,
+		headers: {},
+		*/
+
+		accepts: {
+			"*": allTypes,
+			text: "text/plain",
+			html: "text/html",
+			xml: "application/xml, text/xml",
+			json: "application/json, text/javascript"
+		},
+
+		contents: {
+			xml: /xml/,
+			html: /html/,
+			json: /json/
+		},
+
+		responseFields: {
+			xml: "responseXML",
+			text: "responseText",
+			json: "responseJSON"
+		},
+
+		// Data converters
+		// Keys separate source (or catchall "*") and destination types with a single space
+		converters: {
+
+			// Convert anything to text
+			"* text": String,
+
+			// Text to html (true = no transformation)
+			"text html": true,
+
+			// Evaluate text as a json expression
+			"text json": jQuery.parseJSON,
+
+			// Parse text as xml
+			"text xml": jQuery.parseXML
+		},
+
+		// For options that shouldn't be deep extended:
+		// you can add your own custom options here if
+		// and when you create one that shouldn't be
+		// deep extended (see ajaxExtend)
+		flatOptions: {
+			url: true,
+			context: true
+		}
+	},
+
+	// Creates a full fledged settings object into target
+	// with both ajaxSettings and settings fields.
+	// If target is omitted, writes into ajaxSettings.
+	ajaxSetup: function( target, settings ) {
+		return settings ?
+
+			// Building a settings object
+			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :
+
+			// Extending ajaxSettings
+			ajaxExtend( jQuery.ajaxSettings, target );
+	},
+
+	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
+	ajaxTransport: addToPrefiltersOrTransports( transports ),
+
+	// Main method
+	ajax: function( url, options ) {
+
+		// If url is an object, simulate pre-1.5 signature
+		if ( typeof url === "object" ) {
+			options = url;
+			url = undefined;
+		}
+
+		// Force options to be an object
+		options = options || {};
+
+		var // Cross-domain detection vars
+			parts,
+			// Loop variable
+			i,
+			// URL without anti-cache param
+			cacheURL,
+			// Response headers as string
+			responseHeadersString,
+			// timeout handle
+			timeoutTimer,
+
+			// To know if global events are to be dispatched
+			fireGlobals,
+
+			transport,
+			// Response headers
+			responseHeaders,
+			// Create the final options object
+			s = jQuery.ajaxSetup( {}, options ),
+			// Callbacks context
+			callbackContext = s.context || s,
+			// Context for global events is callbackContext if it is a DOM node or jQuery collection
+			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
+				jQuery( callbackContext ) :
+				jQuery.event,
+			// Deferreds
+			deferred = jQuery.Deferred(),
+			completeDeferred = jQuery.Callbacks("once memory"),
+			// Status-dependent callbacks
+			statusCode = s.statusCode || {},
+			// Headers (they are sent all at once)
+			requestHeaders = {},
+			requestHeadersNames = {},
+			// The jqXHR state
+			state = 0,
+			// Default abort message
+			strAbort = "canceled",
+			// Fake xhr
+			jqXHR = {
+				readyState: 0,
+
+				// Builds headers hashtable if needed
+				getResponseHeader: function( key ) {
+					var match;
+					if ( state === 2 ) {
+						if ( !responseHeaders ) {
+							responseHeaders = {};
+							while ( (match = rheaders.exec( responseHeadersString )) ) {
+								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
+							}
+						}
+						match = responseHeaders[ key.toLowerCase() ];
+					}
+					return match == null ? null : match;
+				},
+
+				// Raw string
+				getAllResponseHeaders: function() {
+					return state === 2 ? responseHeadersString : null;
+				},
+
+				// Caches the header
+				setRequestHeader: function( name, value ) {
+					var lname = name.toLowerCase();
+					if ( !state ) {
+						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
+						requestHeaders[ name ] = value;
+					}
+					return this;
+				},
+
+				// Overrides response content-type header
+				overrideMimeType: function( type ) {
+					if ( !state ) {
+						s.mimeType = type;
+					}
+					return this;
+				},
+
+				// Status-dependent callbacks
+				statusCode: function( map ) {
+					var code;
+					if ( map ) {
+						if ( state < 2 ) {
+							for ( code in map ) {
+								// Lazy-add the new callback in a way that preserves old ones
+								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
+							}
+						} else {
+							// Execute the appropriate callbacks
+							jqXHR.always( map[ jqXHR.status ] );
+						}
+					}
+					return this;
+				},
+
+				// Cancel the request
+				abort: function( statusText ) {
+					var finalText = statusText || strAbort;
+					if ( transport ) {
+						transport.abort( finalText );
+					}
+					done( 0, finalText );
+					return this;
+				}
+			};
+
+		// Attach deferreds
+		deferred.promise( jqXHR ).complete = completeDeferred.add;
+		jqXHR.success = jqXHR.done;
+		jqXHR.error = jqXHR.fail;
+
+		// Remove hash character (#7531: and string promotion)
+		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
+		// Handle falsy url in the settings object (#10093: consistency with old signature)
+		// We also use the url parameter if available
+		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );
+
+		// Alias method option to type as per ticket #12004
+		s.type = options.method || options.type || s.method || s.type;
+
+		// Extract dataTypes list
+		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( core_rnotwhite ) || [""];
+
+		// A cross-domain request is in order when we have a protocol:host:port mismatch
+		if ( s.crossDomain == null ) {
+			parts = rurl.exec( s.url.toLowerCase() );
+			s.crossDomain = !!( parts &&
+				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
+					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
+						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
+			);
+		}
+
+		// Convert data if not already a string
+		if ( s.data && s.processData && typeof s.data !== "string" ) {
+			s.data = jQuery.param( s.data, s.traditional );
+		}
+
+		// Apply prefilters
+		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );
+
+		// If request was aborted inside a prefilter, stop there
+		if ( state === 2 ) {
+			return jqXHR;
+		}
+
+		// We can fire global events as of now if asked to
+		fireGlobals = s.global;
+
+		// Watch for a new set of requests
+		if ( fireGlobals && jQuery.active++ === 0 ) {
+			jQuery.event.trigger("ajaxStart");
+		}
+
+		// Uppercase the type
+		s.type = s.type.toUpperCase();
+
+		// Determine if request has content
+		s.hasContent = !rnoContent.test( s.type );
+
+		// Save the URL in case we're toying with the If-Modified-Since
+		// and/or If-None-Match header later on
+		cacheURL = s.url;
+
+		// More options handling for requests with no content
+		if ( !s.hasContent ) {
+
+			// If data is available, append data to url
+			if ( s.data ) {
+				cacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
+				// #9682: remove data so that it's not used in an eventual retry
+				delete s.data;
+			}
+
+			// Add anti-cache in url if needed
+			if ( s.cache === false ) {
+				s.url = rts.test( cacheURL ) ?
+
+					// If there is already a '_' parameter, set its value
+					cacheURL.replace( rts, "$1_=" + ajax_nonce++ ) :
+
+					// Otherwise add one to the end
+					cacheURL + ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ajax_nonce++;
+			}
+		}
+
+		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
+		if ( s.ifModified ) {
+			if ( jQuery.lastModified[ cacheURL ] ) {
+				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
+			}
+			if ( jQuery.etag[ cacheURL ] ) {
+				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
+			}
+		}
+
+		// Set the correct header, if data is being sent
+		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
+			jqXHR.setRequestHeader( "Content-Type", s.contentType );
+		}
+
+		// Set the Accepts header for the server, depending on the dataType
+		jqXHR.setRequestHeader(
+			"Accept",
+			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
+				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
+				s.accepts[ "*" ]
+		);
+
+		// Check for headers option
+		for ( i in s.headers ) {
+			jqXHR.setRequestHeader( i, s.headers[ i ] );
+		}
+
+		// Allow custom headers/mimetypes and early abort
+		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
+			// Abort if not done already and return
+			return jqXHR.abort();
+		}
+
+		// aborting is no longer a cancellation
+		strAbort = "abort";
+
+		// Install callbacks on deferreds
+		for ( i in { success: 1, error: 1, complete: 1 } ) {
+			jqXHR[ i ]( s[ i ] );
+		}
+
+		// Get transport
+		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );
+
+		// If no transport, we auto-abort
+		if ( !transport ) {
+			done( -1, "No Transport" );
+		} else {
+			jqXHR.readyState = 1;
+
+			// Send global event
+			if ( fireGlobals ) {
+				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
+			}
+			// Timeout
+			if ( s.async && s.timeout > 0 ) {
+				timeoutTimer = setTimeout(function() {
+					jqXHR.abort("timeout");
+				}, s.timeout );
+			}
+
+			try {
+				state = 1;
+				transport.send( requestHeaders, done );
+			} catch ( e ) {
+				// Propagate exception as error if not done
+				if ( state < 2 ) {
+					done( -1, e );
+				// Simply rethrow otherwise
+				} else {
+					throw e;
+				}
+			}
+		}
+
+		// Callback for when everything is done
+		function done( status, nativeStatusText, responses, headers ) {
+			var isSuccess, success, error, response, modified,
+				statusText = nativeStatusText;
+
+			// Called once
+			if ( state === 2 ) {
+				return;
+			}
+
+			// State is "done" now
+			state = 2;
+
+			// Clear timeout if it exists
+			if ( timeoutTimer ) {
+				clearTimeout( timeoutTimer );
+			}
+
+			// Dereference transport for early garbage collection
+			// (no matter how long the jqXHR object will be used)
+			transport = undefined;
+
+			// Cache response headers
+			responseHeadersString = headers || "";
+
+			// Set readyState
+			jqXHR.readyState = status > 0 ? 4 : 0;
+
+			// Determine if successful
+			isSuccess = status >= 200 && status < 300 || status === 304;
+
+			// Get response data
+			if ( responses ) {
+				response = ajaxHandleResponses( s, jqXHR, responses );
+			}
+
+			// Convert no matter what (that way responseXXX fields are always set)
+			response = ajaxConvert( s, response, jqXHR, isSuccess );
+
+			// If successful, handle type chaining
+			if ( isSuccess ) {
+
+				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
+				if ( s.ifModified ) {
+					modified = jqXHR.getResponseHeader("Last-Modified");
+					if ( modified ) {
+						jQuery.lastModified[ cacheURL ] = modified;
+					}
+					modified = jqXHR.getResponseHeader("etag");
+					if ( modified ) {
+						jQuery.etag[ cacheURL ] = modified;
+					}
+				}
+
+				// if no content
+				if ( status === 204 || s.type === "HEAD" ) {
+					statusText = "nocontent";
+
+				// if not modified
+				} else if ( status === 304 ) {
+					statusText = "notmodified";
+
+				// If we have data, let's convert it
+				} else {
+					statusText = response.state;
+					success = response.data;
+					error = response.error;
+					isSuccess = !error;
+				}
+			} else {
+				// We extract error from statusText
+				// then normalize statusText and status for non-aborts
+				error = statusText;
+				if ( status || !statusText ) {
+					statusText = "error";
+					if ( status < 0 ) {
+						status = 0;
+					}
+				}
+			}
+
+			// Set data for the fake xhr object
+			jqXHR.status = status;
+			jqXHR.statusText = ( nativeStatusText || statusText ) + "";
+
+			// Success/Error
+			if ( isSuccess ) {
+				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
+			} else {
+				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
+			}
+
+			// Status-dependent callbacks
+			jqXHR.statusCode( statusCode );
+			statusCode = undefined;
+
+			if ( fireGlobals ) {
+				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
+					[ jqXHR, s, isSuccess ? success : error ] );
+			}
+
+			// Complete
+			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );
+
+			if ( fireGlobals ) {
+				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
+				// Handle the global AJAX counter
+				if ( !( --jQuery.active ) ) {
+					jQuery.event.trigger("ajaxStop");
+				}
+			}
+		}
+
+		return jqXHR;
+	},
+
+	getJSON: function( url, data, callback ) {
+		return jQuery.get( url, data, callback, "json" );
+	},
+
+	getScript: function( url, callback ) {
+		return jQuery.get( url, undefined, callback, "script" );
+	}
+});
+
+jQuery.each( [ "get", "post" ], function( i, method ) {
+	jQuery[ method ] = function( url, data, callback, type ) {
+		// shift arguments if data argument was omitted
+		if ( jQuery.isFunction( data ) ) {
+			type = type || callback;
+			callback = data;
+			data = undefined;
+		}
+
+		return jQuery.ajax({
+			url: url,
+			type: method,
+			dataType: type,
+			data: data,
+			success: callback
+		});
+	};
+});
+
+/* Handles responses to an ajax request:
+ * - finds the right dataType (mediates between content-type and expected dataType)
+ * - returns the corresponding response
+ */
+function ajaxHandleResponses( s, jqXHR, responses ) {
+	var firstDataType, ct, finalDataType, type,
+		contents = s.contents,
+		dataTypes = s.dataTypes;
+
+	// Remove auto dataType and get content-type in the process
+	while( dataTypes[ 0 ] === "*" ) {
+		dataTypes.shift();
+		if ( ct === undefined ) {
+			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
+		}
+	}
+
+	// Check if we're dealing with a known content-type
+	if ( ct ) {
+		for ( type in contents ) {
+			if ( contents[ type ] && contents[ type ].test( ct ) ) {
+				dataTypes.unshift( type );
+				break;
+			}
+		}
+	}
+
+	// Check to see if we have a response for the expected dataType
+	if ( dataTypes[ 0 ] in responses ) {
+		finalDataType = dataTypes[ 0 ];
+	} else {
+		// Try convertible dataTypes
+		for ( type in responses ) {
+			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
+				finalDataType = type;
+				break;
+			}
+			if ( !firstDataType ) {
+				firstDataType = type;
+			}
+		}
+		// Or just use first one
+		finalDataType = finalDataType || firstDataType;
+	}
+
+	// If we found a dataType
+	// We add the dataType to the list if needed
+	// and return the corresponding response
+	if ( finalDataType ) {
+		if ( finalDataType !== dataTypes[ 0 ] ) {
+			dataTypes.unshift( finalDataType );
+		}
+		return responses[ finalDataType ];
+	}
+}
+
+/* Chain conversions given the request and the original response
+ * Also sets the responseXXX fields on the jqXHR instance
+ */
+function ajaxConvert( s, response, jqXHR, isSuccess ) {
+	var conv2, current, conv, tmp, prev,
+		converters = {},
+		// Work with a copy of dataTypes in case we need to modify it for conversion
+		dataTypes = s.dataTypes.slice();
+
+	// Create converters map with lowercased keys
+	if ( dataTypes[ 1 ] ) {
+		for ( conv in s.converters ) {
+			converters[ conv.toLowerCase() ] = s.converters[ conv ];
+		}
+	}
+
+	current = dataTypes.shift();
+
+	// Convert to each sequential dataType
+	while ( current ) {
+
+		if ( s.responseFields[ current ] ) {
+			jqXHR[ s.responseFields[ current ] ] = response;
+		}
+
+		// Apply the dataFilter if provided
+		if ( !prev && isSuccess && s.dataFilter ) {
+			response = s.dataFilter( response, s.dataType );
+		}
+
+		prev = current;
+		current = dataTypes.shift();
+
+		if ( current ) {
+
+			// There's only work to do if current dataType is non-auto
+			if ( current === "*" ) {
+
+				current = prev;
+
+			// Convert response if prev dataType is non-auto and differs from current
+			} else if ( prev !== "*" && prev !== current ) {
+
+				// Seek a direct converter
+				conv = converters[ prev + " " + current ] || converters[ "* " + current ];
+
+				// If none found, seek a pair
+				if ( !conv ) {
+					for ( conv2 in converters ) {
+
+						// If conv2 outputs current
+						tmp = conv2.split( " " );
+						if ( tmp[ 1 ] === current ) {
+
+							// If prev can be converted to accepted input
+							conv = converters[ prev + " " + tmp[ 0 ] ] ||
+								converters[ "* " + tmp[ 0 ] ];
+							if ( conv ) {
+								// Condense equivalence converters
+								if ( conv === true ) {
+									conv = converters[ conv2 ];
+
+								// Otherwise, insert the intermediate dataType
+								} else if ( converters[ conv2 ] !== true ) {
+									current = tmp[ 0 ];
+									dataTypes.unshift( tmp[ 1 ] );
+								}
+								break;
+							}
+						}
+					}
+				}
+
+				// Apply converter (if not an equivalence)
+				if ( conv !== true ) {
+
+					// Unless errors are allowed to bubble, catch and return them
+					if ( conv && s[ "throws" ] ) {
+						response = conv( response );
+					} else {
+						try {
+							response = conv( response );
+						} catch ( e ) {
+							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
+						}
+					}
+				}
+			}
+		}
+	}
+
+	return { state: "success", data: response };
+}
+// Install script dataType
+jQuery.ajaxSetup({
+	accepts: {
+		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
+	},
+	contents: {
+		script: /(?:java|ecma)script/
+	},
+	converters: {
+		"text script": function( text ) {
+			jQuery.globalEval( text );
+			return text;
+		}
+	}
+});
+
+// Handle cache's special case and global
+jQuery.ajaxPrefilter( "script", function( s ) {
+	if ( s.cache === undefined ) {
+		s.cache = false;
+	}
+	if ( s.crossDomain ) {
+		s.type = "GET";
+		s.global = false;
+	}
+});
+
+// Bind script tag hack transport
+jQuery.ajaxTransport( "script", function(s) {
+
+	// This transport only deals with cross domain requests
+	if ( s.crossDomain ) {
+
+		var script,
+			head = document.head || jQuery("head")[0] || document.documentElement;
+
+		return {
+
+			send: function( _, callback ) {
+
+				script = document.createElement("script");
+
+				script.async = true;
+
+				if ( s.scriptCharset ) {
+					script.charset = s.scriptCharset;
+				}
+
+				script.src = s.url;
+
+				// Attach handlers for all browsers
+				script.onload = script.onreadystatechange = function( _, isAbort ) {
+
+					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {
+
+						// Handle memory leak in IE
+						script.onload = script.onreadystatechange = null;
+
+						// Remove the script
+						if ( script.parentNode ) {
+							script.parentNode.removeChild( script );
+						}
+
+						// Dereference the script
+						script = null;
+
+						// Callback if not abort
+						if ( !isAbort ) {
+							callback( 200, "success" );
+						}
+					}
+				};
+
+				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
+				// Use native DOM manipulation to avoid our domManip AJAX trickery
+				head.insertBefore( script, head.firstChild );
+			},
+
+			abort: function() {
+				if ( script ) {
+					script.onload( undefined, true );
+				}
+			}
+		};
+	}
+});
+var oldCallbacks = [],
+	rjsonp = /(=)\?(?=&|$)|\?\?/;
+
+// Default jsonp settings
+jQuery.ajaxSetup({
+	jsonp: "callback",
+	jsonpCallback: function() {
+		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( ajax_nonce++ ) );
+		this[ callback ] = true;
+		return callback;
+	}
+});
+
+// Detect, normalize options and install callbacks for jsonp requests
+jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
+
+	var callbackName, overwritten, responseContainer,
+		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
+			"url" :
+			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
+		);
+
+	// Handle iff the expected data type is "jsonp" or we have a parameter to set
+	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {
+
+		// Get callback name, remembering preexisting value associated with it
+		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
+			s.jsonpCallback() :
+			s.jsonpCallback;
+
+		// Insert callback into url or form data
+		if ( jsonProp ) {
+			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
+		} else if ( s.jsonp !== false ) {
+			s.url += ( ajax_rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
+		}
+
+		// Use data converter to retrieve json after script execution
+		s.converters["script json"] = function() {
+			if ( !responseContainer ) {
+				jQuery.error( callbackName + " was not called" );
+			}
+			return responseContainer[ 0 ];
+		};
+
+		// force json dataType
+		s.dataTypes[ 0 ] = "json";
+
+		// Install callback
+		overwritten = window[ callbackName ];
+		window[ callbackName ] = function() {
+			responseContainer = arguments;
+		};
+
+		// Clean-up function (fires after converters)
+		jqXHR.always(function() {
+			// Restore preexisting value
+			window[ callbackName ] = overwritten;
+
+			// Save back as free
+			if ( s[ callbackName ] ) {
+				// make sure that re-using the options doesn't screw things around
+				s.jsonpCallback = originalSettings.jsonpCallback;
+
+				// save the callback name for future use
+				oldCallbacks.push( callbackName );
+			}
+
+			// Call if it was a function and we have a response
+			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
+				overwritten( responseContainer[ 0 ] );
+			}
+
+			responseContainer = overwritten = undefined;
+		});
+
+		// Delegate to script
+		return "script";
+	}
+});
+var xhrCallbacks, xhrSupported,
+	xhrId = 0,
+	// #5280: Internet Explorer will keep connections alive if we don't abort on unload
+	xhrOnUnloadAbort = window.ActiveXObject && function() {
+		// Abort all pending requests
+		var key;
+		for ( key in xhrCallbacks ) {
+			xhrCallbacks[ key ]( undefined, true );
+		}
+	};
+
+// Functions to create xhrs
+function createStandardXHR() {
+	try {
+		return new window.XMLHttpRequest();
+	} catch( e ) {}
+}
+
+function createActiveXHR() {
+	try {
+		return new window.ActiveXObject("Microsoft.XMLHTTP");
+	} catch( e ) {}
+}
+
+// Create the request object
+// (This is still attached to ajaxSettings for backward compatibility)
+jQuery.ajaxSettings.xhr = window.ActiveXObject ?
+	/* Microsoft failed to properly
+	 * implement the XMLHttpRequest in IE7 (can't request local files),
+	 * so we use the ActiveXObject when it is available
+	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
+	 * we need a fallback.
+	 */
+	function() {
+		return !this.isLocal && createStandardXHR() || createActiveXHR();
+	} :
+	// For all other browsers, use the standard XMLHttpRequest object
+	createStandardXHR;
+
+// Determine support properties
+xhrSupported = jQuery.ajaxSettings.xhr();
+jQuery.support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
+xhrSupported = jQuery.support.ajax = !!xhrSupported;
+
+// Create transport if the browser can provide an xhr
+if ( xhrSupported ) {
+
+	jQuery.ajaxTransport(function( s ) {
+		// Cross domain only allowed if supported through XMLHttpRequest
+		if ( !s.crossDomain || jQuery.support.cors ) {
+
+			var callback;
+
+			return {
+				send: function( headers, complete ) {
+
+					// Get a new xhr
+					var handle, i,
+						xhr = s.xhr();
+
+					// Open the socket
+					// Passing null username, generates a login popup on Opera (#2865)
+					if ( s.username ) {
+						xhr.open( s.type, s.url, s.async, s.username, s.password );
+					} else {
+						xhr.open( s.type, s.url, s.async );
+					}
+
+					// Apply custom fields if provided
+					if ( s.xhrFields ) {
+						for ( i in s.xhrFields ) {
+							xhr[ i ] = s.xhrFields[ i ];
+						}
+					}
+
+					// Override mime type if needed
+					if ( s.mimeType && xhr.overrideMimeType ) {
+						xhr.overrideMimeType( s.mimeType );
+					}
+
+					// X-Requested-With header
+					// For cross-domain requests, seeing as conditions for a preflight are
+					// akin to a jigsaw puzzle, we simply never set it to be sure.
+					// (it can always be set on a per-request basis or even using ajaxSetup)
+					// For same-domain requests, won't change header if already provided.
+					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
+						headers["X-Requested-With"] = "XMLHttpRequest";
+					}
+
+					// Need an extra try/catch for cross domain requests in Firefox 3
+					try {
+						for ( i in headers ) {
+							xhr.setRequestHeader( i, headers[ i ] );
+						}
+					} catch( err ) {}
+
+					// Do send the request
+					// This may raise an exception which is actually
+					// handled in jQuery.ajax (so no try/catch here)
+					xhr.send( ( s.hasContent && s.data ) || null );
+
+					// Listener
+					callback = function( _, isAbort ) {
+						var status, responseHeaders, statusText, responses;
+
+						// Firefox throws exceptions when accessing properties
+						// of an xhr when a network error occurred
+						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
+						try {
+
+							// Was never called and is aborted or complete
+							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {
+
+								// Only called once
+								callback = undefined;
+
+								// Do not keep as active anymore
+								if ( handle ) {
+									xhr.onreadystatechange = jQuery.noop;
+									if ( xhrOnUnloadAbort ) {
+										delete xhrCallbacks[ handle ];
+									}
+								}
+
+								// If it's an abort
+								if ( isAbort ) {
+									// Abort it manually if needed
+									if ( xhr.readyState !== 4 ) {
+										xhr.abort();
+									}
+								} else {
+									responses = {};
+									status = xhr.status;
+									responseHeaders = xhr.getAllResponseHeaders();
+
+									// When requesting binary data, IE6-9 will throw an exception
+									// on any attempt to access responseText (#11426)
+									if ( typeof xhr.responseText === "string" ) {
+										responses.text = xhr.responseText;
+									}
+
+									// Firefox throws an exception when accessing
+									// statusText for faulty cross-domain requests
+									try {
+										statusText = xhr.statusText;
+									} catch( e ) {
+										// We normalize with Webkit giving an empty statusText
+										statusText = "";
+									}
+
+									// Filter status for non standard behaviors
+
+									// If the request is local and we have data: assume a success
+									// (success with no data won't get notified, that's the best we
+									// can do given current implementations)
+									if ( !status && s.isLocal && !s.crossDomain ) {
+										status = responses.text ? 200 : 404;
+									// IE - #1450: sometimes returns 1223 when it should be 204
+									} else if ( status === 1223 ) {
+										status = 204;
+									}
+								}
+							}
+						} catch( firefoxAccessException ) {
+							if ( !isAbort ) {
+								complete( -1, firefoxAccessException );
+							}
+						}
+
+						// Call complete if needed
+						if ( responses ) {
+							complete( status, statusText, responses, responseHeaders );
+						}
+					};
+
+					if ( !s.async ) {
+						// if we're in sync mode we fire the callback
+						callback();
+					} else if ( xhr.readyState === 4 ) {
+						// (IE6 & IE7) if it's in cache and has been
+						// retrieved directly we need to fire the callback
+						setTimeout( callback );
+					} else {
+						handle = ++xhrId;
+						if ( xhrOnUnloadAbort ) {
+							// Create the active xhrs callbacks list if needed
+							// and attach the unload handler
+							if ( !xhrCallbacks ) {
+								xhrCallbacks = {};
+								jQuery( window ).unload( xhrOnUnloadAbort );
+							}
+							// Add to list of active xhrs callbacks
+							xhrCallbacks[ handle ] = callback;
+						}
+						xhr.onreadystatechange = callback;
+					}
+				},
+
+				abort: function() {
+					if ( callback ) {
+						callback( undefined, true );
+					}
+				}
+			};
+		}
+	});
+}
+var fxNow, timerId,
+	rfxtypes = /^(?:toggle|show|hide)$/,
+	rfxnum = new RegExp( "^(?:([+-])=|)(" + core_pnum + ")([a-z%]*)$", "i" ),
+	rrun = /queueHooks$/,
+	animationPrefilters = [ defaultPrefilter ],
+	tweeners = {
+		"*": [function( prop, value ) {
+			var tween = this.createTween( prop, value ),
+				target = tween.cur(),
+				parts = rfxnum.exec( value ),
+				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),
+
+				// Starting value computation is required for potential unit mismatches
+				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
+					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
+				scale = 1,
+				maxIterations = 20;
+
+			if ( start && start[ 3 ] !== unit ) {
+				// Trust units reported by jQuery.css
+				unit = unit || start[ 3 ];
+
+				// Make sure we update the tween properties later on
+				parts = parts || [];
+
+				// Iteratively approximate from a nonzero starting point
+				start = +target || 1;
+
+				do {
+					// If previous iteration zeroed out, double until we get *something*
+					// Use a string for doubling factor so we don't accidentally see scale as unchanged below
+					scale = scale || ".5";
+
+					// Adjust and apply
+					start = start / scale;
+					jQuery.style( tween.elem, prop, start + unit );
+
+				// Update scale, tolerating zero or NaN from tween.cur()
+				// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
+				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
+			}
+
+			// Update tween properties
+			if ( parts ) {
+				start = tween.start = +start || +target || 0;
+				tween.unit = unit;
+				// If a +=/-= token was provided, we're doing a relative animation
+				tween.end = parts[ 1 ] ?
+					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
+					+parts[ 2 ];
+			}
+
+			return tween;
+		}]
+	};
+
+// Animations created synchronously will run synchronously
+function createFxNow() {
+	setTimeout(function() {
+		fxNow = undefined;
+	});
+	return ( fxNow = jQuery.now() );
+}
+
+function createTween( value, prop, animation ) {
+	var tween,
+		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
+		index = 0,
+		length = collection.length;
+	for ( ; index < length; index++ ) {
+		if ( (tween = collection[ index ].call( animation, prop, value )) ) {
+
+			// we're done with this property
+			return tween;
+		}
+	}
+}
+
+function Animation( elem, properties, options ) {
+	var result,
+		stopped,
+		index = 0,
+		length = animationPrefilters.length,
+		deferred = jQuery.Deferred().always( function() {
+			// don't match elem in the :animated selector
+			delete tick.elem;
+		}),
+		tick = function() {
+			if ( stopped ) {
+				return false;
+			}
+			var currentTime = fxNow || createFxNow(),
+				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
+				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
+				temp = remaining / animation.duration || 0,
+				percent = 1 - temp,
+				index = 0,
+				length = animation.tweens.length;
+
+			for ( ; index < length ; index++ ) {
+				animation.tweens[ index ].run( percent );
+			}
+
+			deferred.notifyWith( elem, [ animation, percent, remaining ]);
+
+			if ( percent < 1 && length ) {
+				return remaining;
+			} else {
+				deferred.resolveWith( elem, [ animation ] );
+				return false;
+			}
+		},
+		animation = deferred.promise({
+			elem: elem,
+			props: jQuery.extend( {}, properties ),
+			opts: jQuery.extend( true, { specialEasing: {} }, options ),
+			originalProperties: properties,
+			originalOptions: options,
+			startTime: fxNow || createFxNow(),
+			duration: options.duration,
+			tweens: [],
+			createTween: function( prop, end ) {
+				var tween = jQuery.Tween( elem, animation.opts, prop, end,
+						animation.opts.specialEasing[ prop ] || animation.opts.easing );
+				animation.tweens.push( tween );
+				return tween;
+			},
+			stop: function( gotoEnd ) {
+				var index = 0,
+					// if we are going to the end, we want to run all the tweens
+					// otherwise we skip this part
+					length = gotoEnd ? animation.tweens.length : 0;
+				if ( stopped ) {
+					return this;
+				}
+				stopped = true;
+				for ( ; index < length ; index++ ) {
+					animation.tweens[ index ].run( 1 );
+				}
+
+				// resolve when we played the last frame
+				// otherwise, reject
+				if ( gotoEnd ) {
+					deferred.resolveWith( elem, [ animation, gotoEnd ] );
+				} else {
+					deferred.rejectWith( elem, [ animation, gotoEnd ] );
+				}
+				return this;
+			}
+		}),
+		props = animation.props;
+
+	propFilter( props, animation.opts.specialEasing );
+
+	for ( ; index < length ; index++ ) {
+		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
+		if ( result ) {
+			return result;
+		}
+	}
+
+	jQuery.map( props, createTween, animation );
+
+	if ( jQuery.isFunction( animation.opts.start ) ) {
+		animation.opts.start.call( elem, animation );
+	}
+
+	jQuery.fx.timer(
+		jQuery.extend( tick, {
+			elem: elem,
+			anim: animation,
+			queue: animation.opts.queue
+		})
+	);
+
+	// attach callbacks from options
+	return animation.progress( animation.opts.progress )
+		.done( animation.opts.done, animation.opts.complete )
+		.fail( animation.opts.fail )
+		.always( animation.opts.always );
+}
+
+function propFilter( props, specialEasing ) {
+	var index, name, easing, value, hooks;
+
+	// camelCase, specialEasing and expand cssHook pass
+	for ( index in props ) {
+		name = jQuery.camelCase( index );
+		easing = specialEasing[ name ];
+		value = props[ index ];
+		if ( jQuery.isArray( value ) ) {
+			easing = value[ 1 ];
+			value = props[ index ] = value[ 0 ];
+		}
+
+		if ( index !== name ) {
+			props[ name ] = value;
+			delete props[ index ];
+		}
+
+		hooks = jQuery.cssHooks[ name ];
+		if ( hooks && "expand" in hooks ) {
+			value = hooks.expand( value );
+			delete props[ name ];
+
+			// not quite $.extend, this wont overwrite keys already present.
+			// also - reusing 'index' from above because we have the correct "name"
+			for ( index in value ) {
+				if ( !( index in props ) ) {
+					props[ index ] = value[ index ];
+					specialEasing[ index ] = easing;
+				}
+			}
+		} else {
+			specialEasing[ name ] = easing;
+		}
+	}
+}
+
+jQuery.Animation = jQuery.extend( Animation, {
+
+	tweener: function( props, callback ) {
+		if ( jQuery.isFunction( props ) ) {
+			callback = props;
+			props = [ "*" ];
+		} else {
+			props = props.split(" ");
+		}
+
+		var prop,
+			index = 0,
+			length = props.length;
+
+		for ( ; index < length ; index++ ) {
+			prop = props[ index ];
+			tweeners[ prop ] = tweeners[ prop ] || [];
+			tweeners[ prop ].unshift( callback );
+		}
+	},
+
+	prefilter: function( callback, prepend ) {
+		if ( prepend ) {
+			animationPrefilters.unshift( callback );
+		} else {
+			animationPrefilters.push( callback );
+		}
+	}
+});
+
+function defaultPrefilter( elem, props, opts ) {
+	/* jshint validthis: true */
+	var prop, value, toggle, tween, hooks, oldfire,
+		anim = this,
+		orig = {},
+		style = elem.style,
+		hidden = elem.nodeType && isHidden( elem ),
+		dataShow = jQuery._data( elem, "fxshow" );
+
+	// handle queue: false promises
+	if ( !opts.queue ) {
+		hooks = jQuery._queueHooks( elem, "fx" );
+		if ( hooks.unqueued == null ) {
+			hooks.unqueued = 0;
+			oldfire = hooks.empty.fire;
+			hooks.empty.fire = function() {
+				if ( !hooks.unqueued ) {
+					oldfire();
+				}
+			};
+		}
+		hooks.unqueued++;
+
+		anim.always(function() {
+			// doing this makes sure that the complete handler will be called
+			// before this completes
+			anim.always(function() {
+				hooks.unqueued--;
+				if ( !jQuery.queue( elem, "fx" ).length ) {
+					hooks.empty.fire();
+				}
+			});
+		});
+	}
+
+	// height/width overflow pass
+	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
+		// Make sure that nothing sneaks out
+		// Record all 3 overflow attributes because IE does not
+		// change the overflow attribute when overflowX and
+		// overflowY are set to the same value
+		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];
+
+		// Set display property to inline-block for height/width
+		// animations on inline elements that are having width/height animated
+		if ( jQuery.css( elem, "display" ) === "inline" &&
+				jQuery.css( elem, "float" ) === "none" ) {
+
+			// inline-level elements accept inline-block;
+			// block-level elements need to be inline with layout
+			if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === "inline" ) {
+				style.display = "inline-block";
+
+			} else {
+				style.zoom = 1;
+			}
+		}
+	}
+
+	if ( opts.overflow ) {
+		style.overflow = "hidden";
+		if ( !jQuery.support.shrinkWrapBlocks ) {
+			anim.always(function() {
+				style.overflow = opts.overflow[ 0 ];
+				style.overflowX = opts.overflow[ 1 ];
+				style.overflowY = opts.overflow[ 2 ];
+			});
+		}
+	}
+
+
+	// show/hide pass
+	for ( prop in props ) {
+		value = props[ prop ];
+		if ( rfxtypes.exec( value ) ) {
+			delete props[ prop ];
+			toggle = toggle || value === "toggle";
+			if ( value === ( hidden ? "hide" : "show" ) ) {
+				continue;
+			}
+			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
+		}
+	}
+
+	if ( !jQuery.isEmptyObject( orig ) ) {
+		if ( dataShow ) {
+			if ( "hidden" in dataShow ) {
+				hidden = dataShow.hidden;
+			}
+		} else {
+			dataShow = jQuery._data( elem, "fxshow", {} );
+		}
+
+		// store state if its toggle - enables .stop().toggle() to "reverse"
+		if ( toggle ) {
+			dataShow.hidden = !hidden;
+		}
+		if ( hidden ) {
+			jQuery( elem ).show();
+		} else {
+			anim.done(function() {
+				jQuery( elem ).hide();
+			});
+		}
+		anim.done(function() {
+			var prop;
+			jQuery._removeData( elem, "fxshow" );
+			for ( prop in orig ) {
+				jQuery.style( elem, prop, orig[ prop ] );
+			}
+		});
+		for ( prop in orig ) {
+			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
+
+			if ( !( prop in dataShow ) ) {
+				dataShow[ prop ] = tween.start;
+				if ( hidden ) {
+					tween.end = tween.start;
+					tween.start = prop === "width" || prop === "height" ? 1 : 0;
+				}
+			}
+		}
+	}
+}
+
+function Tween( elem, options, prop, end, easing ) {
+	return new Tween.prototype.init( elem, options, prop, end, easing );
+}
+jQuery.Tween = Tween;
+
+Tween.prototype = {
+	constructor: Tween,
+	init: function( elem, options, prop, end, easing, unit ) {
+		this.elem = elem;
+		this.prop = prop;
+		this.easing = easing || "swing";
+		this.options = options;
+		this.start = this.now = this.cur();
+		this.end = end;
+		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
+	},
+	cur: function() {
+		var hooks = Tween.propHooks[ this.prop ];
+
+		return hooks && hooks.get ?
+			hooks.get( this ) :
+			Tween.propHooks._default.get( this );
+	},
+	run: function( percent ) {
+		var eased,
+			hooks = Tween.propHooks[ this.prop ];
+
+		if ( this.options.duration ) {
+			this.pos = eased = jQuery.easing[ this.easing ](
+				percent, this.options.duration * percent, 0, 1, this.options.duration
+			);
+		} else {
+			this.pos = eased = percent;
+		}
+		this.now = ( this.end - this.start ) * eased + this.start;
+
+		if ( this.options.step ) {
+			this.options.step.call( this.elem, this.now, this );
+		}
+
+		if ( hooks && hooks.set ) {
+			hooks.set( this );
+		} else {
+			Tween.propHooks._default.set( this );
+		}
+		return this;
+	}
+};
+
+Tween.prototype.init.prototype = Tween.prototype;
+
+Tween.propHooks = {
+	_default: {
+		get: function( tween ) {
+			var result;
+
+			if ( tween.elem[ tween.prop ] != null &&
+				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
+				return tween.elem[ tween.prop ];
+			}
+
+			// passing an empty string as a 3rd parameter to .css will automatically
+			// attempt a parseFloat and fallback to a string if the parse fails
+			// so, simple values such as "10px" are parsed to Float.
+			// complex values such as "rotate(1rad)" are returned as is.
+			result = jQuery.css( tween.elem, tween.prop, "" );
+			// Empty strings, null, undefined and "auto" are converted to 0.
+			return !result || result === "auto" ? 0 : result;
+		},
+		set: function( tween ) {
+			// use step hook for back compat - use cssHook if its there - use .style if its
+			// available and use plain properties where available
+			if ( jQuery.fx.step[ tween.prop ] ) {
+				jQuery.fx.step[ tween.prop ]( tween );
+			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
+				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
+			} else {
+				tween.elem[ tween.prop ] = tween.now;
+			}
+		}
+	}
+};
+
+// Support: IE <=9
+// Panic based approach to setting things on disconnected nodes
+
+Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
+	set: function( tween ) {
+		if ( tween.elem.nodeType && tween.elem.parentNode ) {
+			tween.elem[ tween.prop ] = tween.now;
+		}
+	}
+};
+
+jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
+	var cssFn = jQuery.fn[ name ];
+	jQuery.fn[ name ] = function( speed, easing, callback ) {
+		return speed == null || typeof speed === "boolean" ?
+			cssFn.apply( this, arguments ) :
+			this.animate( genFx( name, true ), speed, easing, callback );
+	};
+});
+
+jQuery.fn.extend({
+	fadeTo: function( speed, to, easing, callback ) {
+
+		// show any hidden elements after setting opacity to 0
+		return this.filter( isHidden ).css( "opacity", 0 ).show()
+
+			// animate to the value specified
+			.end().animate({ opacity: to }, speed, easing, callback );
+	},
+	animate: function( prop, speed, easing, callback ) {
+		var empty = jQuery.isEmptyObject( prop ),
+			optall = jQuery.speed( speed, easing, callback ),
+			doAnimation = function() {
+				// Operate on a copy of prop so per-property easing won't be lost
+				var anim = Animation( this, jQuery.extend( {}, prop ), optall );
+
+				// Empty animations, or finishing resolves immediately
+				if ( empty || jQuery._data( this, "finish" ) ) {
+					anim.stop( true );
+				}
+			};
+			doAnimation.finish = doAnimation;
+
+		return empty || optall.queue === false ?
+			this.each( doAnimation ) :
+			this.queue( optall.queue, doAnimation );
+	},
+	stop: function( type, clearQueue, gotoEnd ) {
+		var stopQueue = function( hooks ) {
+			var stop = hooks.stop;
+			delete hooks.stop;
+			stop( gotoEnd );
+		};
+
+		if ( typeof type !== "string" ) {
+			gotoEnd = clearQueue;
+			clearQueue = type;
+			type = undefined;
+		}
+		if ( clearQueue && type !== false ) {
+			this.queue( type || "fx", [] );
+		}
+
+		return this.each(function() {
+			var dequeue = true,
+				index = type != null && type + "queueHooks",
+				timers = jQuery.timers,
+				data = jQuery._data( this );
+
+			if ( index ) {
+				if ( data[ index ] && data[ index ].stop ) {
+					stopQueue( data[ index ] );
+				}
+			} else {
+				for ( index in data ) {
+					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
+						stopQueue( data[ index ] );
+					}
+				}
+			}
+
+			for ( index = timers.length; index--; ) {
+				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
+					timers[ index ].anim.stop( gotoEnd );
+					dequeue = false;
+					timers.splice( index, 1 );
+				}
+			}
+
+			// start the next in the queue if the last step wasn't forced
+			// timers currently will call their complete callbacks, which will dequeue
+			// but only if they were gotoEnd
+			if ( dequeue || !gotoEnd ) {
+				jQuery.dequeue( this, type );
+			}
+		});
+	},
+	finish: function( type ) {
+		if ( type !== false ) {
+			type = type || "fx";
+		}
+		return this.each(function() {
+			var index,
+				data = jQuery._data( this ),
+				queue = data[ type + "queue" ],
+				hooks = data[ type + "queueHooks" ],
+				timers = jQuery.timers,
+				length = queue ? queue.length : 0;
+
+			// enable finishing flag on private data
+			data.finish = true;
+
+			// empty the queue first
+			jQuery.queue( this, type, [] );
+
+			if ( hooks && hooks.stop ) {
+				hooks.stop.call( this, true );
+			}
+
+			// look for any active animations, and finish them
+			for ( index = timers.length; index--; ) {
+				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
+					timers[ index ].anim.stop( true );
+					timers.splice( index, 1 );
+				}
+			}
+
+			// look for any animations in the old queue and finish them
+			for ( index = 0; index < length; index++ ) {
+				if ( queue[ index ] && queue[ index ].finish ) {
+					queue[ index ].finish.call( this );
+				}
+			}
+
+			// turn off finishing flag
+			delete data.finish;
+		});
+	}
+});
+
+// Generate parameters to create a standard animation
+function genFx( type, includeWidth ) {
+	var which,
+		attrs = { height: type },
+		i = 0;
+
+	// if we include width, step value is 1 to do all cssExpand values,
+	// if we don't include width, step value is 2 to skip over Left and Right
+	includeWidth = includeWidth? 1 : 0;
+	for( ; i < 4 ; i += 2 - includeWidth ) {
+		which = cssExpand[ i ];
+		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
+	}
+
+	if ( includeWidth ) {
+		attrs.opacity = attrs.width = type;
+	}
+
+	return attrs;
+}
+
+// Generate shortcuts for custom animations
+jQuery.each({
+	slideDown: genFx("show"),
+	slideUp: genFx("hide"),
+	slideToggle: genFx("toggle"),
+	fadeIn: { opacity: "show" },
+	fadeOut: { opacity: "hide" },
+	fadeToggle: { opacity: "toggle" }
+}, function( name, props ) {
+	jQuery.fn[ name ] = function( speed, easing, callback ) {
+		return this.animate( props, speed, easing, callback );
+	};
+});
+
+jQuery.speed = function( speed, easing, fn ) {
+	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
+		complete: fn || !fn && easing ||
+			jQuery.isFunction( speed ) && speed,
+		duration: speed,
+		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
+	};
+
+	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
+		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;
+
+	// normalize opt.queue - true/undefined/null -> "fx"
+	if ( opt.queue == null || opt.queue === true ) {
+		opt.queue = "fx";
+	}
+
+	// Queueing
+	opt.old = opt.complete;
+
+	opt.complete = function() {
+		if ( jQuery.isFunction( opt.old ) ) {
+			opt.old.call( this );
+		}
+
+		if ( opt.queue ) {
+			jQuery.dequeue( this, opt.queue );
+		}
+	};
+
+	return opt;
+};
+
+jQuery.easing = {
+	linear: function( p ) {
+		return p;
+	},
+	swing: function( p ) {
+		return 0.5 - Math.cos( p*Math.PI ) / 2;
+	}
+};
+
+jQuery.timers = [];
+jQuery.fx = Tween.prototype.init;
+jQuery.fx.tick = function() {
+	var timer,
+		timers = jQuery.timers,
+		i = 0;
+
+	fxNow = jQuery.now();
+
+	for ( ; i < timers.length; i++ ) {
+		timer = timers[ i ];
+		// Checks the timer has not already been removed
+		if ( !timer() && timers[ i ] === timer ) {
+			timers.splice( i--, 1 );
+		}
+	}
+
+	if ( !timers.length ) {
+		jQuery.fx.stop();
+	}
+	fxNow = undefined;
+};
+
+jQuery.fx.timer = function( timer ) {
+	if ( timer() && jQuery.timers.push( timer ) ) {
+		jQuery.fx.start();
+	}
+};
+
+jQuery.fx.interval = 13;
+
+jQuery.fx.start = function() {
+	if ( !timerId ) {
+		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
+	}
+};
+
+jQuery.fx.stop = function() {
+	clearInterval( timerId );
+	timerId = null;
+};
+
+jQuery.fx.speeds = {
+	slow: 600,
+	fast: 200,
+	// Default speed
+	_default: 400
+};
+
+// Back Compat <1.8 extension point
+jQuery.fx.step = {};
+
+if ( jQuery.expr && jQuery.expr.filters ) {
+	jQuery.expr.filters.animated = function( elem ) {
+		return jQuery.grep(jQuery.timers, function( fn ) {
+			return elem === fn.elem;
+		}).length;
+	};
+}
+jQuery.fn.offset = function( options ) {
+	if ( arguments.length ) {
+		return options === undefined ?
+			this :
+			this.each(function( i ) {
+				jQuery.offset.setOffset( this, options, i );
+			});
+	}
+
+	var docElem, win,
+		box = { top: 0, left: 0 },
+		elem = this[ 0 ],
+		doc = elem && elem.ownerDocument;
+
+	if ( !doc ) {
+		return;
+	}
+
+	docElem = doc.documentElement;
+
+	// Make sure it's not a disconnected DOM node
+	if ( !jQuery.contains( docElem, elem ) ) {
+		return box;
+	}
+
+	// If we don't have gBCR, just use 0,0 rather than error
+	// BlackBerry 5, iOS 3 (original iPhone)
+	if ( typeof elem.getBoundingClientRect !== core_strundefined ) {
+		box = elem.getBoundingClientRect();
+	}
+	win = getWindow( doc );
+	return {
+		top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
+		left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
+	};
+};
+
+jQuery.offset = {
+
+	setOffset: function( elem, options, i ) {
+		var position = jQuery.css( elem, "position" );
+
+		// set position first, in-case top/left are set even on static elem
+		if ( position === "static" ) {
+			elem.style.position = "relative";
+		}
+
+		var curElem = jQuery( elem ),
+			curOffset = curElem.offset(),
+			curCSSTop = jQuery.css( elem, "top" ),
+			curCSSLeft = jQuery.css( elem, "left" ),
+			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
+			props = {}, curPosition = {}, curTop, curLeft;
+
+		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
+		if ( calculatePosition ) {
+			curPosition = curElem.position();
+			curTop = curPosition.top;
+			curLeft = curPosition.left;
+		} else {
+			curTop = parseFloat( curCSSTop ) || 0;
+			curLeft = parseFloat( curCSSLeft ) || 0;
+		}
+
+		if ( jQuery.isFunction( options ) ) {
+			options = options.call( elem, i, curOffset );
+		}
+
+		if ( options.top != null ) {
+			props.top = ( options.top - curOffset.top ) + curTop;
+		}
+		if ( options.left != null ) {
+			props.left = ( options.left - curOffset.left ) + curLeft;
+		}
+
+		if ( "using" in options ) {
+			options.using.call( elem, props );
+		} else {
+			curElem.css( props );
+		}
+	}
+};
+
+
+jQuery.fn.extend({
+
+	position: function() {
+		if ( !this[ 0 ] ) {
+			return;
+		}
+
+		var offsetParent, offset,
+			parentOffset = { top: 0, left: 0 },
+			elem = this[ 0 ];
+
+		// fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent
+		if ( jQuery.css( elem, "position" ) === "fixed" ) {
+			// we assume that getBoundingClientRect is available when computed position is fixed
+			offset = elem.getBoundingClientRect();
+		} else {
+			// Get *real* offsetParent
+			offsetParent = this.offsetParent();
+
+			// Get correct offsets
+			offset = this.offset();
+			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
+				parentOffset = offsetParent.offset();
+			}
+
+			// Add offsetParent borders
+			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
+			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
+		}
+
+		// Subtract parent offsets and element margins
+		// note: when an element has margin: auto the offsetLeft and marginLeft
+		// are the same in Safari causing offset.left to incorrectly be 0
+		return {
+			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
+			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true)
+		};
+	},
+
+	offsetParent: function() {
+		return this.map(function() {
+			var offsetParent = this.offsetParent || docElem;
+			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position") === "static" ) ) {
+				offsetParent = offsetParent.offsetParent;
+			}
+			return offsetParent || docElem;
+		});
+	}
+});
+
+
+// Create scrollLeft and scrollTop methods
+jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
+	var top = /Y/.test( prop );
+
+	jQuery.fn[ method ] = function( val ) {
+		return jQuery.access( this, function( elem, method, val ) {
+			var win = getWindow( elem );
+
+			if ( val === undefined ) {
+				return win ? (prop in win) ? win[ prop ] :
+					win.document.documentElement[ method ] :
+					elem[ method ];
+			}
+
+			if ( win ) {
+				win.scrollTo(
+					!top ? val : jQuery( win ).scrollLeft(),
+					top ? val : jQuery( win ).scrollTop()
+				);
+
+			} else {
+				elem[ method ] = val;
+			}
+		}, method, val, arguments.length, null );
+	};
+});
+
+function getWindow( elem ) {
+	return jQuery.isWindow( elem ) ?
+		elem :
+		elem.nodeType === 9 ?
+			elem.defaultView || elem.parentWindow :
+			false;
+}
+// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
+jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
+	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
+		// margin is only for outerHeight, outerWidth
+		jQuery.fn[ funcName ] = function( margin, value ) {
+			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
+				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );
+
+			return jQuery.access( this, function( elem, type, value ) {
+				var doc;
+
+				if ( jQuery.isWindow( elem ) ) {
+					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
+					// isn't a whole lot we can do. See pull request at this URL for discussion:
+					// https://github.com/jquery/jquery/pull/764
+					return elem.document.documentElement[ "client" + name ];
+				}
+
+				// Get document width or height
+				if ( elem.nodeType === 9 ) {
+					doc = elem.documentElement;
+
+					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
+					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
+					return Math.max(
+						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
+						elem.body[ "offset" + name ], doc[ "offset" + name ],
+						doc[ "client" + name ]
+					);
+				}
+
+				return value === undefined ?
+					// Get width or height on the element, requesting but not forcing parseFloat
+					jQuery.css( elem, type, extra ) :
+
+					// Set width or height on the element
+					jQuery.style( elem, type, value, extra );
+			}, type, chainable ? margin : undefined, chainable, null );
+		};
+	});
+});
+// Limit scope pollution from any deprecated API
+// (function() {
+
+// The number of elements contained in the matched element set
+jQuery.fn.size = function() {
+	return this.length;
+};
+
+jQuery.fn.andSelf = jQuery.fn.addBack;
+
+// })();
+if ( typeof module === "object" && module && typeof module.exports === "object" ) {
+	// Expose jQuery as module.exports in loaders that implement the Node
+	// module pattern (including browserify). Do not create the global, since
+	// the user will be storing it themselves locally, and globals are frowned
+	// upon in the Node module world.
+	module.exports = jQuery;
+} else {
+	// Otherwise expose jQuery to the global object as usual
+	window.jQuery = window.$ = jQuery;
+
+	// Register as a named AMD module, since jQuery can be concatenated with other
+	// files that may use define, but not via a proper concatenation script that
+	// understands anonymous AMD modules. A named AMD is safest and most robust
+	// way to register. Lowercase jquery is used because AMD module names are
+	// derived from file names, and jQuery is normally delivered in a lowercase
+	// file name. Do this after creating the global so that if an AMD module wants
+	// to call noConflict to hide this version of jQuery, it will work.
+	if ( typeof define === "function" && define.amd ) {
+		define( "jquery", [], function () { return jQuery; } );
+	}
+}
+
+})( window );
\ No newline at end of file
diff -ruN node-red-src/editor/vendor/jsonata/formatter.js node-red-src_ttb/editor/vendor/jsonata/formatter.js
--- node-red-src/editor/vendor/jsonata/formatter.js	2017-09-27 10:53:14.688980855 +0000
+++ node-red-src_ttb/editor/vendor/jsonata/formatter.js	2017-09-26 15:24:25.882342000 +0000
@@ -128,8 +128,6 @@
         '$map':{ args:[ 'array', 'function' ]},
         '$match':{ args:[ 'str', 'pattern', 'limit' ]},
         '$max':{ args:[ 'array' ]},
-        '$merge':{ args:[ 'array' ]},
-        '$millis':{ args:[  ]},
         '$min':{ args:[ 'array' ]},
         '$not':{ args:[ 'arg' ]},
         '$now':{ args:[  ]},
diff -ruN node-red-src/Gruntfile.js node-red-src_ttb/Gruntfile.js
--- node-red-src/Gruntfile.js	2017-09-27 10:53:14.548981752 +0000
+++ node-red-src_ttb/Gruntfile.js	2017-09-27 10:47:49.123772746 +0000
@@ -110,6 +110,7 @@
                     // Ensure editor source files are concatenated in
                     // the right order
                     "editor/js/red.js",
+                    "editor/js/main.js",
                     "editor/js/events.js",
                     "editor/js/i18n.js",
                     "editor/js/settings.js",
@@ -139,6 +140,7 @@
                     "editor/js/ui/view.js",
                     "editor/js/ui/sidebar.js",
                     "editor/js/ui/palette.js",
+                    "editor/js/ui/npm.js",
                     "editor/js/ui/tab-info.js",
                     "editor/js/ui/tab-config.js",
                     "editor/js/ui/palette-editor.js",
@@ -148,6 +150,7 @@
                     "editor/js/ui/library.js",
                     "editor/js/ui/notifications.js",
                     "editor/js/ui/search.js",
+                    "editor/js/ui/thingboxSettings.js",
                     "editor/js/ui/typeSearch.js",
                     "editor/js/ui/subflow.js",
                     "editor/js/ui/userSettings.js",
@@ -179,13 +182,21 @@
                         "editor/vendor/jsonata/worker-jsonata.js"
                     ]
                 }
+            },
+            systemflow: {
+                options: {
+                    separator: ",",
+                    banner: "[",
+                    footer: "]"
+                },
+                files: {
+                    'flow/flows.json': 'ttbsystemflow/*.json'
+                }
             }
         },
         uglify: {
-            build: {
+            vendor: {
                 files: {
-                    'public/red/red.min.js': 'public/red/red.js',
-                    'public/red/main.min.js': 'public/red/main.js',
                     'public/vendor/ace/mode-jsonata.js': 'editor/vendor/jsonata/mode-jsonata.js',
                     'public/vendor/ace/snippets/jsonata.js': 'editor/vendor/jsonata/snippets-jsonata.js'
                 }
@@ -221,12 +232,6 @@
             }
         },
         attachCopyright: {
-            js: {
-                src: [
-                    'public/red/red.min.js',
-                    'public/red/main.min.js'
-                ]
-            },
             css: {
                 src: [
                     'public/red/style.min.css'
@@ -311,12 +316,10 @@
             build: {
                 files:[
                     {
-                        src: 'editor/js/main.js',
-                        dest: 'public/red/main.js'
-                    },
-                    {
-                        src: 'editor/js/keymap.json',
-                        dest: 'public/red/keymap.json'
+                        cwd: 'editor/js',
+                        src: '**',
+                        expand: true,
+                        dest: 'public/red/'
                     },
                     {
                         cwd: 'editor/images',
@@ -331,7 +334,8 @@
                             //'bootstrap/css/**',
                             'bootstrap/img/**',
                             'jquery/css/**',
-                            'font-awesome/**'
+                            'font-awesome/**',
+                            'jquery/1.10.2.js'
                         ],
                         expand: true,
                         dest: 'public/vendor/'
@@ -343,8 +347,14 @@
                         dest: 'public/icons/'
                     },
                     {
+                        cwd: 'editor/fonts',
+                        src: '*',
+                        expand: true,
+                        dest: 'public/fonts/'
+                    },
+                    {
                         expand: true,
-                        src: ['editor/index.html','editor/favicon.ico'],
+                        src: ['editor/index.html','editor/favicon.ico','editor/logo.png','editor/async.js'],
                         dest: 'public/',
                         flatten: true
                     },
@@ -362,6 +372,8 @@
                         '*.md',
                         'LICENSE',
                         'package.json',
+                        'npm_i_from_git.js',
+                        'install_dependencies.sh',
                         'settings.js',
                         'red.js',
                         'lib/.gitignore',
@@ -369,11 +381,32 @@
                         'nodes/core/**',
                         'red/**',
                         'public/**',
+                        'flow/**',
                         'editor/templates/**',
                         'bin/**'
                     ],
                     dest: path.resolve('<%= paths.dist %>/node-red-<%= pkg.version %>')
                 }]
+            },
+            systemflow: {
+                files: [{
+                    cwd: 'ttbsystemflow/',
+                    src: '*.ejs',
+                    expand: true,
+                    dest: 'flow/'
+                }]
+            },
+            otherSystemFlow: {
+                cwd: 'otherSystemFlow',
+                src: '**',
+                dest: 'flow/',
+                expand: true
+            },
+            cgu: {
+                cwd: 'cgu',
+                src: '*',
+                dest: 'public/',
+                expand: true
             }
         },
         chmod: {
@@ -478,7 +511,7 @@
 
     grunt.registerTask('build',
         'Builds editor content',
-        ['clean:build','jsonlint','concat:build','concat:vendor','copy:build','uglify:build','sass:build','attachCopyright']);
+        ['clean:build','jsonlint','copy:systemflow','concat:systemflow','concat:vendor','uglify:vendor','sass:build','copy:build','copy:otherSystemFlow','copy:cgu','attachCopyright']);
 
     grunt.registerTask('dev',
         'Developer mode: run node-red, watch for source changes and build/restart',
@@ -486,7 +519,7 @@
 
     grunt.registerTask('release',
         'Create distribution zip file',
-        ['build','clean:release','copy:release','chmod:release','compress:release']);
+        ['build','clean:release','copy:release','chmod:release']);
 
     grunt.registerTask('coverage',
         'Run Istanbul code test coverage task',
diff -ruN node-red-src/install_dependencies.sh node-red-src_ttb/install_dependencies.sh
--- node-red-src/install_dependencies.sh	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/install_dependencies.sh	2017-09-27 10:45:17.444449904 +0000
@@ -0,0 +1,291 @@
+#!/bin/bash
+
+npm install minimist@1.2.0 --unsafe-perm --legacy-bundling
+
+#########################
+#### Node-RED nodes #####
+#########################
+
+node npm_i_from_git.js \
+	-r "https://github.com/node-red/node-red-nodes.git" \
+	-s "storage/mongodb" \
+	-c "2023bddf97986c596cd924f289c13d348d82746c"
+
+node npm_i_from_git.js \
+	-r "https://github.com/node-red/node-red-nodes.git" \
+	-s "function/random" \
+	-c "316a2fd27290954e2112545c5f2a959bce7120b4"
+
+node npm_i_from_git.js \
+	-r "https://github.com/node-red/node-red-nodes.git" \
+	-s "io/serialport" \
+	-c "f6e71bf962dcf8c12b0e0fd9180c48c88fecb386"
+
+node npm_i_from_git.js \
+	-r "https://github.com/node-red/node-red-nodes.git" \
+	-s "function/smooth" \
+	-c "4768ecc16ce096dac9c8cf8f1476419cee0e5d25"
+
+#########################
+## TheThingBox modules ##
+#########################
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "nisutil" \
+	-c "af370739c6e1d8b134b8ef16cd60799b5007ab76"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "node-avahi-browse" \
+	-c "32053082faf120221a9cd89913b491c0bdb2ab06"
+
+#########################
+### TheThingBox nodes ###
+#########################
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "node-red-contrib-mongodb2" \
+	-c "4cf6fab032c1b441964d3c0ba0a9ad3f1b929b17"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-d "node-red-node-mysql" \
+	-c "b6b93a04130cbd50ef7459f9de62fa326e21aa42"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-avahi-browse" \
+	-c "577d4e73dfbc907533de37b043b6265593c59d63"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-boxip" \
+	-c "748dbf58687a036be3aa3a50e4918cca96b40377"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-boxname" \
+	-c "a7326dbeb7f4d9a6c25ef639ff482d71f4621526"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-carriots" \
+	-c "254e3e47ec7cff98a3d9ed416420846d063270ca"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-city" \
+	-c "4d38ca74767c0d33cb8cb01d4650ec5da0593a07"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-color" \
+	-c "0abd9f61dee80f3c6d43db43c97e2c1a65ff2d46"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-currentwifi" \
+	-c "321f06164f0e2b84b8c42228c79d8d47c324b107"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-dateformat" \
+	-c "dbee6fdbcc330df6dff363e0f2e4d1da1a521366"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-display" \
+	-c "fa0dc0df23b0c16ecd7343f3197a8a1818fa805e"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-distance" \
+	-c "3ef2304805d680f1b4f5f2bd522bd962a29b6660"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-ejs" \
+	-c "2209d299361b5d54962b92956f0af4016ce9362e"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-evrythng" \
+	-c "475b95dd98a7db6001fc0858dc7325de787bd794"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-exosite" \
+	-c "1ae14ec24d5998de647f25360b27b164b2ffc962"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-factorynode" \
+	-c "9f8bfb8a92f9851fc98835efabd4e5ffd040b820"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-file-ejs" \
+	-c "193b2da6f6aaa393c618115ce66c8b3bd87531f9"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-file-function" \
+	-c "e5b99eb1473e119c3dc6e69d062cdb2691a00223"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-function" \
+	-c "5c5d09c0b784013f100e95154988232ca8c9ef90"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-go" \
+	-c "0903fa35d2ab3cd6b1416348cd6f65685417b57b"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-google-auth" \
+	-c "e0985088b78530712f2a259701db49e70e08f651"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-google-calendar" \
+	-c "4b881d412ef680de089d2fd0fddebdf2c404616c"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-hivemq" \
+	-c "6786700f43589a94ce5aeef7b2540e619142af53"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-info" \
+	-c "74c2c3c3d7a7642fc9696adda41cd43be7636357"
+	-c "0903fa35d2ab3cd6b1416348cd6f65685417b57b"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-intensity" \
+	-c "6da0eea6e4f7a05a2a9b939b4db5ddd4371651d9"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-intents" \
+	-c "d7ef2065905ef5fc0c626f420f295b3364f25670"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-interfaces" \
+	-c "8469dfd5b7e3ff3687f1fc2bcd72c0c9f734f79a"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-ledmatrix" \
+	-c "d2e1f3fbfbe1cd438eac6d584596b03d39be1e7a"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-meteo" \
+	-c "6400dce5463faa074eac58056d2fad18a902e02b"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-nfc" \
+	-c "aa9fad832d1a89c6a1a8e12d05a3c3c40907ac99"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-notifyUI" \
+	-c "f7341a833976e3cd9a17aa5a4981d73bf4d81d7d"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-picture-picker" \
+	-c "6a626842bec3f5155fc785507072371f60cfc9a3"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-queueuser" \
+	-c "1bc86dbcbacdb19ac11417bc49f9011971945166"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-screader" \
+	-c "43c79465dec6b48b304c91aa6bfc8238faa2ea58"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-serialport" \
+	-c "c30f4e38be18b7a468857661ba234f8188b47f3c"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-set" \
+	-c "4c28aa59c83bfd3b6bf21d782089070b32115e24"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-thingspeak" \
+	-c "2236aec1867b3cd3fdcb15a0e43e2fc6febbfc90"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-timestamp" \
+	-c "39a8898ae3a5ac715fd4ccda9c23ff078ffa8613"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-tinamous" \
+	-c "585ac4e08a0469daa0a90545fa9c3c206e95d8a6"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-TSA_font" \
+	-c "38c3216ae6401f86840fa28a794acd57600b6144"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-TSA_speed" \
+	-c "ff45ab0a19ca4482f2456d4a43511b28d9555954"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-TSA_textsize" \
+	-c "d87b02c7bd1fb5ee2ef544f8c7019dd37ff2a57c"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-wifilist" \
+	-c "58f9f3a7bf360fad041357f0f0c64e1ad723329c"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-writeFileSync" \
+	-c "999a69bdedd6e051cb130ce63045a83be00663fc"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-xively" \
+	-c "7889ac247f689a2fddfa8c7936d2f208d6399203"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-xively-mqtt" \
+	-c "48cfec4bbb14f7f6732b685842ce838ca712cad5"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-node-zip" \
+	-c "a8ed9ec04df4014e5c235dab51f99e1daadcd79e"
+	
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "ttb-npm" \
+	-c "03251fdd12da3134bbefe83bb51d965bd4bf3c0f"
+
+node npm_i_from_git.js \
+	-r "https://github.com/lucas-pouchot/ttb-node.git" \
+	-b "wifi-util" \
+	-c "af1150537a99f180ddfbf36c59027e3c2a37b58a"
diff -ruN node-red-src/nodes/core/core/20-inject.html node-red-src_ttb/nodes/core/core/20-inject.html
--- node-red-src/nodes/core/core/20-inject.html	2017-09-27 10:53:14.688980855 +0000
+++ node-red-src_ttb/nodes/core/core/20-inject.html	2017-09-26 15:24:29.448768300 +0000
@@ -181,7 +181,7 @@
             topic: {value:""},
             payload: {value:"", validate: RED.validators.typedInput("payloadType")},
             payloadType: {value:"date"},
-            repeat: {value:"", validate:function(v) { return ((v === "") || (RED.validators.number(v) && (v >= 0))) }},
+            repeat: {value:""},
             crontab: {value:""},
             once: {value:false}
         },
diff -ruN node-red-src/nodes/core/core/75-exec.html node-red-src_ttb/nodes/core/core/75-exec.html
--- node-red-src/nodes/core/core/75-exec.html	2017-09-27 10:53:14.698980790 +0000
+++ node-red-src_ttb/nodes/core/core/75-exec.html	2017-09-26 15:24:29.327430500 +0000
@@ -42,8 +42,7 @@
     </div>
     <div class="form-row">
         <label for="node-input-timer"><i class="fa fa-clock-o"></i> <span data-i18n="exec.label.timeout"></span></label>
-        <input type="text" id="node-input-timer" style="width:65px;" data-i18n="[placeholder]exec.label.timeoutplace">
-        <span data-i18n="exec.label.seconds"></span>
+        <input type="text" id="node-input-timer" style="width:65px;" data-i18n="[placeholder]exec.label.timeoutplace"> seconds
     </div>
     <div class="form-row">
         <label for="node-input-name"><i class="fa fa-tag"></i> <span data-i18n="common.label.name"></span></label>
diff -ruN node-red-src/nodes/core/core/75-exec.js node-red-src_ttb/nodes/core/core/75-exec.js
--- node-red-src/nodes/core/core/75-exec.js	2017-09-27 10:53:14.698980790 +0000
+++ node-red-src_ttb/nodes/core/core/75-exec.js	2017-09-26 15:24:29.398638900 +0000
@@ -73,51 +73,56 @@
                     var cmd = arg.shift();
                     /* istanbul ignore else  */
                     if (RED.settings.verbose) { node.log(cmd+" ["+arg+"]"); }
-                    child = spawn(cmd,arg);
-                    node.status({fill:"blue",shape:"dot",text:"pid:"+child.pid});
-                    var unknownCommand = (child.pid === undefined);
-                    if (node.timer !== 0) {
-                        child.tout = setTimeout(function() { cleanup(child.pid); }, node.timer);
-                    }
-                    node.activeProcesses[child.pid] = child;
-                    child.stdout.on('data', function (data) {
-                        if (node.activeProcesses.hasOwnProperty(child.pid) && node.activeProcesses[child.pid] !== null) {
-                            // console.log('[exec] stdout: ' + data,child.pid);
-                            if (isUtf8(data)) { msg.payload = data.toString(); }
-                            else { msg.payload = data; }
-                            node.send([RED.util.cloneMessage(msg),null,null]);
-                        }
-                    });
-                    child.stderr.on('data', function (data) {
-                        if (node.activeProcesses.hasOwnProperty(child.pid) && node.activeProcesses[child.pid] !== null) {
-                            if (isUtf8(data)) { msg.payload = data.toString(); }
-                            else { msg.payload = Buffer.from(data); }
-                            node.send([null,RED.util.cloneMessage(msg),null]);
-                        }
-                    });
-                    child.on('close', function (code,signal) {
-                        if (unknownCommand || (node.activeProcesses.hasOwnProperty(child.pid) && node.activeProcesses[child.pid] !== null)) {
-                            delete node.activeProcesses[child.pid];
+                    try {
+                        child = spawn(cmd,arg);
+                        node.status({fill:"blue",shape:"dot",text:"pid:"+child.pid});
+                        var unknownCommand = (child.pid === undefined);
+                        if (node.timer !== 0) {
+                            child.tout = setTimeout(function() { cleanup(child.pid); }, node.timer);
+                        }
+                        node.activeProcesses[child.pid] = child;
+                        child.stdout.on('data', function (data) {
+                            if (node.activeProcesses.hasOwnProperty(child.pid) && node.activeProcesses[child.pid] !== null) {
+                                // console.log('[exec] stdout: ' + data,child.pid);
+                                if (isUtf8(data)) { msg.payload = data.toString(); }
+                                else { msg.payload = data; }
+                                node.send([RED.util.cloneMessage(msg),null,null]);
+                            }
+                        });
+                        child.stderr.on('data', function (data) {
+                            if (node.activeProcesses.hasOwnProperty(child.pid) && node.activeProcesses[child.pid] !== null) {
+                                if (isUtf8(data)) { msg.payload = data.toString(); }
+                                else { msg.payload = Buffer.from(data); }
+                                node.send([null,RED.util.cloneMessage(msg),null]);
+                            }
+                        });
+                        child.on('close', function (code,signal) {
+                            if (unknownCommand || (node.activeProcesses.hasOwnProperty(child.pid) && node.activeProcesses[child.pid] !== null)) {
+                                delete node.activeProcesses[child.pid];
+                                if (child.tout) { clearTimeout(child.tout); }
+                                msg.payload = code;
+                                if (node.oldrc === "false") {
+                                    msg.payload = {code:code};
+                                    if (signal) { msg.payload.signal = signal; }
+                                }
+                                if (code === 0) { node.status({}); }
+                                if (code === null) { node.status({fill:"red",shape:"dot",text:"killed"}); }
+                                else if (code < 0) { node.status({fill:"red",shape:"dot",text:"rc:"+code}); }
+                                else { node.status({fill:"yellow",shape:"dot",text:"rc:"+code}); }
+                                node.send([null,null,RED.util.cloneMessage(msg)]);
+                            }
+                        });
+                        child.on('error', function (code) {
                             if (child.tout) { clearTimeout(child.tout); }
-                            msg.payload = code;
-                            if (node.oldrc === "false") {
-                                msg.payload = {code:code};
-                                if (signal) { msg.payload.signal = signal; }
-                            }
-                            if (code === 0) { node.status({}); }
-                            if (code === null) { node.status({fill:"red",shape:"dot",text:"killed"}); }
-                            else if (code < 0) { node.status({fill:"red",shape:"dot",text:"rc:"+code}); }
-                            else { node.status({fill:"yellow",shape:"dot",text:"rc:"+code}); }
-                            node.send([null,null,RED.util.cloneMessage(msg)]);
-                        }
-                    });
-                    child.on('error', function (code) {
-                        if (child.tout) { clearTimeout(child.tout); }
-                        delete node.activeProcesses[child.pid];
-                        if (node.activeProcesses.hasOwnProperty(child.pid) && node.activeProcesses[child.pid] !== null) {
-                            node.error(code,RED.util.cloneMessage(msg));
-                        }
-                    });
+                            delete node.activeProcesses[child.pid];
+                            if (node.activeProcesses.hasOwnProperty(child.pid) && node.activeProcesses[child.pid] !== null) {
+                                node.error(code,RED.util.cloneMessage(msg));
+                            }
+                        });
+                    } catch (e) {
+                        node.status({fill:"blue",shape:"dot",text:""});
+                        node.error(e,RED.util.cloneMessage(msg));
+                    }
                 }
                 else {
                     var cl = node.cmd;
@@ -125,37 +130,42 @@
                     if (node.append.trim() !== "") { cl += " "+node.append; }
                     /* istanbul ignore else  */
                     if (RED.settings.verbose) { node.log(cl); }
-                    child = exec(cl, {encoding: 'binary', maxBuffer:10000000}, function (error, stdout, stderr) {
-                        msg.payload = Buffer.from(stdout,"binary");
-                        if (isUtf8(msg.payload)) { msg.payload = msg.payload.toString(); }
-                        var msg2 = null;
-                        if (stderr) {
-                            msg2 = {payload: stderr};
-                        }
-                        var msg3 = null;
-                        node.status({});
-                        //console.log('[exec] stdout: ' + stdout);
-                        //console.log('[exec] stderr: ' + stderr);
-                        if (error !== null) {
-                            msg3 = {payload:{code:error.code, message:error.message}};
-                            if (error.signal) { msg3.payload.signal = error.signal; }
-                            if (error.code === null) { node.status({fill:"red",shape:"dot",text:"killed"}); }
-                            else { node.status({fill:"red",shape:"dot",text:"error:"+error.code}); }
-                            node.log('error:' + error);
-                        } else if (node.oldrc === "false") {
-                            msg3 = {payload:{code:0}};
-                        }
-                        if (!msg3) { node.status({}); }
-                        node.send([msg,msg2,msg3]);
-                        if (child.tout) { clearTimeout(child.tout); }
-                        delete node.activeProcesses[child.pid];
-                    });
-                    node.status({fill:"blue",shape:"dot",text:"pid:"+child.pid});
-                    child.on('error',function() {});
-                    if (node.timer !== 0) {
-                        child.tout = setTimeout(function() { cleanup(child.pid); }, node.timer);
+                    try {
+                        child = exec(cl, {encoding: 'binary', maxBuffer:10000000}, function (error, stdout, stderr) {
+                            msg.payload = Buffer.from(stdout,"binary");
+                            if (isUtf8(msg.payload)) { msg.payload = msg.payload.toString(); }
+                            var msg2 = null;
+                            if (stderr) {
+                                msg2 = {payload: stderr};
+                            }
+                            var msg3 = null;
+                            node.status({});
+                            //console.log('[exec] stdout: ' + stdout);
+                            //console.log('[exec] stderr: ' + stderr);
+                            if (error !== null) {
+                                msg3 = {payload:{code:error.code, message:error.message}};
+                                if (error.signal) { msg3.payload.signal = error.signal; }
+                                if (error.code === null) { node.status({fill:"red",shape:"dot",text:"killed"}); }
+                                else { node.status({fill:"red",shape:"dot",text:"error:"+error.code}); }
+                                node.log('error:' + error);
+                            } else if (node.oldrc === "false") {
+                                msg3 = {payload:{code:0}};
+                            }
+                            if (!msg3) { node.status({}); }
+                            node.send([msg,msg2,msg3]);
+                            if (child.tout) { clearTimeout(child.tout); }
+                            delete node.activeProcesses[child.pid];
+                        });
+                        node.status({fill:"blue",shape:"dot",text:"pid:"+child.pid});
+                        child.on('error',function() {});
+                        if (node.timer !== 0) {
+                            child.tout = setTimeout(function() { cleanup(child.pid); }, node.timer);
+                        }
+                        node.activeProcesses[child.pid] = child;
+                    } catch (e) {
+                        node.status({fill:"blue",shape:"dot",text:""});
+                        node.error(e,RED.util.cloneMessage(msg));
                     }
-                    node.activeProcesses[child.pid] = child;
                 }
             }
         });
diff -ruN node-red-src/nodes/core/core/80-function.html node-red-src_ttb/nodes/core/core/80-function.html
--- node-red-src/nodes/core/core/80-function.html	2017-09-27 10:53:14.698980790 +0000
+++ node-red-src_ttb/nodes/core/core/80-function.html	1970-01-01 00:00:00.000000000 +0000
@@ -1,145 +0,0 @@
-
-<script type="text/x-red" data-template-name="function">
-    <div class="form-row">
-        <label for="node-input-name"><i class="fa fa-tag"></i> <span data-i18n="common.label.name"></span></label>
-        <input type="text" id="node-input-name" data-i18n="[placeholder]common.label.name">
-    </div>
-    <div class="form-row" style="margin-bottom: 0px;">
-        <label for="node-input-func"><i class="fa fa-wrench"></i> <span data-i18n="function.label.function"></span></label>
-        <input type="hidden" id="node-input-func" autofocus="autofocus">
-        <input type="hidden" id="node-input-noerr">
-    </div>
-    <div class="form-row node-text-editor-row">
-        <div style="height: 250px; min-height:150px;" class="node-text-editor" id="node-input-func-editor" ></div>
-    </div>
-    <div class="form-row">
-        <label for="node-input-outputs"><i class="fa fa-random"></i> <span data-i18n="function.label.outputs"></span></label>
-        <input id="node-input-outputs" style="width: 60px;" value="1">
-    </div>
-    <div class="form-tips"><span data-i18n="function.tip"></span></div>
-</script>
-
-<script type="text/x-red" data-help-name="function">
-    <p>A JavaScript function block to run against the messages being received by the node.</p>
-    <p>The messages are passed in as a JavaScript object called <code>msg</code>.</p>
-    <p>By convention it will have a <code>msg.payload</code> property containing
-       the body of the message.</p>
-    <p>The function is expected to return a message object (or multiple message objects), but can choose
-       to return nothing in order to halt a flow.</p>
-    <h3>Details</h3>
-    <p>See the <a target="_blank" href="http://nodered.org/docs/writing-functions.html">online documentation</a>
-    for more information on writing functions.</p>
-    <h4>Sending messages</h4>
-    <p>The function can either return the messages it wants to pass on to the next nodes
-    in the flow, or can call <code>node.send(messages)</code>.</p>
-    <p>It can return/send:</p>
-    <ul>
-      <li>a single message object - passed to nodes connected to the first output</li>
-      <li>an array of message objects - passed to nodes connected to the corresponding outputs</li>
-    </ul>
-    <p>If any element of the array is itself an array of messages, multiple
-          messages are sent to the corresponding output.</p>
-    <p>If null is returned, either by itself or as an element of the array, no
-          message is passed on.</p>
-    <h4>Logging and Error Handling</h4>
-    <p>To log any information, or report an error, the following functions are available:</p>
-      <ul>
-          <li><code>node.log("Log message")</code></li>
-          <li><code>node.warn("Warning")</code></li>
-          <li><code>node.error("Error")</code></li>
-      </ul>
-    </p>
-    <p>The Catch node can also be used to handle errors. To invoke a Catch node,
-    pass <code>msg</code> as a second argument to <code>node.error</code>:</p>
-    <pre>node.error("Error",msg);</pre>
-</script>
-
-<script type="text/javascript">
-    RED.nodes.registerType('function',{
-        color:"#fdd0a2",
-        category: 'function',
-        defaults: {
-            name: {value:""},
-            func: {value:"\nreturn msg;"},
-            outputs: {value:1},
-            noerr: {value:0,required:true,validate:function(v) { return ((!v) || (v === 0)) ? true : false; }}
-        },
-        inputs:1,
-        outputs:1,
-        icon: "function.png",
-        label: function() {
-            return this.name;
-        },
-        oneditprepare: function() {
-            var that = this;
-            $( "#node-input-outputs" ).spinner({
-                min:1,
-                change: function(event, ui) {
-                    var value = this.value;
-                    if (!value.match(/^\d+$/)) { value = 1;  }
-                    else if (value < this.min) { value = this.min; }
-                    if (value !== this.value) { $(this).spinner("value", value); }
-                }
-            });
-
-            this.editor = RED.editor.createEditor({
-                id: 'node-input-func-editor',
-                mode: 'ace/mode/javascript',
-                value: $("#node-input-func").val(),
-                globals: {
-                    msg:true,
-                    context:true,
-                    RED: true,
-                    util: true,
-                    flow: true,
-                    global: true,
-                    console: true,
-                    Buffer: true,
-                    setTimeout: true,
-                    clearTimeout: true,
-                    setInterval: true,
-                    clearInterval: true
-                }
-            });
-
-            RED.library.create({
-                url:"functions", // where to get the data from
-                type:"function", // the type of object the library is for
-                editor:this.editor, // the field name the main text body goes to
-                mode:"ace/mode/javascript",
-                fields:['name','outputs']
-            });
-            this.editor.focus();
-        },
-        oneditsave: function() {
-            var annot = this.editor.getSession().getAnnotations();
-            this.noerr = 0;
-            $("#node-input-noerr").val(0);
-            for (var k=0; k < annot.length; k++) {
-                //console.log(annot[k].type,":",annot[k].text, "on line", annot[k].row);
-                if (annot[k].type === "error") {
-                    $("#node-input-noerr").val(annot.length);
-                    this.noerr = annot.length;
-                }
-            }
-            $("#node-input-func").val(this.editor.getValue());
-            this.editor.destroy();
-            delete this.editor;
-        },
-        oneditcancel: function() {
-            this.editor.destroy();
-            delete this.editor;
-        },
-        oneditresize: function(size) {
-            var rows = $("#dialog-form>div:not(.node-text-editor-row)");
-            var height = $("#dialog-form").height();
-            for (var i=0; i<rows.size(); i++) {
-                height -= $(rows[i]).outerHeight(true);
-            }
-            var editorRow = $("#dialog-form>div.node-text-editor-row");
-            height -= (parseInt(editorRow.css("marginTop"))+parseInt(editorRow.css("marginBottom")));
-            $(".node-text-editor").css("height",height+"px");
-            this.editor.resize();
-        }
-    });
-</script>
diff -ruN node-red-src/nodes/core/core/80-function.js node-red-src_ttb/nodes/core/core/80-function.js
--- node-red-src/nodes/core/core/80-function.js	2017-09-27 10:53:14.698980790 +0000
+++ node-red-src_ttb/nodes/core/core/80-function.js	1970-01-01 00:00:00.000000000 +0000
@@ -1,256 +0,0 @@
-/**
- * Copyright JS Foundation and other contributors, http://js.foundation
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- **/
-
-module.exports = function(RED) {
-    "use strict";
-    var util = require("util");
-    var vm = require("vm");
-
-    function sendResults(node,_msgid,msgs) {
-        if (msgs == null) {
-            return;
-        } else if (!util.isArray(msgs)) {
-            msgs = [msgs];
-        }
-        var msgCount = 0;
-        for (var m=0; m<msgs.length; m++) {
-            if (msgs[m]) {
-                if (!util.isArray(msgs[m])) {
-                    msgs[m] = [msgs[m]];
-                }
-                for (var n=0; n < msgs[m].length; n++) {
-                    var msg = msgs[m][n];
-                    if (msg !== null && msg !== undefined) {
-                        if (typeof msg === 'object' && !Buffer.isBuffer(msg) && !util.isArray(msg)) {
-                            msg._msgid = _msgid;
-                            msgCount++;
-                        } else {
-                            var type = typeof msg;
-                            if (type === 'object') {
-                                type = Buffer.isBuffer(msg)?'Buffer':(util.isArray(msg)?'Array':'Date');
-                            }
-                            node.error(RED._("function.error.non-message-returned",{ type: type }))
-                        }
-                    }
-                }
-            }
-        }
-        if (msgCount>0) {
-            node.send(msgs);
-        }
-    }
-
-    function FunctionNode(n) {
-        RED.nodes.createNode(this,n);
-        var node = this;
-        this.name = n.name;
-        this.func = n.func;
-        var functionText = "var results = null;"+
-                           "results = (function(msg){ "+
-                              "var __msgid__ = msg._msgid;"+
-                              "var node = {"+
-                                 "log:__node__.log,"+
-                                 "error:__node__.error,"+
-                                 "warn:__node__.warn,"+
-                                 "on:__node__.on,"+
-                                 "status:__node__.status,"+
-                                 "send:function(msgs){ __node__.send(__msgid__,msgs);}"+
-                              "};\n"+
-                              this.func+"\n"+
-                           "})(msg);";
-        this.topic = n.topic;
-        this.outstandingTimers = [];
-        this.outstandingIntervals = [];
-        var sandbox = {
-            console:console,
-            util:util,
-            Buffer:Buffer,
-            RED: {
-                util: RED.util
-            },
-            __node__: {
-                log: function() {
-                    node.log.apply(node, arguments);
-                },
-                error: function() {
-                    node.error.apply(node, arguments);
-                },
-                warn: function() {
-                    node.warn.apply(node, arguments);
-                },
-                send: function(id, msgs) {
-                    sendResults(node, id, msgs);
-                },
-                on: function() {
-                    if (arguments[0] === "input") {
-                        throw new Error(RED._("function.error.inputListener"));
-                    }
-                    node.on.apply(node, arguments);
-                },
-                status: function() {
-                    node.status.apply(node, arguments);
-                }
-            },
-            context: {
-                set: function() {
-                    node.context().set.apply(node,arguments);
-                },
-                get: function() {
-                    return node.context().get.apply(node,arguments);
-                },
-                keys: function() {
-                    return node.context().keys.apply(node,arguments);
-                },
-                get global() {
-                    return node.context().global;
-                },
-                get flow() {
-                    return node.context().flow;
-                }
-            },
-            flow: {
-                set: function() {
-                    node.context().flow.set.apply(node,arguments);
-                },
-                get: function() {
-                    return node.context().flow.get.apply(node,arguments);
-                },
-                keys: function() {
-                    return node.context().flow.keys.apply(node,arguments);
-                }
-            },
-            global: {
-                set: function() {
-                    node.context().global.set.apply(node,arguments);
-                },
-                get: function() {
-                    return node.context().global.get.apply(node,arguments);
-                },
-                keys: function() {
-                    return node.context().global.keys.apply(node,arguments);
-                }
-            },
-            setTimeout: function () {
-                var func = arguments[0];
-                var timerId;
-                arguments[0] = function() {
-                    sandbox.clearTimeout(timerId);
-                    try {
-                        func.apply(this,arguments);
-                    } catch(err) {
-                        node.error(err,{});
-                    }
-                };
-                timerId = setTimeout.apply(this,arguments);
-                node.outstandingTimers.push(timerId);
-                return timerId;
-            },
-            clearTimeout: function(id) {
-                clearTimeout(id);
-                var index = node.outstandingTimers.indexOf(id);
-                if (index > -1) {
-                    node.outstandingTimers.splice(index,1);
-                }
-            },
-            setInterval: function() {
-                var func = arguments[0];
-                var timerId;
-                arguments[0] = function() {
-                    try {
-                        func.apply(this,arguments);
-                    } catch(err) {
-                        node.error(err,{});
-                    }
-                };
-                timerId = setInterval.apply(this,arguments);
-                node.outstandingIntervals.push(timerId);
-                return timerId;
-            },
-            clearInterval: function(id) {
-                clearInterval(id);
-                var index = node.outstandingIntervals.indexOf(id);
-                if (index > -1) {
-                    node.outstandingIntervals.splice(index,1);
-                }
-            }
-        };
-        if (util.hasOwnProperty('promisify')) {
-            sandbox.setTimeout[util.promisify.custom] = function(after, value) {
-                return new Promise(function(resolve, reject) {
-                    sandbox.setTimeout(function(){ resolve(value) }, after);
-                });
-            }
-        }
-        var context = vm.createContext(sandbox);
-        try {
-            this.script = vm.createScript(functionText);
-            this.on("input", function(msg) {
-                try {
-                    var start = process.hrtime();
-                    context.msg = msg;
-                    this.script.runInContext(context);
-                    sendResults(this,msg._msgid,context.results);
-
-                    var duration = process.hrtime(start);
-                    var converted = Math.floor((duration[0] * 1e9 + duration[1])/10000)/100;
-                    this.metric("duration", msg, converted);
-                    if (process.env.NODE_RED_FUNCTION_TIME) {
-                        this.status({fill:"yellow",shape:"dot",text:""+converted});
-                    }
-                } catch(err) {
-
-                    var line = 0;
-                    var errorMessage;
-                    var stack = err.stack.split(/\r?\n/);
-                    if (stack.length > 0) {
-                        while (line < stack.length && stack[line].indexOf("ReferenceError") !== 0) {
-                            line++;
-                        }
-
-                        if (line < stack.length) {
-                            errorMessage = stack[line];
-                            var m = /:(\d+):(\d+)$/.exec(stack[line+1]);
-                            if (m) {
-                                var lineno = Number(m[1])-1;
-                                var cha = m[2];
-                                errorMessage += " (line "+lineno+", col "+cha+")";
-                            }
-                        }
-                    }
-                    if (!errorMessage) {
-                        errorMessage = err.toString();
-                    }
-                    this.error(errorMessage, msg);
-                }
-            });
-            this.on("close", function() {
-                while (node.outstandingTimers.length > 0) {
-                    clearTimeout(node.outstandingTimers.pop())
-                }
-                while (node.outstandingIntervals.length > 0) {
-                    clearInterval(node.outstandingIntervals.pop())
-                }
-                this.status({});
-            })
-        } catch(err) {
-            // eg SyntaxError - which v8 doesn't include line number information
-            // so we can't do better than this
-            this.error(err);
-        }
-    }
-    RED.nodes.registerType("function",FunctionNode);
-    RED.library.register("functions");
-}
diff -ruN node-red-src/nodes/core/core/80-template.html node-red-src_ttb/nodes/core/core/80-template.html
--- node-red-src/nodes/core/core/80-template.html	2017-09-27 10:53:14.698980790 +0000
+++ node-red-src_ttb/nodes/core/core/80-template.html	2017-09-26 15:24:29.481826700 +0000
@@ -30,7 +30,7 @@
                 <option value="css">CSS</option>
                 <option value="markdown">Markdown</option>
                 <option value="yaml">YAML</option>
-                <option value="text" data-i18n="template.label.none"></option>
+                <option value="text">none</option>
             </select>
         </div>
     </div>
diff -ruN node-red-src/nodes/core/core/80-template.js node-red-src_ttb/nodes/core/core/80-template.js
--- node-red-src/nodes/core/core/80-template.js	2017-09-27 10:53:14.698980790 +0000
+++ node-red-src_ttb/nodes/core/core/80-template.js	2017-09-26 15:24:29.706470500 +0000
@@ -22,10 +22,9 @@
      * Custom Mustache Context capable to resolve message property and node
      * flow and global context
      */
-    function NodeContext(msg, nodeContext, parent, escapeStrings) {
+    function NodeContext(msg, nodeContext,parent) {
         this.msgContext = new mustache.Context(msg,parent);
         this.nodeContext = nodeContext;
-        this.escapeStrings = escapeStrings;
     }
 
     NodeContext.prototype = new mustache.Context();
@@ -35,14 +34,6 @@
         try {
             var value = this.msgContext.lookup(name);
             if (value !== undefined) {
-                if (this.escapeStrings && typeof value === "string") {
-                    value = value.replace(/\\/g, "\\\\");
-                    value = value.replace(/\n/g, "\\n");
-                    value = value.replace(/\t/g, "\\t");
-                    value = value.replace(/\r/g, "\\r");
-                    value = value.replace(/\f/g, "\\f");
-                    value = value.replace(/[\b]/g, "\\b");
-                }
                 return value;
             }
 
@@ -82,11 +73,7 @@
             try {
                 var value;
                 if (node.syntax === "mustache") {
-                    if (node.outputFormat === "json") {
-                        value = mustache.render(node.template,new NodeContext(msg, node.context(), null, true));
-                    } else {
-                        value = mustache.render(node.template,new NodeContext(msg, node.context(), null, false));
-                    }
+                    value = mustache.render(node.template,new NodeContext(msg, node.context()));
                 } else {
                     value = node.template;
                 }
diff -ruN node-red-src/nodes/core/core/89-delay.html node-red-src_ttb/nodes/core/core/89-delay.html
--- node-red-src/nodes/core/core/89-delay.html	2017-09-27 10:53:14.698980790 +0000
+++ node-red-src_ttb/nodes/core/core/89-delay.html	2017-09-26 15:24:29.475809500 +0000
@@ -46,7 +46,7 @@
         <div id="random-details" class="form-row">
             <label for="node-input-randomFirst"><i class="fa fa-clock-o"></i> <span data-i18n="delay.between"></span></label>
             <input type="text" id="node-input-randomFirst" placeholder="" style="text-align:end; width:30px !important">
-            <span data-i18n="delay.and"></span>
+            &nbsp;&nbsp;&amp;&nbsp;&nbsp;
             <input type="text" id="node-input-randomLast" placeholder="" style="text-align:end; width:30px !important">
             <select id="node-input-randomUnits" style="width:140px !important">
               <option value="milliseconds" data-i18n="delay.milisecs"></option>
@@ -129,13 +129,13 @@
         defaults: {
             name: {value:""},
             pauseType: {value:"delay", required:true},
-            timeout: {value:"5", required:true, validate:function(v) { return RED.validators.number(v) && (v >= 0); }},
+            timeout: {value:"5", required:true, validate:RED.validators.number()},
             timeoutUnits: {value:"seconds"},
-            rate: {value:"1", required:true, validate:function(v) { return RED.validators.number(v) && (v >= 0); }},
+            rate: {value:"1", required:true, validate:RED.validators.number()},
             nbRateUnits: {value:"1", required:false, validate:RED.validators.regex(/\d+|/)},
             rateUnits: {value: "second"},
-            randomFirst: {value:"1", required:true, validate:function(v) { return RED.validators.number(v) && (v >= 0); }},
-            randomLast: {value:"5", required:true, validate:function(v) { return RED.validators.number(v) && (v >= 0); }},
+            randomFirst: {value:"1", required:true, validate:RED.validators.number()},
+            randomLast: {value:"5", required:true, validate:RED.validators.number()},
             randomUnits: {value: "seconds"},
             drop: {value:false}
         },
diff -ruN node-red-src/nodes/core/core/89-delay.js node-red-src_ttb/nodes/core/core/89-delay.js
--- node-red-src/nodes/core/core/89-delay.js	2017-09-27 10:53:14.698980790 +0000
+++ node-red-src_ttb/nodes/core/core/89-delay.js	2017-09-26 15:24:29.653303900 +0000
@@ -171,7 +171,6 @@
                 }
                 if (msg.hasOwnProperty("reset")) {
                     clearInterval(node.intervalID);
-                    node.intervalID = -1;
                     node.buffer = [];
                     node.status({text:"reset"});
                 }
diff -ruN node-red-src/nodes/core/core/lib/debug/debug-utils.js node-red-src_ttb/nodes/core/core/lib/debug/debug-utils.js
--- node-red-src/nodes/core/core/lib/debug/debug-utils.js	2017-09-27 10:53:14.698980790 +0000
+++ node-red-src_ttb/nodes/core/core/lib/debug/debug-utils.js	2017-09-26 15:24:29.522433200 +0000
@@ -41,14 +41,14 @@
         var content = $("<div>").css({"position":"relative","height":"100%"});
         var toolbar = $('<div class="sidebar-header">'+
             '<span class="button-group"><a id="debug-tab-filter" class="sidebar-header-button" href="#"><i class="fa fa-filter"></i> <span></span></a></span>'+
-            '<span class="button-group"><a id="debug-tab-clear" class="sidebar-header-button" href="#" data-i18n="[title]node-red:debug.sidebar.clearLog"><i class="fa fa-trash"></i></a></span></div>').appendTo(content);
+            '<span class="button-group"><a id="debug-tab-clear" title="clear log" class="sidebar-header-button" href="#"><i class="fa fa-trash"></i></a></span></div>').appendTo(content);
 
         var footerToolbar = $('<div>'+
             // '<span class="button-group">'+
             //     '<a class="sidebar-footer-button-toggle text-button selected" id="debug-tab-view-list" href="#"><span data-i18n="">list</span></a>'+
             //     '<a class="sidebar-footer-button-toggle text-button" id="debug-tab-view-table" href="#"><span data-i18n="">table</span></a> '+
             // '</span>'+
-            '<span class="button-group"><a id="debug-tab-open" class="sidebar-footer-button" href="#" data-i18n="[title]node-red:debug.sidebar.openWindow"><i class="fa fa-desktop"></i></a></span> ' +
+            '<span class="button-group"><a id="debug-tab-open" title="open in new window" class="sidebar-footer-button" href="#"><i class="fa fa-desktop"></i></a></span> ' +
             '</div>');
 
         messageList = $('<div class="debug-content debug-content-list"/>').appendTo(content);
@@ -70,7 +70,7 @@
 
         var debugNodeListRow = $('<div class="debug-filter-row hide"></div>').appendTo(filterDialog);
         var flowCheckboxes = {};
-        var debugNodeListHeader = $('<div><span data-i18n="node-red:debug.sidebar.debugNodes"></span><span></span></div>');
+        var debugNodeListHeader = $('<div><span>Debug nodes</span><span></span></div>');
         var headerCheckbox = $('<input type="checkbox">').appendTo(debugNodeListHeader.find("span")[1]).checkboxSet();
 
         debugNodeList = $('<ol>',{style:"text-align: left; min-height: 250px; max-height: 250px"}).appendTo(debugNodeListRow).editableList({
@@ -441,14 +441,7 @@
         }
         var el = $('<span class="debug-message-payload"></span>').appendTo(msg);
         var path = o.property||'';
-        var debugMessage = RED.utils.createObjectElement(payload, {
-            key: /*true*/null,
-            typeHint: format,
-            hideKey: false,
-            path: path,
-            sourceId: sourceNode&&sourceNode.id,
-            rootPath: path
-        });
+        var debugMessage = RED.utils.createObjectElement(payload,/*true*/null,format,false,path,sourceNode&&sourceNode.id,path);
         // Do this in a separate step so the element functions aren't stripped
         debugMessage.appendTo(el);
         // NOTE: relying on function error to have a "type" that all other msgs don't
diff -ruN node-red-src/nodes/core/io/10-mqtt.html node-red-src_ttb/nodes/core/io/10-mqtt.html
--- node-red-src/nodes/core/io/10-mqtt.html	2017-09-27 10:53:14.708980726 +0000
+++ node-red-src_ttb/nodes/core/io/10-mqtt.html	2017-09-26 15:24:28.794654700 +0000
@@ -166,18 +166,14 @@
 
 <script type="text/x-red" data-template-name="mqtt-broker">
     <div class="form-row">
-        <label for="node-config-input-name"><i class="fa fa-tag"></i> <span data-i18n="common.label.name"></span></label>
-        <input type="text" id="node-config-input-name" data-i18n="[placeholder]common.label.name">
-    </div>
-    <div class="form-row">
         <ul style="background: #fff; min-width: 600px; margin-bottom: 20px;" id="node-config-mqtt-broker-tabs"></ul>
     </div>
     <div id="node-config-mqtt-broker-tabs-content" style="min-height: 170px;">
         <div id="mqtt-broker-tab-connection" style="display:none">
             <div class="form-row node-input-broker">
                 <label for="node-config-input-broker"><i class="fa fa-globe"></i> <span data-i18n="mqtt.label.broker"></span></label>
-                <input class="input-append-left" type="text" id="node-config-input-broker" style="width:40%;" data-i18n="[placeholder]mqtt.label.example">
-                <label for="node-config-input-port" style="margin-left:20px; width:43px; "> <span data-i18n="mqtt.label.port"></span></label>
+                <input class="input-append-left" type="text" id="node-config-input-broker" placeholder="e.g. localhost" style="width:40%;" >
+                <label for="node-config-input-port" style="margin-left:20px; width:35px; "> <span data-i18n="mqtt.label.port"></span></label>
                 <input type="text" id="node-config-input-port" data-i18n="[placeholder]mqtt.label.port" style="width:55px">
             </div>
             <div class="form-row">
@@ -270,7 +266,6 @@
     RED.nodes.registerType('mqtt-broker',{
         category: 'config',
         defaults: {
-            name: {value:""},
             broker: {value:"",required:true},
             port: {value:1883,required:true,validate:RED.validators.number()},
             tls: {type:"tls-config",required: false},
@@ -301,15 +296,9 @@
             password: {type: "password"}
         },
         label: function() {
-            var lab = this.name;
-            if ((lab === undefined) || (lab ==="")) {
-                var b = this.broker;
-                if (b === "") { b = "undefined"; }
-                lab = (this.clientid?this.clientid+"@":"")+b+":"+this.port;
-            }
-            return lab;
-            
-            
+            var b = this.broker;
+            if (b === "") { b = "undefined"; }
+            return (this.clientid?this.clientid+"@":"")+b+":"+this.port;
         },
         oneditprepare: function () {
             var tabs = RED.tabs.create({
diff -ruN node-red-src/nodes/core/io/21-httpin.html node-red-src_ttb/nodes/core/io/21-httpin.html
--- node-red-src/nodes/core/io/21-httpin.html	2017-09-27 10:53:14.708980726 +0000
+++ node-red-src_ttb/nodes/core/io/21-httpin.html	2017-09-26 15:24:28.436613800 +0000
@@ -213,7 +213,7 @@
     var headerTypes = [
         {value:"content-type",label:"Content-Type",hasValue: false},
         {value:"location",label:"Location",hasValue: false},
-        {value:"other",label:RED._("node-red:httpin.label.other"),icon:"red/images/typedInput/az.png"}
+        {value:"other",label:"other",icon:"red/images/typedInput/az.png"}
        ]
     var contentTypes = [
         {value:"application/json",label:"application/json",hasValue: false},
@@ -223,7 +223,7 @@
         {value:"text/plain",label:"text/plain",hasValue: false},
         {value:"image/gif",label:"image/gif",hasValue: false},
         {value:"image/png",label:"image/png",hasValue: false},
-        {value:"other",label:RED._("node-red:httpin.label.other"),icon:"red/images/typedInput/az.png"}
+        {value:"other",label:"other",icon:"red/images/typedInput/az.png"}
     ];
 
     RED.nodes.registerType('http response',{
diff -ruN node-red-src/nodes/core/io/31-tcpin.html node-red-src_ttb/nodes/core/io/31-tcpin.html
--- node-red-src/nodes/core/io/31-tcpin.html	2017-09-27 10:53:14.708980726 +0000
+++ node-red-src_ttb/nodes/core/io/31-tcpin.html	2017-09-26 15:24:28.502944000 +0000
@@ -212,12 +212,11 @@
     <div class="form-row">
         <label for="node-input-server"><i class="fa fa-globe"></i> <span data-i18n="tcpin.label.server"></span></label>
         <input type="text" id="node-input-server" placeholder="ip.address" style="width:45%">
-        <span data-i18n="tcpin.label.port"></span>
-        <input type="text" id="node-input-port" style="width:60px">
+        &nbsp;port <input type="text" id="node-input-port" style="width:60px">
     </div>
     <div class="form-row">
         <label for="node-input-out"><i class="fa fa-sign-out"></i> <span data-i18n="tcpin.label.return"></span></label>
-        <select type="text" id="node-input-out" style="width:54%;">
+        <select type="text" id="node-input-out" style="width:56%;">
             <option value="time" data-i18n="tcpin.return.timeout"></option>
             <option value="char" data-i18n="tcpin.return.character"></option>
             <option value="count" data-i18n="tcpin.return.number"></option>
@@ -273,7 +272,7 @@
                 }
                 else if ($("#node-input-out").val() == "time") {
                     if (previous != "time") { $("#node-input-splitc").val("0"); }
-                    $("#node-units").text(RED._("node-red:tcpin.label.ms"));
+                    $("#node-units").text("ms");
                 }
                 else if ($("#node-input-out").val() == "immed") {
                     if (previous != "immed") { $("#node-input-splitc").val(" "); }
@@ -281,7 +280,7 @@
                 }
                 else if ($("#node-input-out").val() == "count") {
                     if (previous != "count") { $("#node-input-splitc").val("12"); }
-                    $("#node-units").text(RED._("node-red:tcpin.label.chars"));
+                    $("#node-units").text("chars");
                 }
                 else {
                     if (previous != "sit") { $("#node-input-splitc").val(" "); }
diff -ruN node-red-src/nodes/core/locales/en-US/messages.json node-red-src_ttb/nodes/core/locales/en-US/messages.json
--- node-red-src/nodes/core/locales/en-US/messages.json	2017-09-27 10:53:14.708980726 +0000
+++ node-red-src_ttb/nodes/core/locales/en-US/messages.json	2017-09-26 15:24:27.862505900 +0000
@@ -110,14 +110,11 @@
             "deactivated": "Successfully deactivated: __label__"
         },
         "sidebar": {
-            "label": "debug",
-            "name": "Debug messages",
+            "label": "display/debug",
+            "name": "Messages",
             "filterAll": "all nodes",
             "filterSelected": "selected nodes",
-            "filterCurrent": "current flow",
-            "debugNodes": "Debug nodes",
-            "clearLog": "clear log",
-            "openWindow": "open in new window"
+            "filterCurrent": "current flow"
         },
         "messageMenu": {
             "collapseAll": "Collapse all paths",
@@ -162,8 +159,7 @@
             "append": "Append",
             "timeout": "Timeout",
             "timeoutplace": "optional",
-            "return": "Output",
-            "seconds": "seconds"
+            "return": "Output"
         },
         "placeholder": {
             "extraparams": "extra input parameters"
@@ -194,8 +190,7 @@
             "output": "Output as",
             "mustache": "Mustache template",
             "plain": "Plain text",
-            "json": "Parsed JSON",
-            "none": "none"
+            "json": "Parsed JSON"
         },
         "templatevalue": "This is the payload: {{payload}} !"
     },
@@ -221,7 +216,6 @@
         "days": "Days",
         "day": "Day",
         "between": "Between",
-        "and": "&",
         "rate": "Rate",
         "msgper": "msg(s) per",
         "dropmsg": "drop intermediate messages",
@@ -303,7 +297,6 @@
     "mqtt": {
         "label": {
             "broker": "Server",
-            "example": "e.g. localhost",
             "qos": "QoS",
             "clientid": "Client ID",
             "port": "Port",
@@ -350,8 +343,7 @@
             "return": "Return",
             "upload": "Accept file uploads?",
             "status": "Status code",
-            "headers": "Headers",
-            "other": "other"
+            "headers": "Headers"
         },
         "setby": "- set by msg.method -",
         "basicauth": "Use basic authentication",
@@ -422,9 +414,7 @@
             "close-connection": "Close connection after each message is sent?",
             "decode-base64": "Decode Base64 message?",
             "server": "Server",
-            "return": "Return",
-            "ms": "ms",
-            "chars": "chars"
+            "return": "Return"
         },
         "type": {
             "listen": "Listen on",
diff -ruN node-red-src/nodes/core/locales/fr-FR/messages.json node-red-src_ttb/nodes/core/locales/fr-FR/messages.json
--- node-red-src/nodes/core/locales/fr-FR/messages.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/nodes/core/locales/fr-FR/messages.json	2017-09-26 15:24:27.891645700 +0000
@@ -0,0 +1,611 @@
+{
+    "common": {
+        "label": {
+            "payload": "Payload",
+            "topic": "Topic",
+            "name": "Nom",
+            "username": "Utilisateur",
+            "password": "Passe"
+        },
+        "status": {
+            "connected": "connecté",
+            "not-connected": "non connecté",
+            "disconnected": "déconnecté",
+            "connecting": "connection...",
+            "error": "erreur",
+            "ok": "Ok"
+        },
+        "notification": {
+            "error": "<strong>Erreur</strong>: __message__",
+            "errors": {
+                "not-deployed": "node non déployé",
+                "no-response": "pas de réponse du Raspberry Pi",
+                "unexpected": "erreur (__status__) __message__"
+            }
+        },
+        "errors": {
+            "nooverride": "Attention: les propriétés de msg ne surchargent pas toujours celles du node(voir bit.ly/nr-override-msg-props)"
+        }
+    },
+    "inject": {
+        "inject": "inject",
+        "repeat": "Répéter = __repeat__",
+        "crontab": "crontab = __crontab__",
+        "stopped": "arrêter",
+        "failed": "Inject erreur: __error__",
+        "label": {
+            "repeat": "Répéter"
+        },
+        "timestamp": "temporel",
+        "string": "Caractères fixes",
+        "blank": "vide",
+        "none": "aucun message",
+        "interval": "intervalle",
+        "interval-time": "intervalle entre 2 temps",
+        "time": "à un moment précis",
+        "seconds": "secondes",
+        "minutes": "minutes",
+        "hours": "hours",
+        "between": "entre",
+        "at": "à",
+        "and": "et",
+        "every": "chaque",
+        "days": [
+            "Lundi",
+            "Mardi",
+            "Mercredi",
+            "Jeudi",
+            "Vendredi",
+            "Samedi",
+            "Dimanche"
+        ],
+        "on": "le",
+        "onstart": "Lancer au début?",
+        "tip": "",
+        "success": "Injection réussie de: __label__",
+        "errors": {
+            "failed": "Injection échouée, (voir les infos)"
+        }
+    },
+    "catch": {
+        "catch": "catch"
+    },
+    "debug": {
+        "output": "Output",
+        "msgprop": "message property",
+        "msgobj": "L'objet msg",
+        "to": "to",
+        "debtab": "panneau Display",
+        "tabcon": "panneau Display et dans la console",
+        "notification": {
+            "activated": "activation réussie de: __label__",
+            "deactivated": "désactivation réussie de: __label__"
+        },
+        "sidebar": {
+            "label": "Affichage",
+            "name": "Messages"
+        }
+    },
+    "exec": {
+        "spawnerr": "Spawn command must be just the command - no spaces or extra parameters",
+        "badstdout": "Bad STDOUT",
+        "label": {
+            "command": "Command",
+            "append": "Append"
+        },
+        "placeholder": {
+            "extraparams": "extra input parameters"
+        },
+        "spawn": "Use spawn() instead of exec()?",
+        "tip": "Tip: <i>spawn</i> expects only one command word - and appended args to be comma separated."
+    },
+    "function": {
+        "label": {
+            "function": "Fonction",
+            "outputs": "Sorties"
+        },
+        "tip": "Voir le panneau d'info pour de l'aide complémentaire."
+    },
+    "template": {
+        "label": {
+            "template": "Modèle",
+            "property": "Propriété"
+        },
+        "templatevalue": "Voici le payload: {{payload}} !"
+    },
+    "delay": {
+        "action": "Action",
+        "for": "Pour",
+        "delaymsg": "Message de délai",
+        "ramdomdelay": "Delai aléatoire",
+        "limitrate": "Vitesse limitée à",
+        "fairqueue": "Topic based fair queue",
+        "milisecs": "Milisecondes",
+        "secs": "Secondes",
+        "sec": "Seconde",
+        "mins": "Minutes",
+        "min": "Minute",
+        "hours": "Heures",
+        "hour": "heure",
+        "days": "Jours",
+        "day": "Jour",
+        "between": "Entre",
+        "rate": "Vitesse",
+        "msgper": "msg(s) per",
+        "dropmsg": "perdre les messages intermédiaires",
+        "label": {
+            "delay": "delai",
+            "limit": "limite",
+            "random": "aléatoire",
+            "queue": "queue"
+        },
+        "error": {
+            "buffer": "le tampon a dépassé les 1000 messages"
+        }
+    },
+    "trigger": {
+        "send": "Envoyer",
+        "then": "alors",
+        "then-send": "puis envoyer",
+        "output": {
+            "string": "les caractères du payload",
+            "existing": "le message reçu",
+            "nothing": "rien"
+        },
+        "wait-reset": "Attente de remise à zéro",
+        "wait-for": "attente pour",
+        "duration": {
+            "ms": "Milliseconds",
+            "s": "Seconds",
+            "m": "Minutes",
+            "h": "Hours"
+        },
+        "extend": "étendre le délai en cas de nouveau message",
+        "tip": "Ce node peut être s à zéro en envoyant un message avec la propriété <b>msg.reset</b>",
+        "label": {
+            "trigger": "déclencher",
+            "trigger-block": "déclencher et bloquer"
+        }
+    },
+    "comment": {
+        "label": {
+            "title": "Titre",
+            "body": "Corps"
+        },
+        "tip": "Note: Le texte peut contenir des styles ''<a href=\"https://help.github.com/articles/markdown-basics/\" target=\"_new\">Github Markdown</a>''"
+    },
+    "unknown": {
+        "label": {
+            "unknown": "inconnu"
+        },
+        "tip": "<p>Ce node est d'un type inconnu ici.</p><p><i>Si vous activez quand même ce flot, il ne démarrera pas tant que ce node manquant n'est pas installé.</i></p>"
+    },
+    "mqtt": {
+        "label": {
+            "broker": "Serveur MQTT",
+            "qos": "QoS",
+            "clientid": "Client ID",
+            "port": "Port"
+        },
+        "placeholder": {
+            "clientid": "optionnel"
+        },
+        "retain": "Retain",
+        "true": "true",
+        "false": "false",
+        "tip": "Tip: Leave topic, qos or retain blank if you want to set them via msg properties.",
+        "errors": {
+            "not-defined": "topic not defined",
+            "missing-config": "missing broker configuration",
+            "invalid-topic": "Invalid topic specified"
+        }
+    },
+    "httpin": {
+        "label": {
+            "method": "Method",
+            "url": "URL",
+            "doc": "Docs",
+            "return": "Return"
+        },
+        "setby": "- set by msg.method -",
+        "basicauth": "Use basic authentication?",
+        "utf8": "a UTF-8 string",
+        "binary": "a binary buffer",
+        "json": "a parsed JSON object",
+        "tip": {
+            "in": "The url will be relative to ",
+            "res": "The messages sent to this node <b>must</b> originate from an <i>http input</i> node",
+            "req": "Tip: If the JSON parse fails the fetched string is returned as-is."
+        },
+        "httpreq": "http request",
+        "errors": {
+            "not-created": "Cannot create http-in node when httpNodeRoot set to false",
+            "no-response": "No response object",
+            "json-error": "JSON parse error",
+            "no-url": "No url specified"
+        },
+        "status": {
+            "requesting": "requesting"
+        }
+    },
+    "websocket": {
+        "label": {
+            "type": "Type",
+            "path": "Path",
+            "url": "URL"
+        },
+        "listenon": "Listen on",
+        "connectto": "Connect to",
+        "payload": "Send/Receive payload",
+        "message": "Send/Receive entire message",
+        "tip": {
+            "path1": "By default, <code>payload</code> will contain the data to be sent over, or received from a websocket. The listener can be configured to send or receive the entire message object as a JSON formatted string.",
+            "path2": "This path will be relative to ",
+            "url1": "URL should use ws:&#47;&#47; or wss:&#47;&#47; scheme and point to an existing websocket listener.",
+            "url2": "By default, <code>payload</code> will contain the data to be sent over, or received from a websocket. The client can be configured to send or receive the entire message object as a JSON formatted string."
+        },
+        "errors": {
+            "connect-error": "An error occured on the ws connection: ",
+            "send-error": "An error occurred while sending: ",
+            "missing-conf": "Missing server configuration"
+        }
+    },
+    "watch": {
+        "label": {
+            "files": "File(s)"
+        },
+        "placeholder": {
+            "files": "Comma-separated list of files and/or directories"
+        },
+        "tip": "On Windows you must use double back-slashes \\\\ in any directory names."
+    },
+    "tcpin": {
+        "label": {
+            "type": "Type",
+            "output": "Output",
+            "port": "port",
+            "host": "at host",
+            "payload": "payload(s)",
+            "delimited": "delimited by",
+            "close-connection": "Close connection after each message is sent?",
+            "decode-base64": "Decode Base64 message?",
+            "server": "Server",
+            "return": "Return"
+        },
+        "type": {
+            "listen": "Listen on",
+            "connect": "Connect to",
+            "reply": "Reply to TCP"
+        },
+        "output": {
+            "stream": "stream of",
+            "single": "single",
+            "buffer": "Buffer",
+            "string": "String",
+            "base64": "Base64 String"
+        },
+        "return": {
+            "timeout": "after a fixed timeout of",
+            "character": "when character received is",
+            "number": "a fixed number of chars",
+            "never": "never - keep connection open"
+        },
+        "status": {
+            "connecting": "connecting to __host__:__port__",
+            "connected": "connected to __host__:__port__",
+            "listening-port": "listening on port __port__",
+            "stopped-listening": "stopped listening on port",
+            "connection-from": "connection from __host__:__port__",
+            "connection-closed": "connection closed from __host__:__port__",
+            "connections": "__count__ connection",
+            "connections_plural": "__count__ connections"
+
+        },
+        "errors": {
+            "connection-lost": "connection lost to __host__:__port__",
+            "timeout": "timeout closed socket port __port__",
+            "cannot-listen": "unable to listen on port __port__, error: __error__",
+            "error": "error: __error__",
+
+            "socket-error": "socket error from __host__:__port__",
+            "no-host": "Host and/or port not set",
+            "connect-timeout": "connect timeout",
+            "connect-fail": "connect failed"
+        }
+    },
+    "udp": {
+        "label": {
+            "listen": "Listen for",
+            "onport": "on Port",
+            "using": "using",
+            "output": "Output",
+            "group": "Group",
+            "interface": "Interface",
+            "send": "Send a",
+            "toport": "to port",
+            "address": "Address",
+            "decode-base64": "Decode Base64 encoded payload?"
+        },
+        "placeholder": {
+            "interface": "(optional) ip address of eth0",
+            "address": "destination ip"
+        },
+        "udpmsgs": "udp messages",
+        "mcmsgs": "multicast messages",
+        "udpmsg": "udp message",
+        "bcmsg": "broadcast message",
+        "mcmsg": "multicast message",
+        "output": {
+            "buffer": "a Buffer",
+            "string": "a String",
+            "base64": "a Base64 encoded string"
+        },
+        "bind": {
+            "random": "bind to random local port",
+            "local": "bind to local port",
+            "target": "bind to target port"
+        },
+        "tip": {
+            "in": "Tip: Make sure your firewall will allow the data in.",
+            "out": "Tip: leave address and port blank if you want to set using <b>msg.ip</b> and <b>msg.port</b>."
+        },
+        "status": {
+            "listener-at": "udp listener at __host__:__port__",
+            "mc-group": "udp multicast group __group__",
+            "listener-stopped": "udp listener stopped",
+            "output-stopped": "udp output stopped",
+            "mc-ready": "udp multicast ready: __outport__ -> __host__:__port__",
+            "bc-ready": "udp broadcast ready: __outport__ -> __host__:__port__",
+            "ready": "udp ready: __outport__ -> __host__:__port__",
+            "ready-nolocal": "udp ready: __host__:__port__"
+        },
+        "errors": {
+            "access-error": "UDP access error, you may need root access for ports below 1024",
+            "error": "error: __error_",
+            "bad-mcaddress": "Bad Multicast Address",
+            "interface": "Must be ip address of the required interface",
+            "ip-notset": "udp: ip address not set",
+            "port-notset": "udp: port not set",
+            "port-invalid": "udp: port number not valid"
+        }
+    },
+    "switch": {
+        "label": {
+            "property": "Property",
+            "rule": "rule"
+        },
+        "checkall": "checking all rules",
+        "stopfirst": "stopping after first match",
+        "rules": {
+            "btwn":"is between",
+            "cont":"contains",
+            "regex":"matches regex",
+            "true":"is true",
+            "false":"is false",
+            "null":"is null",
+            "nnull":"is not null",
+            "else":"otherwise"
+        }
+    },
+    "change": {
+        "label": {
+            "rules": "Rules",
+            "rule": "rule",
+            "set": "set __property__",
+            "change": "change __property__",
+            "delete": "delete __property__",
+            "changeCount": "change: __count__ rules",
+            "regex": "Use regular expressions"
+        },
+        "action": {
+            "set": "Set",
+            "change": "Change",
+            "delete": "Delete",
+            "to": "to",
+            "search": "Search for",
+            "replace": "Replace with"
+        },
+        "errors": {
+            "invalid-from": "Invalid 'from' property: __error__"
+        }
+    },
+    "range": {
+        "label": {
+            "action": "Action",
+            "inputrange": "Map the input range",
+            "resultrange": "to the result range",
+            "from": "from",
+            "to": "to",
+            "roundresult": "Round result to the nearest integer?"
+        },
+        "placeholder": {
+            "min": "e.g. 0",
+            "maxin": "e.g. 99",
+            "maxout": "e.g. 255"
+        },
+        "scale": {
+            "payload": "Scale msg.payload",
+            "limit": "Scale and limit to the target range",
+            "wrap": "Scale and wrap within the target range"
+        },
+        "tip": "Tip: This node ONLY works with numbers.",
+        "errors": {
+            "notnumber": "Not a number"
+        }
+    },
+    "csv": {
+        "label": {
+            "columns": "Columns",
+            "separator": "Separator",
+            "c2o": "CSV-to-Object options",
+            "o2c": "Object-to-CSV options",
+            "input": "Input",
+            "firstrow": "first row contains column names",
+            "output": "Output",
+            "includerow": "include column name row",
+            "newline": "Newline"
+        },
+        "placeholder": {
+            "columns": "comma-separated column names"
+        },
+        "separator": {
+            "comma": "comma",
+            "tab": "tab",
+            "space": "space",
+            "semicolon": "semicolon",
+            "colon": "colon",
+            "hashtag": "hashtag",
+            "other": "other..."
+        },
+        "output": {
+            "row": "a message per row",
+            "array": "a single message [array]"
+        },
+        "newline": {
+            "linux": "Linux (\\n)",
+            "mac": "Mac (\\r)",
+            "windows": "Windows (\\r\\n)"
+        },
+        "errors": {
+            "csv_js": "This node only handles csv strings or js objects."
+        }
+    },
+    "html": {
+        "label": {
+            "select": "Select",
+            "output": "Output"
+        },
+        "output": {
+            "html": "the html content of the elements",
+            "text": "only the text content of the elements"
+        },
+        "format": {
+            "single": "as a single message containing an array",
+            "multi": "as multiple messages, one for each element"
+        },
+        "tip": "Tip: The <b>Select</b> value is a <a href=\"https://github.com/fb55/CSSselect#user-content-supported-selectors\" target=\"_new\"><i><u>CSS Selector</u></i></a>, similar to a jQuery selector."
+    },
+    "json": {
+        "errors": {
+            "dropped-object": "Ignored non-object payload",
+            "dropped": "Ignored unsupported payload type"
+        }
+    },
+    "xml": {
+        "label": {
+            "represent": "Represent XML tag attributes as a property named",
+            "prefix": "Prefix to access character content",
+            "advanced": "Advanced options"
+        },
+        "tip": "There is no simple way to convert XML attributes to JSON so the approach taken here is to add a property, named $ by default, to the JSON structure.",
+        "errors": {
+            "xml_js": "This node only handles xml strings or js objects."
+        }
+    },
+    "rpi-gpio": {
+        "label": {
+            "gpiopin": "GPIO Pin",
+            "selectpin": "select pin",
+            "resistor": "Resistor?",
+            "readinitial": "Read initial state of pin on deploy/restart?",
+            "type": "Type",
+            "initpin": "Initialise pin state?",
+            "button": "Button",
+            "pimouse": "Pi Mouse",
+            "left": "Left",
+            "right": "Right",
+            "middle": "Middle"
+        },
+        "resistor": {
+            "none": "none",
+            "pullup": "pullup",
+            "pulldown": "pulldown"
+        },
+        "digout": "Digital output",
+        "pwmout": "PWM output",
+        "initpin0": "initial level of pin - low (0)",
+        "initpin1": "initial level of pin - high (1)",
+        "left": "left",
+        "right": "right",
+        "middle": "middle",
+        "any": "any",
+        "pinname": "Pin",
+        "alreadyuse": "already in use",
+        "alreadyset": "already set as",
+        "tip": {
+            "pin": "<b>Pins in Use</b>: ",
+            "in": "Tip: Only Digital Input is supported - input must be 0 or 1.",
+            "dig": "<b>Tip</b>: For digital output - input must be 0 or 1.",
+            "pwm": "<b>Tip</b>: For PWM output - input must be between 0 to 100."
+        },
+        "types": {
+            "digout": "digital output",
+            "input": "input",
+            "pullup": "input with pull up",
+            "pulldown": "input with pull down",
+            "pwmout": "PWM output"
+        },
+        "status": {
+            "stopped": "stopped",
+            "closed": "closed",
+            "not-running": "not running"
+        },
+        "errors": {
+            "ignorenode": "Ignoring Raspberry Pi specific node",
+            "version": "Version command failed",
+            "sawpitype": "Saw Pi Type",
+            "libnotfound": "Cannot find Pi RPi.GPIO python library",
+            "alreadyset": "GPIO pin __pin__ already set as type: __type__",
+            "invalidpin": "Invalid GPIO pin",
+            "invalidinput": "Invalid input",
+            "needtobeexecutable": "__command__ needs to be executable",
+            "mustbeexecutable": "nrgpio must to be executable",
+            "commandnotfound": "nrgpio command not found",
+            "commandnotexecutable": "nrgpio command not executable",
+            "error": "error: __error__",
+            "pythoncommandnotfound": "nrpgio python command not running"
+        }
+    },
+    "tail": {
+        "label": {
+            "filename": "Filename",
+            "splitlines": "Split lines on \\n?"
+        },
+        "errors": {
+            "windowsnotsupport": "Not currently supported on Windows."
+        }
+    },
+    "file": {
+        "label": {
+            "filename": "Filename",
+            "action": "Action",
+            "addnewline": "Add newline (\\n) to each payload?",
+            "createdir": "Create directory if it doesn't exist?",
+            "outputas": "Output as",
+            "filelabel": "file",
+            "deletelabel": "delete __file__"
+        },
+        "action": {
+            "append": "append to file",
+            "overwrite": "overwrite file",
+            "delete": "delete file"
+        },
+        "output": {
+            "utf8": "a utf8 string",
+            "buffer": "a Buffer"
+        },
+        "status": {
+            "wrotefile": "wrote to file: __file__",
+            "deletedfile": "deleted file: __file__",
+            "appendedfile": "appended to file: __file__"
+        },
+        "errors": {
+            "nofilename": "No filename specified",
+            "invaliddelete": "Warning: Invalid delete. Please use specific delete option in config dialog.",
+            "deletefail": "failed to delete file: __error__",
+            "writefail": "failed to write to file: __error__",
+            "appendfail": "failed to append to file: __error__",
+            "createfail": "failed to create file: __error__"
+        }
+    }
+}
diff -ruN node-red-src/nodes/core/locales/ja/messages.json node-red-src_ttb/nodes/core/locales/ja/messages.json
--- node-red-src/nodes/core/locales/ja/messages.json	2017-09-27 10:53:14.718980662 +0000
+++ node-red-src_ttb/nodes/core/locales/ja/messages.json	2017-09-26 15:24:27.877684600 +0000
@@ -90,7 +90,7 @@
             "node": "ノード",
             "type": "型",
             "selectAll": "全て選択",
-            "sortByLabel": "ノード名で並べ替え",
+            "sortByLabel": "ノード名で並び替え",
             "sortByType": "型で並べ替え"
         },
         "scope": {
@@ -114,10 +114,7 @@
             "name": "デバッグメッセージ",
             "filterAll": "全てのフロー",
             "filterSelected": "選択したノード",
-            "filterCurrent": "現在のフロー",
-            "debugNodes": "debugノード",
-            "clearLog": "ログを削除",
-            "openWindow": "新しいウィンドウで開く"
+            "filterCurrent": "現在のフロー"
         },
         "messageMenu": {
             "collapseAll": "全パスを折りたたむ",
@@ -130,11 +127,7 @@
         "linkIn": "link in",
         "linkOut": "link out",
         "label": {
-            "event": "イベント名",
-            "node": "名前",
-            "type": "フロー",
-            "sortByFlow": "フロー名で並べ替え",
-            "sortByLabel": "名前で並べ替え"
+            "event": "イベント名"
         }
     },
     "tls": {
@@ -162,8 +155,7 @@
             "append": "引数",
             "timeout": "タイムアウト",
             "timeoutplace": "任意",
-            "return": "出力",
-            "seconds": "秒"
+            "return": "出力"
         },
         "placeholder": {
             "extraparams": "追加引数"
@@ -172,7 +164,7 @@
             "exec": "コマンド終了時 - execモード",
             "spawn": "コマンド実行中 - spawnモード"
         },
-        "oldrc": "旧型式の出力を使用(互換モード)"
+        "oldrc": "旧型式の出力を使用(互換性モード)"
     },
     "function": {
         "label": {
@@ -194,8 +186,7 @@
             "output": "出力形式",
             "mustache": "Mustacheテンプレート",
             "plain": "平文",
-            "json": "JSON",
-            "none": "なし"
+            "json": "JSON"
         },
         "templatevalue": "This is the payload: {{payload}} !"
     },
@@ -221,7 +212,6 @@
         "days": "日",
         "day": "日",
         "between": "頻度",
-        "and": "回／",
         "rate": "流量",
         "msgper": "メッセージ／",
         "dropmsg": "仲介メッセージを削除",
@@ -303,7 +293,6 @@
     "mqtt": {
         "label": {
             "broker": "サーバ",
-            "example": "例) localhost",
             "qos": "QoS",
             "clientid": "クライアント",
             "port": "ポート",
@@ -350,8 +339,7 @@
             "return": "出力形式",
             "upload": "ファイルのアップロード",
             "status": "状態コード",
-            "headers": "ヘッダ",
-            "other": "その他"
+            "headers": "ヘッダ"
         },
         "setby": "- msg.methodに定義 -",
         "basicauth": "ベーシック認証を使用",
@@ -392,7 +380,7 @@
         "tip": {
             "path1": "標準では <code>payload</code> がwebsocketから送信、受信されるデータを持ちます。クライアントはJSON形式の文字列としてメッセージ全体を送信、受信するよう設定できます。",
             "path2": "This path will be relative to ",
-            "url1": "URLには ws:&#47;&#47; または wss:&#47;&#47; スキーマを使用して、存在するwebsocketリスナを設定してください。",
+            "url1": "URLには ws:&#47;&#47; or wss:&#47;&#47; スキーマを使用して、存在するwebsocketリスナを設定してください。",
             "url2": "標準では <code>payload</code> がwebsocketから送信、受信されるデータを持ちます。クライアントはJSON形式の文字列としてメッセージ全体を送信、受信するよう設定できます。"
         },
         "errors": {
@@ -422,9 +410,7 @@
             "close-connection": "メッセージを送信するたびに接続を切断",
             "decode-base64": "Base64メッセージの復号",
             "server": "サーバ",
-            "return": "戻り値",
-            "ms": "ミリ秒",
-            "chars": "文字"
+            "return": "戻り値"
         },
         "type": {
             "listen": "待ち受け",
@@ -774,7 +760,6 @@
             "breakchunks": "チャンクへ分割",
             "breaklines": "行へ分割",
             "filelabel": "file",
-            "sendError": "エラーメッセージを送信(互換モード)",
             "deletelabel": "delete __file__"
         },
         "action": {
diff -ruN node-red-src/nodes/core/logic/10-switch.html node-red-src_ttb/nodes/core/logic/10-switch.html
--- node-red-src/nodes/core/logic/10-switch.html	2017-09-27 10:53:14.718980662 +0000
+++ node-red-src_ttb/nodes/core/logic/10-switch.html	2017-09-26 15:24:30.130390100 +0000
@@ -199,7 +199,6 @@
                         } else if (type === "btwn") {
                             row2.hide();
                             row3.show();
-                            btwnValue2Field.typedInput('show');
                         } else {
                             row2.hide();
                             row3.hide();
diff -ruN node-red-src/nodes/core/logic/17-split.js node-red-src_ttb/nodes/core/logic/17-split.js
--- node-red-src/nodes/core/logic/17-split.js	2017-09-27 10:53:14.718980662 +0000
+++ node-red-src_ttb/nodes/core/logic/17-split.js	2017-09-26 15:24:30.228619100 +0000
@@ -457,7 +457,7 @@
                 group.msg = msg;
                 var tcnt = group.targetCount;
                 if (msg.hasOwnProperty("parts")) { tcnt = group.targetCount || msg.parts.count; }
-               if ((tcnt > 0 && group.currentCount >= tcnt) || msg.hasOwnProperty('complete')) {
+                if ((tcnt > 0 && group.currentCount >= tcnt) || msg.hasOwnProperty('complete')) {
                     completeSend(partId);
                 }
             } catch(err) {
diff -ruN node-red-src/nodes/core/storage/50-file.html node-red-src_ttb/nodes/core/storage/50-file.html
--- node-red-src/nodes/core/storage/50-file.html	2017-09-27 10:53:14.718980662 +0000
+++ node-red-src_ttb/nodes/core/storage/50-file.html	2017-09-26 15:24:28.053707700 +0000
@@ -141,7 +141,6 @@
             });
         }
     });
-
     RED.nodes.registerType('file in',{
         category: 'storage-input',
         defaults: {
@@ -180,4 +179,4 @@
             });
         }
     });
-</script>
+</script>
\ No newline at end of file
diff -ruN node-red-src/npm_i_from_git.js node-red-src_ttb/npm_i_from_git.js
--- node-red-src/npm_i_from_git.js	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/npm_i_from_git.js	2017-09-27 10:46:19.825034206 +0000
@@ -0,0 +1,112 @@
+const { exec } = require('child_process');
+
+const args = require('minimist')(process.argv.slice(2));
+
+const gitRepo      = args["r"] || null;
+const gitBranch    = args["b"] || null;
+const gitSubModule = args["s"] || null;
+const gitCheckout  = args["c"] || "";
+
+if (!gitRepo){
+    console.error("use : node npm_i_from_git.js -r gitRepo [-b gitBranch] [-s subModule] [-c gitCheckout]");
+    return;
+}
+
+var branch = "";
+if (gitBranch && gitBranch !== "master"){
+    branch = "-b " + gitBranch + " ";
+}
+
+const cmd_mkdirTmp    = "mkdir -p node_modules/tmp";
+const cmd_gitInit     = "cd node_modules/tmp; git init";
+const cmd_gitRemote   = "cd node_modules/tmp; git remote add -f origin " + gitRepo;
+const cmd_gitConfig   = "cd node_modules/tmp; git config core.sparseCheckout true";
+const cmd_echoSparse  = "echo \"" + gitSubModule + "\" >> node_modules/tmp/.git/info/sparse-checkout";
+const cmd_gitPull     = "cd node_modules/tmp; git pull origin master";
+const cmd_gitCheckout = "cd node_modules/tmp; git checkout " + branch + gitCheckout;
+const cmd_npmInstall  = "cd node_modules; npm i ./tmp/" + ((gitSubModule)?(gitSubModule+"/"):"") + " --unsafe-perm";
+const cmd_rmTmp       = "rm node_modules/tmp -r";
+
+function run_rmTmp(err, stdout, stderr) {
+    if (err) {
+        console.error(err);
+        return;
+    }
+}
+
+function run_npmInstall(err, stdout, stderr) {
+    if (err) {
+        console.error(err);
+        return;
+    }
+    console.log(stdout)
+    exec(cmd_rmTmp,run_rmTmp);
+}
+
+function run_gitCheckout(err, stdout, stderr) {
+    if (err) {
+        console.error(err);
+        return;
+    }
+    exec(cmd_npmInstall,run_npmInstall);
+}
+
+function run_gitPull(err, stdout, stderr) {
+    if (err) {
+        console.error(err);
+        return;
+    }
+    if(!branch && !gitCheckout){
+        exec(cmd_npmInstall,run_npmInstall);
+    } else {
+        exec(cmd_gitCheckout,run_gitCheckout);
+    }
+}
+
+function run_echoSparse(err, stdout, stderr) {
+    if (err) {
+        console.error(err);
+        return;
+    }
+    exec(cmd_gitPull,run_gitPull);
+}
+
+function run_gitConfig(err, stdout, stderr) {
+    if (err) {
+        console.error(err);
+        return;
+    }
+    exec(cmd_echoSparse,run_echoSparse);
+}
+
+function run_gitRemote(err, stdout, stderr) {
+    if (err) {
+        console.error(err);
+        return;
+    }
+    if(gitSubModule){
+        exec(cmd_gitConfig,run_gitConfig);
+    } else if(!branch && !gitCheckout){
+        exec(cmd_npmInstall,run_npmInstall);
+    } else {
+        exec(cmd_gitCheckout,run_gitCheckout);
+    }
+}
+
+function run_gitInit(err, stdout, stderr) {
+    if (err) {
+        console.error(err);
+        return;
+    }
+    exec(cmd_gitRemote,run_gitRemote);
+}
+
+function run_mkdirTmp(err, stdout, stderr) {
+    if (err) {
+        console.error(err);
+        return;
+    }
+    exec(cmd_gitInit,run_gitInit);
+}
+
+exec(cmd_mkdirTmp, run_mkdirTmp);
\ No newline at end of file
diff -ruN node-red-src/otherSystemFlow/Mongo/flows.json node-red-src_ttb/otherSystemFlow/Mongo/flows.json
--- node-red-src/otherSystemFlow/Mongo/flows.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/otherSystemFlow/Mongo/flows.json	2017-09-11 12:45:31.017639200 +0000
@@ -0,0 +1,151 @@
+[
+    {
+        "type": "tab",
+        "id": "mongodb",
+        "label": "ttb-MongoDB",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json"
+    },
+    {
+        "id": "MONGODB2.Localhost",
+        "type": "mongodb2",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "z": "",
+        "uri": "mongodb://127.0.0.1:27017/nodered",
+        "name": "",
+        "options": "",
+        "parallelism": "-1"
+    },    
+    {
+        "id": "MONGODB.Localhost",
+        "type": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "z": "",
+        "hostname": "127.0.0.1",
+        "port": "27017",
+        "db": "nodered",
+        "name": ""
+    },
+    {
+        "id": "6974d483.0c523c",
+        "type": "go",
+        "z": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "name": "",
+        "x": 90,
+        "y": 90,
+        "wires": [
+            [
+                "b38b878d.ab4148"
+            ]
+        ]
+    },
+    {
+        "id": "b38b878d.ab4148",
+        "type": "function",
+        "z": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "name": "",
+        "func": "msg.collection = \"_default\";\nmsg.payload = {\"name\": \"John\"};\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 210,
+        "y": 90,
+        "wires": [
+            [
+                "93739587.c54e28"
+            ]
+        ]
+    },
+    {
+        "id": "93739587.c54e28",
+        "type": "mongodb in",
+        "z": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "mongodb": "MONGODB.Localhost",
+        "name": "",
+        "collection": "",
+        "operation": "find",
+        "x": 390,
+        "y": 90,
+        "wires": [
+            [
+                "ca988e03.d1efc"
+            ]
+        ]
+    },
+    {
+        "id": "ca988e03.d1efc",
+        "type": "debug",
+        "z": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 650,
+        "y": 90,
+        "wires": []
+    },
+    {
+        "id": "f6238b22.817848",
+        "type": "go",
+        "z": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "name": "",
+        "x": 90,
+        "y": 180,
+        "wires": [
+            [
+                "f3e4cf2.d1e623"
+            ]
+        ]
+    },
+    {
+        "id": "f3e4cf2.d1e623",
+        "type": "function",
+        "z": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "name": "",
+        "func": "msg.collection = \"_default\";\nmsg.operation = \"find.toArray\";\nmsg.payload = [{\"name\":\"John\"}];\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 210,
+        "y": 180,
+        "wires": [
+            [
+                "17fc1fce.fdfbe"
+            ]
+        ]
+    },
+    {
+        "id": "17fc1fce.fdfbe",
+        "type": "mongodb2 in",
+        "z": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "service": "_ext_",
+        "configNode": "MONGODB2.Localhost",
+        "name": "",
+        "collection": "",
+        "operation": "",
+        "x": 390,
+        "y": 180,
+        "wires": [
+            [
+                "5d5bb92e.458f18"
+            ]
+        ]
+    },
+    {
+        "id": "5d5bb92e.458f18",
+        "type": "debug",
+        "z": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/Mongo/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 650,
+        "y": 180,
+        "wires": []
+    }
+]
\ No newline at end of file
diff -ruN node-red-src/otherSystemFlow/MySQL/flows.json node-red-src_ttb/otherSystemFlow/MySQL/flows.json
--- node-red-src/otherSystemFlow/MySQL/flows.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/otherSystemFlow/MySQL/flows.json	2017-09-11 12:45:31.071515700 +0000
@@ -0,0 +1,77 @@
+[
+    {
+        "type": "tab",
+        "id": "mysql",
+        "label": "ttb-mysql",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/MySQL/flows.json"
+    },
+	{		
+        "id": "MYSQL.Localhost",
+        "type": "MySQLdatabase",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/MySQL/flows.json",
+        "z": "",
+        "host": "127.0.0.1",
+        "port": "3306",
+        "db": "nodered",
+        "tz": ""
+    },
+    {
+        "id": "96ed168c.ab8d98",
+        "type": "go",
+        "z": "mysql",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/MySQL/flows.json",
+        "name": "",
+        "x": 90,
+        "y": 90,
+        "wires": [
+            [
+                "85c694d8.34bc88"
+            ]
+        ]
+    },
+    {
+        "id": "85c694d8.34bc88",
+        "type": "function",
+        "z": "mysql",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/MySQL/flows.json",
+        "name": "",
+        "func": "msg.topic = 'select * from KEY_VAL where K=?'\nmsg.payload = [\"John\"]\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 210,
+        "y": 90,
+        "wires": [
+            [
+                "647bab05.791094"
+            ]
+        ]
+    },
+    {
+        "id": "647bab05.791094",
+        "type": "mysql",
+        "z": "mysql",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/MySQL/flows.json",
+        "mydb": "MYSQL.Localhost",
+        "name": "",
+        "x": 340,
+        "y": 90,
+        "wires": [
+            [
+                "9753d317.a21b6"
+            ]
+        ]
+    },
+    {
+        "id": "9753d317.a21b6",
+        "type": "debug",
+        "z": "mysql",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/MySQL/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 510,
+        "y": 90,
+        "wires": []
+    }
+]
\ No newline at end of file
diff -ruN node-red-src/otherSystemFlow/NFCManager/flows.json node-red-src_ttb/otherSystemFlow/NFCManager/flows.json
--- node-red-src/otherSystemFlow/NFCManager/flows.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/otherSystemFlow/NFCManager/flows.json	2017-09-11 12:45:31.036796200 +0000
@@ -0,0 +1,241 @@
+[
+    {
+        "id": "NFCManager",
+        "type": "tab",
+        "label": "ttb-NFC Manager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json"
+    },
+    {
+        "id": "79895c3b.8676a4",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "func": "if(!msg.payload){\n    return null;\n}\n\nmsg.tagid = msg.payload ;\nmsg.url = \"http://api.timesquair.io/api/theregister/get?var=\"+msg.tagid;\nmsg.payload = \"http://api.timesquair.io 2>&1\"\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 290,
+        "y": 100,
+        "wires": [
+            [
+                "f8769492.d71128"
+            ]
+        ]
+    },
+    {
+        "id": "f8769492.d71128",
+        "type": "exec",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "command": "curl --head ",
+        "addpay": true,
+        "append": "",
+        "useSpawn": "",
+        "timer": "",
+        "name": "curl -H",
+        "x": 410,
+        "y": 100,
+        "wires": [
+            [
+                "af94a544.03ac48"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "af94a544.03ac48",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "extract infos",
+        "func": "var error = \"Could not resolve host\"\ntry {\n    msg.payload = msg.payload.replace(/\\n/g,\" \").replace(/\\r/g,\" \").trim();\n} catch(e) {\n    msg.payload = error;\n}\nif (msg.payload.indexOf(error) == -1){\n    return [null, msg]\n}\nelse {\n    return [msg, null]\n}",
+        "outputs": "2",
+        "noerr": 0,
+        "x": 550,
+        "y": 100,
+        "wires": [
+            [
+                "7697d3a0.89682c"
+            ],
+            [
+                "6fa14aff.905eb4"
+            ]
+        ]
+    },
+    {
+        "id": "7697d3a0.89682c",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "func": "msg.topic =  \"smartcard/msgread/\" + msg.tagid;\nmsg.payload = msg.tagid;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1030,
+        "y": 100,
+        "wires": [
+            [
+                "7b2d3871.84d2c8",
+                "84173951.7be8c8"
+            ]
+        ]
+    },
+    {
+        "id": "6fa14aff.905eb4",
+        "type": "http request",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "method": "GET",
+        "ret": "txt",
+        "url": "",
+        "x": 730,
+        "y": 140,
+        "wires": [
+            [
+                "1692eb48.e96d15"
+            ]
+        ]
+    },
+    {
+        "id": "1692eb48.e96d15",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "func": "if (msg.payload == \"\"){\n    return [msg , null];\n}\nreturn [null, msg];",
+        "outputs": "2",
+        "noerr": 0,
+        "x": 890,
+        "y": 140,
+        "wires": [
+            [
+                "7697d3a0.89682c"
+            ],
+            [
+                "f3fbab33.0c0458",
+                "aa160757.55e9f8"
+            ]
+        ]
+    },
+    {
+        "id": "7b2d3871.84d2c8",
+        "type": "mqtt out",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "topic": "",
+        "qos": "0",
+        "retain": "",
+        "broker": "MQTT.Localhost",
+        "x": 1170,
+        "y": 40,
+        "wires": []
+    },
+    {
+        "id": "84173951.7be8c8",
+        "type": "template",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "field": "payload",
+        "fieldType": "msg",
+        "format": "handlebars",
+        "syntax": "mustache",
+        "template": "{\n    \"id\": \"{{tagid}}\",\n    \"type\": \"mqtt in\",\n    \"name\": \"NFC {{tagid}}\",\n    \"topic\": \"smartcard/msgread/{{tagid}}\",\n    \"broker\": \"MQTT.Localhost\"\n}",
+        "x": 1170,
+        "y": 100,
+        "wires": [
+            [
+                "4f0172cc.b0fe8c"
+            ]
+        ]
+    },
+    {
+        "id": "f3fbab33.0c0458",
+        "type": "mqtt out",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "topic": "tagreader/message",
+        "qos": "0",
+        "retain": "",
+        "broker": "MQTT.Localhost",
+        "x": 1080,
+        "y": 180,
+        "wires": []
+    },
+    {
+        "id": "aa160757.55e9f8",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "func": "msg.payload = \"Message send on topic 'tagreader/message'\";\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1030,
+        "y": 140,
+        "wires": [
+            [
+                "562b72f7.a9d48c"
+            ]
+        ]
+    },
+    {
+        "id": "4f0172cc.b0fe8c",
+        "type": "json",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "x": 1290,
+        "y": 100,
+        "wires": [
+            [
+                "5cc5f601.a33a08"
+            ]
+        ]
+    },
+    {
+        "id": "562b72f7.a9d48c",
+        "type": "debug",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 1190,
+        "y": 140,
+        "wires": []
+    },
+    {
+        "id": "5cc5f601.a33a08",
+        "type": "nodefactory",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "x": 1440,
+        "y": 100,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "ef1dd462.a71078",
+        "type": "mqtt in",
+        "z": "NFCManager",
+        "name": "",
+        "topic": "host/event/in/nfc",
+        "qos": "0",
+        "broker": "MQTT.Localhost",
+        "x": 140,
+        "y": 100,
+        "wires": [
+            [
+                "79895c3b.8676a4"
+            ]
+        ]
+    }
+]
\ No newline at end of file
diff -ruN node-red-src/otherSystemFlow/NFCManager/flows.json.backup node-red-src_ttb/otherSystemFlow/NFCManager/flows.json.backup
--- node-red-src/otherSystemFlow/NFCManager/flows.json.backup	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/otherSystemFlow/NFCManager/flows.json.backup	2017-09-11 12:45:31.038798300 +0000
@@ -0,0 +1,256 @@
+[
+    {
+        "id": "NFCManager",
+        "type": "tab",
+        "label": "ttb-NFC Manager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json"
+    },
+    {
+        "id": "d062b72a.2f9d48",
+        "type": "scReader in",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "vendor": "7511",
+        "deviceID": "44040",
+        "x": 120,
+        "y": 80,
+        "wires": [
+            [
+                "79895c3b.8676a4"
+            ]
+        ]
+    },
+    {
+        "id": "1b3b47e1.fe63e8",
+        "type": "nfc",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "idonly": true,
+        "x": 170,
+        "y": 120,
+        "wires": [
+            [
+                "79895c3b.8676a4"
+            ]
+        ]
+    },
+    {
+        "id": "79895c3b.8676a4",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "func": "if(!msg.payload){\n    return null;\n}\n\nmsg.tagid = msg.payload ;\nmsg.url = \"http://api.timesquair.io/api/theregister/get?var=\"+msg.tagid;\nmsg.payload = \"http://api.timesquair.io 2>&1\"\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 290,
+        "y": 100,
+        "wires": [
+            [
+                "f8769492.d71128"
+            ]
+        ]
+    },
+    {
+        "id": "f8769492.d71128",
+        "type": "exec",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "command": "curl --head ",
+        "addpay": true,
+        "append": "",
+        "useSpawn": "",
+        "timer": "",
+        "name": "curl -H",
+        "x": 410,
+        "y": 100,
+        "wires": [
+            [
+                "af94a544.03ac48"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "af94a544.03ac48",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "extract infos",
+        "func": "var error = \"Could not resolve host\"\ntry {\n    msg.payload = msg.payload.replace(/\\n/g,\" \").replace(/\\r/g,\" \").trim();\n} catch(e) {\n    msg.payload = error;\n}\nif (msg.payload.indexOf(error) == -1){\n    return [null, msg]\n}\nelse {\n    return [msg, null]\n}",
+        "outputs": "2",
+        "noerr": 0,
+        "x": 550,
+        "y": 100,
+        "wires": [
+            [
+                "7697d3a0.89682c"
+            ],
+            [
+                "6fa14aff.905eb4"
+            ]
+        ]
+    },
+    {
+        "id": "7697d3a0.89682c",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "func": "msg.topic =  \"smartcard/msgread/\" + msg.tagid;\nmsg.payload = msg.tagid;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1030,
+        "y": 100,
+        "wires": [
+            [
+                "7b2d3871.84d2c8",
+                "84173951.7be8c8"
+            ]
+        ]
+    },
+    {
+        "id": "6fa14aff.905eb4",
+        "type": "http request",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "method": "GET",
+        "ret": "txt",
+        "url": "",
+        "x": 730,
+        "y": 140,
+        "wires": [
+            [
+                "1692eb48.e96d15"
+            ]
+        ]
+    },
+    {
+        "id": "1692eb48.e96d15",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "func": "if (msg.payload == \"\"){\n    return [msg , null];\n}\nreturn [null, msg];",
+        "outputs": "2",
+        "noerr": 0,
+        "x": 890,
+        "y": 140,
+        "wires": [
+            [
+                "7697d3a0.89682c"
+            ],
+            [
+                "f3fbab33.0c0458",
+                "aa160757.55e9f8"
+            ]
+        ]
+    },
+    {
+        "id": "7b2d3871.84d2c8",
+        "type": "mqtt out",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "topic": "",
+        "qos": "0",
+        "retain": "",
+        "broker": "MQTT.Localhost",
+        "x": 1170,
+        "y": 40,
+        "wires": []
+    },
+    {
+        "id": "84173951.7be8c8",
+        "type": "template",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "field": "payload",
+        "fieldType": "msg",
+        "format": "handlebars",
+        "syntax": "mustache",
+        "template": "{\n    \"id\": \"{{tagid}}\",\n    \"type\": \"mqtt in\",\n    \"name\": \"NFC {{tagid}}\",\n    \"topic\": \"smartcard/msgread/{{tagid}}\",\n    \"broker\": \"MQTT.Localhost\"\n}",
+        "x": 1170,
+        "y": 100,
+        "wires": [
+            [
+                "4f0172cc.b0fe8c"
+            ]
+        ]
+    },
+    {
+        "id": "f3fbab33.0c0458",
+        "type": "mqtt out",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "topic": "tagreader/message",
+        "qos": "0",
+        "retain": "",
+        "broker": "MQTT.Localhost",
+        "x": 1080,
+        "y": 180,
+        "wires": []
+    },
+    {
+        "id": "aa160757.55e9f8",
+        "type": "function",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "func": "msg.payload = \"Message send on topic 'tagreader/message'\";\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1030,
+        "y": 140,
+        "wires": [
+            [
+                "562b72f7.a9d48c"
+            ]
+        ]
+    },
+    {
+        "id": "4f0172cc.b0fe8c",
+        "type": "json",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "x": 1290,
+        "y": 100,
+        "wires": [
+            [
+                "5cc5f601.a33a08"
+            ]
+        ]
+    },
+    {
+        "id": "562b72f7.a9d48c",
+        "type": "debug",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 1190,
+        "y": 140,
+        "wires": []
+    },
+    {
+        "id": "5cc5f601.a33a08",
+        "type": "nodefactory",
+        "z": "NFCManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/NFCManager/flows.json",
+        "name": "",
+        "x": 1440,
+        "y": 100,
+        "wires": [
+            []
+        ]
+    }
+]
\ No newline at end of file
diff -ruN node-red-src/otherSystemFlow/SoundManager/flows.json node-red-src_ttb/otherSystemFlow/SoundManager/flows.json
--- node-red-src/otherSystemFlow/SoundManager/flows.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/otherSystemFlow/SoundManager/flows.json	2017-09-11 12:45:31.056752300 +0000
@@ -0,0 +1,203 @@
+[
+    {
+        "id": "SoundManager",
+        "type": "tab",
+        "label": "ttb-Sound Manager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json"
+    },
+    {
+        "id": "d07022cd.2f8fe",
+        "type": "mqtt out",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "topic": "sound/play",
+        "qos": "",
+        "retain": "",
+        "broker": "MQTT.Localhost",
+        "x": 490,
+        "y": 280,
+        "wires": []
+    },
+    {
+        "id": "49bff320.b6400c",
+        "type": "mqtt in",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "topic": "tts/#",
+        "broker": "MQTT.Localhost",
+        "x": 90,
+        "y": 280,
+        "wires": [
+            [
+                "ab73c34d.548c4"
+            ]
+        ]
+    },
+    {
+        "id": "236acbc1.dc9534",
+        "type": "function",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "TTS",
+        "func": "\n\nvar vocalizer = \"http://mythingbox.io/api/vocalize?\"\n    + \"lang=\"+ msg.lang  \n    + \"&text=\" + encodeURIComponent(JSON.parse(msg.payload).payload) ;\n\n/* Variables:\nlang\nregn\ntext\nspkr\n*/\n\nmsg.payload = JSON.stringify({payload:vocalizer}) ;\nreturn msg;\n",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 350,
+        "y": 280,
+        "wires": [
+            [
+                "d07022cd.2f8fe"
+            ]
+        ]
+    },
+    {
+        "id": "47d6ab4e.b82954",
+        "type": "function",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "func": "msg.payload= JSON.parse(msg.payload).payload;\nreturn msg;\n",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 230,
+        "y": 80,
+        "wires": [
+            [
+                "a78d180d.5872e8"
+            ]
+        ]
+    },
+    {
+        "id": "6bb295ee.944d6c",
+        "type": "mqtt in",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "topic": "sound/play",
+        "broker": "MQTT.Localhost",
+        "x": 100,
+        "y": 80,
+        "wires": [
+            [
+                "47d6ab4e.b82954"
+            ]
+        ]
+    },
+    {
+        "id": "63fbf40.f9c040c",
+        "type": "comment",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "Sound manager",
+        "info": "",
+        "x": 120,
+        "y": 40,
+        "wires": []
+    },
+    {
+        "id": "6b3c5d3.f94c3a4",
+        "type": "comment",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "TTS manager",
+        "info": "",
+        "x": 110,
+        "y": 240,
+        "wires": []
+    },
+    {
+        "id": "d4a23f6d.2b5dc",
+        "type": "mqtt in",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "topic": "sound/stop",
+        "broker": "MQTT.Localhost",
+        "x": 100,
+        "y": 160,
+        "wires": [
+            [
+                "bbb57fa3.444a8"
+            ]
+        ]
+    },
+    {
+        "id": "ab73c34d.548c4",
+        "type": "function",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "set lang",
+        "func": "var langKnown = [], langWanted = msg.topic.split(\"/\")[1];\nlangKnown.push(\"fr\");\nlangKnown.push(\"en\");\n\nif(langKnown.indexOf(langWanted) != -1){\n    msg.lang = langWanted;\n    return msg;\n}\nreturn null;",
+        "outputs": 1,
+        "x": 220,
+        "y": 280,
+        "wires": [
+            [
+                "236acbc1.dc9534"
+            ]
+        ]
+    },
+    {
+        "id": "57e98e5c.a8167",
+        "type": "queueuser",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "msgaction": "cons",
+        "element": "",
+        "msgtype": "",
+        "over": "",
+        "ttl": "",
+        "callbackTopic": "sound/play",
+        "broker": "MQTT.Localhost",
+        "topic": "Topic.Sound",
+        "x": 750,
+        "y": 120,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "ab4991e7.54b67",
+        "type": "sound",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "sound": "",
+        "x": 550,
+        "y": 120,
+        "wires": [
+            [],
+            [
+                "57e98e5c.a8167"
+            ]
+        ]
+    },
+    {
+        "id": "a78d180d.5872e8",
+        "type": "Open",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "x": 380,
+        "y": 80,
+        "wires": [
+            [
+                "ab4991e7.54b67"
+            ]
+        ]
+    },
+    {
+        "id": "bbb57fa3.444a8",
+        "type": "Close",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "x": 380,
+        "y": 160,
+        "wires": [
+            [
+                "ab4991e7.54b67"
+            ]
+        ]
+    }
+]
\ No newline at end of file
diff -ruN node-red-src/otherSystemFlow/SoundManager/flows.json.backup node-red-src_ttb/otherSystemFlow/SoundManager/flows.json.backup
--- node-red-src/otherSystemFlow/SoundManager/flows.json.backup	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/otherSystemFlow/SoundManager/flows.json.backup	2017-09-11 12:45:31.058739900 +0000
@@ -0,0 +1,203 @@
+[
+    {
+        "id": "SoundManager",
+        "type": "tab",
+        "label": "ttb-Sound Manager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json"
+    },
+    {
+        "id": "d07022cd.2f8fe",
+        "type": "mqtt out",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "topic": "sound/play",
+        "qos": "",
+        "retain": "",
+        "broker": "MQTT.Localhost",
+        "x": 490,
+        "y": 280,
+        "wires": []
+    },
+    {
+        "id": "49bff320.b6400c",
+        "type": "mqtt in",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "topic": "tts/#",
+        "broker": "MQTT.Localhost",
+        "x": 90,
+        "y": 280,
+        "wires": [
+            [
+                "ab73c34d.548c4"
+            ]
+        ]
+    },
+    {
+        "id": "236acbc1.dc9534",
+        "type": "function",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "TTS",
+        "func": "\n\nvar vocalizer = \"http://mythingbox.io/api/vocalize?\"\n    + \"lang=\"+ msg.lang  \n    + \"&text=\" + encodeURIComponent(JSON.parse(msg.payload).payload) ;\n\n/* Variables:\nlang\nregn\ntext\nspkr\n*/\n\nmsg.payload = JSON.stringify({payload:vocalizer}) ;\nreturn msg;\n",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 350,
+        "y": 280,
+        "wires": [
+            [
+                "d07022cd.2f8fe"
+            ]
+        ]
+    },
+    {
+        "id": "47d6ab4e.b82954",
+        "type": "function",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "func": "msg.payload= JSON.parse(msg.payload).payload;\nreturn msg;\n",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 230,
+        "y": 80,
+        "wires": [
+            [
+                "a78d180d.5872e8"
+            ]
+        ]
+    },
+    {
+        "id": "6bb295ee.944d6c",
+        "type": "mqtt in",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "topic": "sound/play",
+        "broker": "MQTT.Localhost",
+        "x": 100,
+        "y": 80,
+        "wires": [
+            [
+                "47d6ab4e.b82954"
+            ]
+        ]
+    },
+    {
+        "id": "63fbf40.f9c040c",
+        "type": "comment",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "Sound manager",
+        "info": "",
+        "x": 120,
+        "y": 40,
+        "wires": []
+    },
+    {
+        "id": "6b3c5d3.f94c3a4",
+        "type": "comment",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "TTS manager",
+        "info": "",
+        "x": 110,
+        "y": 240,
+        "wires": []
+    },
+    {
+        "id": "d4a23f6d.2b5dc",
+        "type": "mqtt in",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "topic": "sound/stop",
+        "broker": "MQTT.Localhost",
+        "x": 100,
+        "y": 160,
+        "wires": [
+            [
+                "bbb57fa3.444a8"
+            ]
+        ]
+    },
+    {
+        "id": "ab73c34d.548c4",
+        "type": "function",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "set lang",
+        "func": "var langKnown = [], langWanted = msg.topic.split(\"/\")[1];\nlangKnown.push(\"fr\");\nlangKnown.push(\"en\");\n\nif(langKnown.indexOf(langWanted) != -1){\n    msg.lang = langWanted;\n    return msg;\n}\nreturn null;",
+        "outputs": 1,
+        "x": 220,
+        "y": 280,
+        "wires": [
+            [
+                "236acbc1.dc9534"
+            ]
+        ]
+    },
+    {
+        "id": "57e98e5c.a8167",
+        "type": "queueuser",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "msgaction": "cons",
+        "element": "",
+        "msgtype": "",
+        "over": "",
+        "ttl": "",
+        "callbackTopic": "sound/play",
+        "broker": "MQTT.Localhost",
+        "topic": "Topic.Sound",
+        "x": 750,
+        "y": 120,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "ab4991e7.54b67",
+        "type": "sound",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "name": "",
+        "sound": "",
+        "x": 550,
+        "y": 120,
+        "wires": [
+            [],
+            [
+                "57e98e5c.a8167"
+            ]
+        ]
+    },
+    {
+        "id": "a78d180d.5872e8",
+        "type": "Open",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "x": 380,
+        "y": 80,
+        "wires": [
+            [
+                "ab4991e7.54b67"
+            ]
+        ]
+    },
+    {
+        "id": "bbb57fa3.444a8",
+        "type": "Close",
+        "z": "SoundManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/SoundManager/flows.json",
+        "x": 380,
+        "y": 160,
+        "wires": [
+            [
+                "ab4991e7.54b67"
+            ]
+        ]
+    }
+]
\ No newline at end of file
diff -ruN node-red-src/otherSystemFlow/TaskManager/flows.json node-red-src_ttb/otherSystemFlow/TaskManager/flows.json
--- node-red-src/otherSystemFlow/TaskManager/flows.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/otherSystemFlow/TaskManager/flows.json	2017-09-11 12:45:31.102397300 +0000
@@ -0,0 +1,657 @@
+[
+    {
+        "id": "TaskManager",
+        "type": "tab",
+        "label": "ttb-Task Manager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json"
+    },
+    {
+        "id": "d62b434f.29d4c",
+        "type": "inject",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "date",
+        "repeat": "",
+        "crontab": "",
+        "once": true,
+        "x": 100,
+        "y": 80,
+        "wires": []
+    },
+    {
+        "id": "40a7be0.fbf584",
+        "type": "commentdown",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "This button gives the IP address",
+        "info": "",
+        "x": 170,
+        "y": 40,
+        "wires": []
+    },
+    {
+        "id": "b338f4d8.4cc708",
+        "type": "inject",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "none",
+        "repeat": "",
+        "crontab": "",
+        "once": true,
+        "x": 90,
+        "y": 200,
+        "wires": [
+            [
+                "a61524be.59ead8"
+            ]
+        ]
+    },
+    {
+        "id": "532c3278.acd3cc",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "set id as global",
+        "func": "context.global.id = JSON.parse(msg.payload).id;\nmsg.id = JSON.parse(msg.payload).id;\nreturn msg;",
+        "outputs": 1,
+        "x": 540,
+        "y": 200,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "f636bd56.09c94",
+        "type": "commentdown",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "This button sets the timesquair id as global value",
+        "info": "",
+        "x": 220,
+        "y": 140,
+        "wires": []
+    },
+    {
+        "id": "a61524be.59ead8",
+        "type": "exec",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "command": "cat /root/userdir/thethingbox.json",
+        "addpay": true,
+        "append": "",
+        "useSpawn": "",
+        "name": "",
+        "x": 300,
+        "y": 200,
+        "wires": [
+            [
+                "532c3278.acd3cc"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "5ec25cbc.a13da4",
+        "type": "textsize",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "val": "2",
+        "x": 910,
+        "y": 80,
+        "wires": [
+            [
+                "f10dddd6.0ef22"
+            ]
+        ]
+    },
+    {
+        "id": "f10dddd6.0ef22",
+        "type": "speed",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "val": "2",
+        "x": 1060,
+        "y": 80,
+        "wires": [
+            [
+                "4696b895.36b058"
+            ]
+        ]
+    },
+    {
+        "id": "3ba79115.c4586e",
+        "type": "color",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "property": "color",
+        "color": "#ffffff",
+        "name": "",
+        "x": 770,
+        "y": 80,
+        "wires": [
+            [
+                "5ec25cbc.a13da4"
+            ]
+        ]
+    },
+    {
+        "id": "8e13cec0.71ec3",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "func": "msg.message = undefined;\nif(msg.boxip == \"127.0.0.1\"){\n    msg.payload = \"Network not found\";\n} else {\n    msg.payload = \"Connect \" + msg.boxip;\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 650,
+        "y": 80,
+        "wires": [
+            [
+                "3ba79115.c4586e"
+            ]
+        ]
+    },
+    {
+        "id": "1c40f090.e3bf0f",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "display once",
+        "func": "if(typeof(context.global.displayip) === \"undefined\"){\n    msg.displayip = true;\n    context.global.displayip = \"défini\";\n}\nelse{\n    msg.displayip = false;\n}\nreturn msg;",
+        "outputs": 1,
+        "x": 250,
+        "y": 80,
+        "wires": [
+            [
+                "b91ebc51.46e14"
+            ]
+        ]
+    },
+    {
+        "id": "b91ebc51.46e14",
+        "type": "switch",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "property": "displayip",
+        "rules": [
+            {
+                "t": "true"
+            },
+            {
+                "t": "else"
+            }
+        ],
+        "checkall": "true",
+        "outputs": 2,
+        "x": 390,
+        "y": 80,
+        "wires": [
+            [
+                "6e70ffad.918f"
+            ],
+            []
+        ]
+    },
+    {
+        "id": "c6a954ec.3956a8",
+        "type": "mqtt in",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "sequence/#",
+        "broker": "MQTT.Localhost",
+        "x": 110,
+        "y": 440,
+        "wires": [
+            [
+                "c58bff07.3a74"
+            ]
+        ]
+    },
+    {
+        "id": "c58bff07.3a74",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Route message",
+        "func": "var res = msg.topic.split(\"/\");\n\nmsg.queue = res[1] ;\nvar action = res[2] || \"unknow\";\n\nif(context.global.seqQueues==null)\n{\n    // For the actual queues' data\n    context.global.seqQueues = [] ;\n}\n\nswitch (action){\n    case \"add\" :\n        return [ msg, null, null, null, null, null, null, null ];\n    case \"next\" :\n        return [ null, msg, null, null, null, null, null, null ];\n    case \"cons\" :\n        return [ null, null, msg, null, null, null, null, null ];\n    case \"drop\" :\n        return [ null, null, null, msg, null, null, null, null ];\n    case \"clear\" :\n        return [ null, null, null, null, msg, null, null, null ];\n    case \"set\" :\n    case \"dropped\" :\n        return [ null, null, null, null, null, msg, null, null ];\n    case \"dump\" :\n        return [ null, null, null, null, null, null, msg, null ];\n    default :\n        msg.payload = res[0] + \">\" + res[1] + \">\" + res[2] ;\n        return [ null, null, null, null, null, null, null, msg ];\n}\n\n/*\nif(res[2]==\"add\")\n{\n    return [ msg, null, null, null, null, null, null ];\n}\nelse if(res[2]==\"next\")\n{\n    return [ null, msg, null, null, null, null, null ];\n}\nelse if(res[2]==\"drop\")\n{\n    return [ null, null, msg, null, null, null, null ];\n}\nelse if((res[2]==\"set\") || (res[2]==\"dropped\"))\n{   // Self-generated messages\n    return [ null, null, null, msg, null, null, null ];\n}\nelse if(res[2]==\"xxxx\")\n{\n    return [ null, null, null, null, msg, null, null ];\n}\nelse if(res[2]==\"dump\")\n{\n    return [ null, null, null, null, null, msg, null ];\n}\nmsg.payload = res[0] + \">\" + res[1] + \">\" + res[2] ;\nreturn [ null, null, null, null, null, null, msg ];\n*/",
+        "outputs": "8",
+        "noerr": 0,
+        "x": 300,
+        "y": 440,
+        "wires": [
+            [
+                "3dd4ca75.c22b36"
+            ],
+            [
+                "a1e70bad.5e18f8"
+            ],
+            [
+                "b044822e.4fbb8"
+            ],
+            [
+                "cc448c2a.33bb7"
+            ],
+            [
+                "a93efd47.56c1"
+            ],
+            [
+                "1a61b9c6.e59e46"
+            ],
+            [
+                "5a2d5816.a5d2a8"
+            ],
+            [
+                "12072212.edf8de"
+            ]
+        ]
+    },
+    {
+        "id": "1a61b9c6.e59e46",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Ext_Msgs",
+        "func": "var message = JSON.parse(msg.payload);\nif(message.hasOwnProperty(\"callbackTopic\")){\n    if(message.callbackTopic != \"\"){\n        msg.topic = \"sequence/\"+msg.queue+\"/cons\";\n        msg.payload = JSON.stringify({callbackTopic:message.callbackTopic});\n        return msg;\n    }\n}\nreturn null;",
+        "outputs": 1,
+        "x": 580,
+        "y": 500,
+        "wires": [
+            [
+                "758eff61.8a71"
+            ]
+        ]
+    },
+    {
+        "id": "12072212.edf8de",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Error",
+        "func": "msg.verbose = \"Routing Error \" + msg.payload ;\nreturn msg;",
+        "outputs": 1,
+        "x": 570,
+        "y": 580,
+        "wires": [
+            [
+                "85e724b9.7a18d8"
+            ]
+        ]
+    },
+    {
+        "id": "b044822e.4fbb8",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "cons",
+        "func": "var theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\nif(theQueue != null && theQueue.current != null){\n    var callbackMsg = {};\n\n    var msgToSend = msg.payload;\n    if (IsJsonString(msg.payload)){\n        msgToSend = JSON.parse(msg.payload);\n    }\n    \n    var current = theQueue.messages[theQueue.current];\n    \n    callbackMsg.payload = current.payload;\n    callbackMsg.topic = (msgToSend.callbackTopic==null)?\"sequenceCallback/def\":msgToSend.callbackTopic;\n    \n    if (IsJsonString(callbackMsg.payload)){\n        var currentPayload = JSON.parse(callbackMsg.payload);\n        if (currentPayload.hasOwnProperty(\"callbackTopic\")){\n            if(currentPayload.callbackTopic.trim() != \"\"){\n                callbackMsg.topic = currentPayload.callbackTopic.trim();\n            }\n        }\n    }\n    \n    var timeToLive = current.ttl;\n    \n    theQueue.toDrop = theQueue.current;\n    \n    if (timeToLive < 1)\n    {   // infinite ttl\n        return [msg,callbackMsg,null];\n    } else if ( timeToLive == 1)\n    {   // last use of this message\n        msg.verbose = \"ttl is down to 0\";\n        msg.callbackTopic = null;\n        msg.payload = \"\";\n        return [null,callbackMsg,msg];\n    } else \n    {\n        current.ttl--;\n        msg.verbose = \"ttl is down to \" + current.ttl ;\n        return [msg,callbackMsg,null];\n    }\n} else {\n    \n}\n\nfunction IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\nreturn [null,null,null];",
+        "outputs": "3",
+        "x": 570,
+        "y": 360,
+        "wires": [
+            [
+                "a1e70bad.5e18f8"
+            ],
+            [
+                "85e724b9.7a18d8",
+                "758eff61.8a71"
+            ],
+            [
+                "cc448c2a.33bb7"
+            ]
+        ]
+    },
+    {
+        "id": "5a2d5816.a5d2a8",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "dump",
+        "func": "//\nvar theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\nif (theQueue != null){\n    var current = theQueue.messages[theQueue.current];\n    msg.verbose = theQueue.name ;\n    \n    if(current != null)\n    {\n    \tvar i=0;\n    \tdo{\n    \t\tmsg.verbose = msg.verbose + \" >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \" \n    \t\t+ JSON.parse(current.payload).payload \n    \t\t+ \" | ttl : \" + current.ttl \n    \t\t+ \" | type : \" + current.type \n    \t\t+ \" | over : \" + current.over;\n    \t\tif (theQueue.current==current.id){\n    \t\t    msg.verbose = msg.verbose + \" | current\";\n    \t\t}\n    \t\telse {\n    \t\t    msg.verbose = msg.verbose + \" | n°\"+(i+1);\n    \t\t}\n    \t\tif(theQueue.toDrop==current.id){\n    \t\t    msg.verbose = msg.verbose + \" | toDrop\";\n    \t\t}\n    \t\tcurrent = theQueue.messages[current.next];\n    \t} while (i++<30 && current.id != theQueue.current);\n    }\n}\nreturn msg;\n",
+        "outputs": 1,
+        "x": 570,
+        "y": 540,
+        "wires": [
+            [
+                "85e724b9.7a18d8"
+            ]
+        ]
+    },
+    {
+        "id": "3dd4ca75.c22b36",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Add",
+        "func": "// Add a message to the end of the queue\n\n// The payload contains the element's attributes \nmsgAttributes = JSON.parse(msg.payload) ;\n\nvar firstMsg = false ;\n\nvar message = { payload: msgAttributes.payload,\n    type: msgAttributes.type,\n    ttl: msgAttributes.ttl,\n    over: msgAttributes.over,\n    previous: null,\n    next: null,\n    id : msg._msgid\n};\n\nvar theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\n\nif(theQueue==null)\n{\n    msg.verbose = \"Creating new queue.\" ;\n    theQueue = {name: (msg.queue==null)?\"defQueue\":msg.queue,\n        messages: [],\n        current:  null,\n        toDrop:   null\n    };\n    context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue] = theQueue ;\n}\n\nvar insertInFifo = function(){\n    var current = theQueue.messages[theQueue.current];\n    var previous = theQueue.messages[current.previous];\n    message.next     = theQueue.current;\n    message.previous = current.previous;\n    current.previous = message.id ;\n    previous.next = message.id ;\n}\n\nvar insertInLifo = function(){\n    var current = theQueue.messages[theQueue.current];\n    var next = theQueue.messages[current.next];\n    message.next     = current.next;\n    message.previous = theQueue.current;\n    current.next = message.id ;\n    next.previous = message.id ;\n    theQueue.current = message.id;\n}\n\nvar insertWithReplace = function(){\n    for ( var elem in theQueue.messages){\n        if ( theQueue.messages[elem].type == message.type)\n        {\n            var toReplace = theQueue.messages[elem];\n            var previous = theQueue.messages[toReplace.previous];\n            var next = theQueue.messages[toReplace.next];\n            next.previous = message.id;\n            previous.next = message.id;\n            message.next = toReplace.next;\n            message.previous = toReplace.previous;\n            theQueue.messages.splice(elem,1);\n            return;\n        }\n    }\n    insertInFifo();\n}\n\nvar insertAsFirstMsg = function(){\n    theQueue.messages = [];\n    msg.verbose = \"First message.\" ;\n    message.next     = message.id;\n    message.previous = message.id;\n    theQueue.current = message.id ;\n    theQueue.toDrop = message.id;\n    firstMsg = true ;\n}\n\n\nif(theQueue.current==null)\n{   // First message of the queue\n    insertAsFirstMsg();\n}\nelse\n{\n    msg.verbose = \"More than one message.\" ;\n    switch (message.over){\n        case 'replace' :\n            var current = theQueue.messages[theQueue.current];\n            if (current.next != theQueue.current){\n                insertWithReplace();\n            }\n            else{\n                insertAsFirstMsg();\n            }\n            break;\n        case \"addStart\":\n            insertInLifo();\n            \n            break;\n        default :\n            insertInFifo();\n    }\n\t\n}\n\ntheQueue.messages[message.id] = message;\n\nif(firstMsg == true){\n    return msg;\n}\n\nreturn null;",
+        "outputs": "1",
+        "x": 570,
+        "y": 260,
+        "wires": [
+            [
+                "a1e70bad.5e18f8"
+            ]
+        ]
+    },
+    {
+        "id": "a1e70bad.5e18f8",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Next",
+        "func": "var theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\n\nif(theQueue!=null && theQueue.current != null)\n{   // If the queue is not empty\n    var current = theQueue.messages[theQueue.current];\n\ttheQueue.current = current.next ;\n    msg.payload = current.payload ;\n    msg.topic = \"sequence/\" + msg.queue + \"/set\" ;\n    return msg;\n}\nelse\n    msg.verbose = \"Error : Next'ed queue is unknown.\" ;\nreturn null;",
+        "outputs": 1,
+        "x": 570,
+        "y": 300,
+        "wires": [
+            [
+                "758eff61.8a71"
+            ]
+        ]
+    },
+    {
+        "id": "cc448c2a.33bb7",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Drop",
+        "func": "// Delete current message\nvar theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\n//\nif(theQueue.current != null)\n{   // If the queue is not empty\n\n    var receivedMsg = msg.payload;\n    if (IsJsonString(msg.payload)){\n        receivedMsg = JSON.parse(msg.payload);\n    }\n\n    var callbackTopic = (receivedMsg[\"callbackTopic\"]==null)?false:receivedMsg.callbackTopic;\n    \n    msg.payload = (callbackTopic==false)?JSON.stringify({payload:\"\"}):JSON.stringify({callbackTopic:callbackTopic});\n    msg.topic = \"sequence/\" + msg.queue + \"/dropped\" ;\n    \n    \n    var current = theQueue.messages[theQueue.current];\n\tif( current.next == theQueue.current)\n\t{   // This is the last message\n\t\ttheQueue.current  = null ;\n\t\ttheQueue.messages = [] ;\n        msg.verbose=\"Last message to delete.\";\n        return msg;\n\t}\n\telse\n\t{\n\t\tvar message = theQueue.messages[theQueue.toDrop] ; // .current\n\t\tvar next = theQueue.messages[message.next] ;\n\t\tvar previous = theQueue.messages[message.previous] ;\n\t\tnext.previous = previous.id;\n\t\tprevious.next = next.id;\n\t\t\n\t\tif(theQueue.toDrop == theQueue.current){\n\t\t    theQueue.current = next.id ; // .previous\n\t\t}\n\t\ttheQueue.toDrop = theQueue.current;\n        msg.verbose=\"Ordinary message to delete.\";\n        theQueue.messages.splice(message.id,1);\n\t}\n}\nelse\n{\n\tmsg.verbose=\"No message to delete.\";\n    msg.payload = \"\" ;\n    msg.topic = \"sequence/\" + msg.queue + \"/reset\" ;\n}\n\nfunction IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nreturn msg;",
+        "outputs": "1",
+        "x": 570,
+        "y": 420,
+        "wires": [
+            [
+                "758eff61.8a71",
+                "85e724b9.7a18d8"
+            ]
+        ]
+    },
+    {
+        "id": "758eff61.8a71",
+        "type": "mqtt out",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "",
+        "qos": "",
+        "retain": "",
+        "broker": "MQTT.Localhost",
+        "x": 830,
+        "y": 400,
+        "wires": []
+    },
+    {
+        "id": "7cea62fc.83159c",
+        "type": "debug",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "active": false,
+        "console": "false",
+        "complete": "false",
+        "x": 1010,
+        "y": 460,
+        "wires": []
+    },
+    {
+        "id": "c8e3e96b.371c18",
+        "type": "comment",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Queue manager",
+        "info": "==========================================\n\nTo manipulate a sequence, just post MQTT messages into a topic named\nsequence/<queue_ID>/<command> where:\n   <queue_ID> is the name of the sequence\n   <command> is the command to apply to the queue. Possible values are:\n\t\t- \"add\" : to add the complete msg.payload as a JSON bloc into the sequence. The following JSON bloc's attributes have a special meaning:\n\t\t\tXXX.payload = a stringify JSON block containing the original message.\n\t\t\tXXX.type = type of the payload (to avoid, eventually, double messages of a same type). \n\t\t\tXXX.over = to specify the rule to apply to define the position of the message to add, and to define\twhat to do if an element of the same type already exists in this sequence. Possible values are:\n\t\t\t\t- null : don't care. Just add the current message to the end of the current queue.\n\t\t\t\t- \"replace\" : if some elements with the same type are already be added, it will replace the next occurrence by the new element. Else, it will add the new element at the end of the queue\n\t\t\tXXX.ttl  = time to live for the current message. Possible values are:\n\t\t\t\t- 0 or null : the element needs to be explicitely destroyed (or overwritten by another element of the same type).\n\t\t\t\t- <number> : the element will be displayed <number> times prior to be automatically dropped.\n\t\t- \"cons\" : consume he current sequence's element -> Send the current element on the topic given on \"callback Topic\" at the call of \"cons\". Decrement the ttl, drop the element if need and set the next element as the current element. Drop's action will set automatically the next element as current, so cons's action will not set it if it will call drop. If callbackTopic isn't set, the element is sent on sequenceCallback/def by default. Like the next element is set immediately, the element to drop is save.\n\t\t- \"next\" : to set the cursor to the next sequence's element. In this case, a message is generated into the topic \"sequence/<queue_ID>/set\". Its payload is the JSON\tbloc contained in the current element's payload. \n\t\t- \"drop\" : to drop the current message. The sequence's pointer is set to the next element and cons's action is call with callbackTopic\n\t\t- \"set\" : don't call this one. It's called by the sequence manager after a \"next\".\n  \nThe queues are all stored into : context.global.seqQueues\n\n \n==========================================",
+        "x": 120,
+        "y": 400,
+        "wires": []
+    },
+    {
+        "id": "85e724b9.7a18d8",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Verbose",
+        "func": "if(msg.verbose == null)\n{\n    return [null, msg];\n}\nmsg.payload = msg.verbose ;\nreturn [msg, null];",
+        "outputs": "2",
+        "x": 840,
+        "y": 480,
+        "wires": [
+            [],
+            []
+        ]
+    },
+    {
+        "id": "ea86a38d.15796",
+        "type": "mqtt in",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "sequenceCallback/def",
+        "broker": "MQTT.Localhost",
+        "x": 140,
+        "y": 780,
+        "wires": [
+            [
+                "8e6a798c.719588"
+            ]
+        ]
+    },
+    {
+        "id": "8e6a798c.719588",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "func": "msg = JSON.parse(msg.payload);\nmsg.payload = \"You need to define your own topic to callback, the message you get is : \" + msg.payload;\nreturn msg;",
+        "outputs": 1,
+        "x": 310,
+        "y": 780,
+        "wires": [
+            [
+                "6e11f6ae.91ee08"
+            ]
+        ]
+    },
+    {
+        "id": "6e11f6ae.91ee08",
+        "type": "debug",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 450,
+        "y": 780,
+        "wires": []
+    },
+    {
+        "id": "756d914e.8a927",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "func": "msg = JSON.parse(msg.payload); \nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 290,
+        "y": 660,
+        "wires": [
+            [
+                "75449c4d.8abb64"
+            ]
+        ]
+    },
+    {
+        "id": "5cddace6.a32254",
+        "type": "mqtt in",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "LedMatrix/display",
+        "broker": "MQTT.Localhost",
+        "x": 130,
+        "y": 660,
+        "wires": [
+            [
+                "756d914e.8a927"
+            ]
+        ]
+    },
+    {
+        "id": "75449c4d.8abb64",
+        "type": "ledblank",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 420,
+        "y": 660,
+        "wires": [
+            [
+                "31f41e6b.ce0be2"
+            ]
+        ]
+    },
+    {
+        "id": "e320304f.1cdfd",
+        "type": "commentdown",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Display a message on the led matrix",
+        "info": "",
+        "x": 180,
+        "y": 620,
+        "wires": []
+    },
+    {
+        "id": "6f03c51e.90fc3c",
+        "type": "commentdown",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Display element on debug tab when no callbackTopic is given",
+        "info": "",
+        "x": 260,
+        "y": 740,
+        "wires": []
+    },
+    {
+        "id": "a93efd47.56c1",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Clear",
+        "func": "// Delete current message\nvar theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\n//\nif(theQueue != null)\n{   // If the queue is not empty\n    theQueue.messages = [];\n    context.global.seqQueues[theQueue.name] = null;\n\tmsg.verbose=\"Queue was clear\";\n}\nelse\n{\n\tmsg.verbose=\"This queue was already clear\";\n}\n\n\nreturn msg;",
+        "outputs": "1",
+        "x": 570,
+        "y": 460,
+        "wires": [
+            [
+                "85e724b9.7a18d8"
+            ]
+        ]
+    },
+    {
+        "id": "31f41e6b.ce0be2",
+        "type": "ledtext",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 560,
+        "y": 660,
+        "wires": [
+            [
+                "5129b050.aed65"
+            ]
+        ]
+    },
+    {
+        "id": "5129b050.aed65",
+        "type": "ledpicture",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 710,
+        "y": 660,
+        "wires": [
+            [
+                "235c61f8.dca39e"
+            ]
+        ]
+    },
+    {
+        "id": "235c61f8.dca39e",
+        "type": "ledmatrix",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "speed": 50,
+        "time": 500,
+        "name": "",
+        "x": 860,
+        "y": 660,
+        "wires": []
+    },
+    {
+        "id": "6e70ffad.918f",
+        "type": "boxip",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 530,
+        "y": 80,
+        "wires": [
+            [
+                "8e13cec0.71ec3"
+            ],
+            []
+        ]
+    },
+    {
+        "id": "4875ca12.ad0344",
+        "type": "ledmatrix",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "speed": 50,
+        "time": 500,
+        "name": "",
+        "x": 1480,
+        "y": 80,
+        "wires": []
+    },
+    {
+        "id": "a07fe3ca.49026",
+        "type": "ledtext",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 1340,
+        "y": 80,
+        "wires": [
+            [
+                "4875ca12.ad0344"
+            ]
+        ]
+    },
+    {
+        "id": "4696b895.36b058",
+        "type": "ledblank",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 1200,
+        "y": 80,
+        "wires": [
+            [
+                "a07fe3ca.49026"
+            ]
+        ]
+    }
+]
diff -ruN node-red-src/otherSystemFlow/TaskManager/flows.json.backup node-red-src_ttb/otherSystemFlow/TaskManager/flows.json.backup
--- node-red-src/otherSystemFlow/TaskManager/flows.json.backup	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/otherSystemFlow/TaskManager/flows.json.backup	2017-09-11 12:45:31.107410200 +0000
@@ -0,0 +1,661 @@
+[
+    {
+        "id": "TaskManager",
+        "type": "tab",
+        "label": "ttb-Task Manager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json"
+    },
+    {
+        "id": "d62b434f.29d4c",
+        "type": "inject",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "date",
+        "repeat": "",
+        "crontab": "",
+        "once": true,
+        "x": 100,
+        "y": 80,
+        "wires": [
+            [
+                "1c40f090.e3bf0f"
+            ]
+        ]
+    },
+    {
+        "id": "40a7be0.fbf584",
+        "type": "commentdown",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "This button gives the IP address",
+        "info": "",
+        "x": 170,
+        "y": 40,
+        "wires": []
+    },
+    {
+        "id": "b338f4d8.4cc708",
+        "type": "inject",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "none",
+        "repeat": "",
+        "crontab": "",
+        "once": true,
+        "x": 90,
+        "y": 200,
+        "wires": [
+            [
+                "a61524be.59ead8"
+            ]
+        ]
+    },
+    {
+        "id": "532c3278.acd3cc",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "set id as global",
+        "func": "context.global.id = JSON.parse(msg.payload).id;\nmsg.id = JSON.parse(msg.payload).id;\nreturn msg;",
+        "outputs": 1,
+        "x": 540,
+        "y": 200,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "f636bd56.09c94",
+        "type": "commentdown",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "This button sets the timesquair id as global value",
+        "info": "",
+        "x": 220,
+        "y": 140,
+        "wires": []
+    },
+    {
+        "id": "a61524be.59ead8",
+        "type": "exec",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "command": "cat /root/userdir/thethingbox.json",
+        "addpay": true,
+        "append": "",
+        "useSpawn": "",
+        "name": "",
+        "x": 300,
+        "y": 200,
+        "wires": [
+            [
+                "532c3278.acd3cc"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "5ec25cbc.a13da4",
+        "type": "textsize",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "val": "2",
+        "x": 910,
+        "y": 80,
+        "wires": [
+            [
+                "f10dddd6.0ef22"
+            ]
+        ]
+    },
+    {
+        "id": "f10dddd6.0ef22",
+        "type": "speed",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "val": "2",
+        "x": 1060,
+        "y": 80,
+        "wires": [
+            [
+                "4696b895.36b058"
+            ]
+        ]
+    },
+    {
+        "id": "3ba79115.c4586e",
+        "type": "color",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "property": "color",
+        "color": "#ffffff",
+        "name": "",
+        "x": 770,
+        "y": 80,
+        "wires": [
+            [
+                "5ec25cbc.a13da4"
+            ]
+        ]
+    },
+    {
+        "id": "8e13cec0.71ec3",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "func": "msg.message = undefined;\nif(msg.boxip == \"127.0.0.1\"){\n    msg.payload = \"Network not found\";\n} else {\n    msg.payload = \"Connect \" + msg.boxip;\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 650,
+        "y": 80,
+        "wires": [
+            [
+                "3ba79115.c4586e"
+            ]
+        ]
+    },
+    {
+        "id": "1c40f090.e3bf0f",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "display once",
+        "func": "if(typeof(context.global.displayip) === \"undefined\"){\n    msg.displayip = true;\n    context.global.displayip = \"défini\";\n}\nelse{\n    msg.displayip = false;\n}\nreturn msg;",
+        "outputs": 1,
+        "x": 250,
+        "y": 80,
+        "wires": [
+            [
+                "b91ebc51.46e14"
+            ]
+        ]
+    },
+    {
+        "id": "b91ebc51.46e14",
+        "type": "switch",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "property": "displayip",
+        "rules": [
+            {
+                "t": "true"
+            },
+            {
+                "t": "else"
+            }
+        ],
+        "checkall": "true",
+        "outputs": 2,
+        "x": 390,
+        "y": 80,
+        "wires": [
+            [
+                "6e70ffad.918f"
+            ],
+            []
+        ]
+    },
+    {
+        "id": "c6a954ec.3956a8",
+        "type": "mqtt in",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "sequence/#",
+        "broker": "MQTT.Localhost",
+        "x": 110,
+        "y": 440,
+        "wires": [
+            [
+                "c58bff07.3a74"
+            ]
+        ]
+    },
+    {
+        "id": "c58bff07.3a74",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Route message",
+        "func": "var res = msg.topic.split(\"/\");\n\nmsg.queue = res[1] ;\nvar action = res[2] || \"unknow\";\n\nif(context.global.seqQueues==null)\n{\n    // For the actual queues' data\n    context.global.seqQueues = [] ;\n}\n\nswitch (action){\n    case \"add\" :\n        return [ msg, null, null, null, null, null, null, null ];\n    case \"next\" :\n        return [ null, msg, null, null, null, null, null, null ];\n    case \"cons\" :\n        return [ null, null, msg, null, null, null, null, null ];\n    case \"drop\" :\n        return [ null, null, null, msg, null, null, null, null ];\n    case \"clear\" :\n        return [ null, null, null, null, msg, null, null, null ];\n    case \"set\" :\n    case \"dropped\" :\n        return [ null, null, null, null, null, msg, null, null ];\n    case \"dump\" :\n        return [ null, null, null, null, null, null, msg, null ];\n    default :\n        msg.payload = res[0] + \">\" + res[1] + \">\" + res[2] ;\n        return [ null, null, null, null, null, null, null, msg ];\n}\n\n/*\nif(res[2]==\"add\")\n{\n    return [ msg, null, null, null, null, null, null ];\n}\nelse if(res[2]==\"next\")\n{\n    return [ null, msg, null, null, null, null, null ];\n}\nelse if(res[2]==\"drop\")\n{\n    return [ null, null, msg, null, null, null, null ];\n}\nelse if((res[2]==\"set\") || (res[2]==\"dropped\"))\n{   // Self-generated messages\n    return [ null, null, null, msg, null, null, null ];\n}\nelse if(res[2]==\"xxxx\")\n{\n    return [ null, null, null, null, msg, null, null ];\n}\nelse if(res[2]==\"dump\")\n{\n    return [ null, null, null, null, null, msg, null ];\n}\nmsg.payload = res[0] + \">\" + res[1] + \">\" + res[2] ;\nreturn [ null, null, null, null, null, null, msg ];\n*/",
+        "outputs": "8",
+        "noerr": 0,
+        "x": 300,
+        "y": 440,
+        "wires": [
+            [
+                "3dd4ca75.c22b36"
+            ],
+            [
+                "a1e70bad.5e18f8"
+            ],
+            [
+                "b044822e.4fbb8"
+            ],
+            [
+                "cc448c2a.33bb7"
+            ],
+            [
+                "a93efd47.56c1"
+            ],
+            [
+                "1a61b9c6.e59e46"
+            ],
+            [
+                "5a2d5816.a5d2a8"
+            ],
+            [
+                "12072212.edf8de"
+            ]
+        ]
+    },
+    {
+        "id": "1a61b9c6.e59e46",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Ext_Msgs",
+        "func": "var message = JSON.parse(msg.payload);\nif(message.hasOwnProperty(\"callbackTopic\")){\n    if(message.callbackTopic != \"\"){\n        msg.topic = \"sequence/\"+msg.queue+\"/cons\";\n        msg.payload = JSON.stringify({callbackTopic:message.callbackTopic});\n        return msg;\n    }\n}\nreturn null;",
+        "outputs": 1,
+        "x": 580,
+        "y": 500,
+        "wires": [
+            [
+                "758eff61.8a71"
+            ]
+        ]
+    },
+    {
+        "id": "12072212.edf8de",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Error",
+        "func": "msg.verbose = \"Routing Error \" + msg.payload ;\nreturn msg;",
+        "outputs": 1,
+        "x": 570,
+        "y": 580,
+        "wires": [
+            [
+                "85e724b9.7a18d8"
+            ]
+        ]
+    },
+    {
+        "id": "b044822e.4fbb8",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "cons",
+        "func": "var theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\nif(theQueue != null && theQueue.current != null){\n    var callbackMsg = {};\n\n    var msgToSend = msg.payload;\n    if (IsJsonString(msg.payload)){\n        msgToSend = JSON.parse(msg.payload);\n    }\n    \n    var current = theQueue.messages[theQueue.current];\n    \n    callbackMsg.payload = current.payload;\n    callbackMsg.topic = (msgToSend.callbackTopic==null)?\"sequenceCallback/def\":msgToSend.callbackTopic;\n    \n    if (IsJsonString(callbackMsg.payload)){\n        var currentPayload = JSON.parse(callbackMsg.payload);\n        if (currentPayload.hasOwnProperty(\"callbackTopic\")){\n            if(currentPayload.callbackTopic.trim() != \"\"){\n                callbackMsg.topic = currentPayload.callbackTopic.trim();\n            }\n        }\n    }\n    \n    var timeToLive = current.ttl;\n    \n    theQueue.toDrop = theQueue.current;\n    \n    if (timeToLive < 1)\n    {   // infinite ttl\n        return [msg,callbackMsg,null];\n    } else if ( timeToLive == 1)\n    {   // last use of this message\n        msg.verbose = \"ttl is down to 0\";\n        msg.callbackTopic = null;\n        msg.payload = \"\";\n        return [null,callbackMsg,msg];\n    } else \n    {\n        current.ttl--;\n        msg.verbose = \"ttl is down to \" + current.ttl ;\n        return [msg,callbackMsg,null];\n    }\n} else {\n    \n}\n\nfunction IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\nreturn [null,null,null];",
+        "outputs": "3",
+        "x": 570,
+        "y": 360,
+        "wires": [
+            [
+                "a1e70bad.5e18f8"
+            ],
+            [
+                "85e724b9.7a18d8",
+                "758eff61.8a71"
+            ],
+            [
+                "cc448c2a.33bb7"
+            ]
+        ]
+    },
+    {
+        "id": "5a2d5816.a5d2a8",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "dump",
+        "func": "//\nvar theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\nif (theQueue != null){\n    var current = theQueue.messages[theQueue.current];\n    msg.verbose = theQueue.name ;\n    \n    if(current != null)\n    {\n    \tvar i=0;\n    \tdo{\n    \t\tmsg.verbose = msg.verbose + \" >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \" \n    \t\t+ JSON.parse(current.payload).payload \n    \t\t+ \" | ttl : \" + current.ttl \n    \t\t+ \" | type : \" + current.type \n    \t\t+ \" | over : \" + current.over;\n    \t\tif (theQueue.current==current.id){\n    \t\t    msg.verbose = msg.verbose + \" | current\";\n    \t\t}\n    \t\telse {\n    \t\t    msg.verbose = msg.verbose + \" | n°\"+(i+1);\n    \t\t}\n    \t\tif(theQueue.toDrop==current.id){\n    \t\t    msg.verbose = msg.verbose + \" | toDrop\";\n    \t\t}\n    \t\tcurrent = theQueue.messages[current.next];\n    \t} while (i++<30 && current.id != theQueue.current);\n    }\n}\nreturn msg;\n",
+        "outputs": 1,
+        "x": 570,
+        "y": 540,
+        "wires": [
+            [
+                "85e724b9.7a18d8"
+            ]
+        ]
+    },
+    {
+        "id": "3dd4ca75.c22b36",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Add",
+        "func": "// Add a message to the end of the queue\n\n// The payload contains the element's attributes \nmsgAttributes = JSON.parse(msg.payload) ;\n\nvar firstMsg = false ;\n\nvar message = { payload: msgAttributes.payload,\n    type: msgAttributes.type,\n    ttl: msgAttributes.ttl,\n    over: msgAttributes.over,\n    previous: null,\n    next: null,\n    id : msg._msgid\n};\n\nvar theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\n\nif(theQueue==null)\n{\n    msg.verbose = \"Creating new queue.\" ;\n    theQueue = {name: (msg.queue==null)?\"defQueue\":msg.queue,\n        messages: [],\n        current:  null,\n        toDrop:   null\n    };\n    context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue] = theQueue ;\n}\n\nvar insertInFifo = function(){\n    var current = theQueue.messages[theQueue.current];\n    var previous = theQueue.messages[current.previous];\n    message.next     = theQueue.current;\n    message.previous = current.previous;\n    current.previous = message.id ;\n    previous.next = message.id ;\n}\n\nvar insertInLifo = function(){\n    var current = theQueue.messages[theQueue.current];\n    var next = theQueue.messages[current.next];\n    message.next     = current.next;\n    message.previous = theQueue.current;\n    current.next = message.id ;\n    next.previous = message.id ;\n    theQueue.current = message.id;\n}\n\nvar insertWithReplace = function(){\n    for ( var elem in theQueue.messages){\n        if ( theQueue.messages[elem].type == message.type)\n        {\n            var toReplace = theQueue.messages[elem];\n            var previous = theQueue.messages[toReplace.previous];\n            var next = theQueue.messages[toReplace.next];\n            next.previous = message.id;\n            previous.next = message.id;\n            message.next = toReplace.next;\n            message.previous = toReplace.previous;\n            theQueue.messages.splice(elem,1);\n            return;\n        }\n    }\n    insertInFifo();\n}\n\nvar insertAsFirstMsg = function(){\n    theQueue.messages = [];\n    msg.verbose = \"First message.\" ;\n    message.next     = message.id;\n    message.previous = message.id;\n    theQueue.current = message.id ;\n    theQueue.toDrop = message.id;\n    firstMsg = true ;\n}\n\n\nif(theQueue.current==null)\n{   // First message of the queue\n    insertAsFirstMsg();\n}\nelse\n{\n    msg.verbose = \"More than one message.\" ;\n    switch (message.over){\n        case 'replace' :\n            var current = theQueue.messages[theQueue.current];\n            if (current.next != theQueue.current){\n                insertWithReplace();\n            }\n            else{\n                insertAsFirstMsg();\n            }\n            break;\n        case \"addStart\":\n            insertInLifo();\n            \n            break;\n        default :\n            insertInFifo();\n    }\n\t\n}\n\ntheQueue.messages[message.id] = message;\n\nif(firstMsg == true){\n    return msg;\n}\n\nreturn null;",
+        "outputs": "1",
+        "x": 570,
+        "y": 260,
+        "wires": [
+            [
+                "a1e70bad.5e18f8"
+            ]
+        ]
+    },
+    {
+        "id": "a1e70bad.5e18f8",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Next",
+        "func": "var theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\n\nif(theQueue!=null && theQueue.current != null)\n{   // If the queue is not empty\n    var current = theQueue.messages[theQueue.current];\n\ttheQueue.current = current.next ;\n    msg.payload = current.payload ;\n    msg.topic = \"sequence/\" + msg.queue + \"/set\" ;\n    return msg;\n}\nelse\n    msg.verbose = \"Error : Next'ed queue is unknown.\" ;\nreturn null;",
+        "outputs": 1,
+        "x": 570,
+        "y": 300,
+        "wires": [
+            [
+                "758eff61.8a71"
+            ]
+        ]
+    },
+    {
+        "id": "cc448c2a.33bb7",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Drop",
+        "func": "// Delete current message\nvar theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\n//\nif(theQueue.current != null)\n{   // If the queue is not empty\n\n    var receivedMsg = msg.payload;\n    if (IsJsonString(msg.payload)){\n        receivedMsg = JSON.parse(msg.payload);\n    }\n\n    var callbackTopic = (receivedMsg[\"callbackTopic\"]==null)?false:receivedMsg.callbackTopic;\n    \n    msg.payload = (callbackTopic==false)?JSON.stringify({payload:\"\"}):JSON.stringify({callbackTopic:callbackTopic});\n    msg.topic = \"sequence/\" + msg.queue + \"/dropped\" ;\n    \n    \n    var current = theQueue.messages[theQueue.current];\n\tif( current.next == theQueue.current)\n\t{   // This is the last message\n\t\ttheQueue.current  = null ;\n\t\ttheQueue.messages = [] ;\n        msg.verbose=\"Last message to delete.\";\n        return msg;\n\t}\n\telse\n\t{\n\t\tvar message = theQueue.messages[theQueue.toDrop] ; // .current\n\t\tvar next = theQueue.messages[message.next] ;\n\t\tvar previous = theQueue.messages[message.previous] ;\n\t\tnext.previous = previous.id;\n\t\tprevious.next = next.id;\n\t\t\n\t\tif(theQueue.toDrop == theQueue.current){\n\t\t    theQueue.current = next.id ; // .previous\n\t\t}\n\t\ttheQueue.toDrop = theQueue.current;\n        msg.verbose=\"Ordinary message to delete.\";\n        theQueue.messages.splice(message.id,1);\n\t}\n}\nelse\n{\n\tmsg.verbose=\"No message to delete.\";\n    msg.payload = \"\" ;\n    msg.topic = \"sequence/\" + msg.queue + \"/reset\" ;\n}\n\nfunction IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nreturn msg;",
+        "outputs": "1",
+        "x": 570,
+        "y": 420,
+        "wires": [
+            [
+                "758eff61.8a71",
+                "85e724b9.7a18d8"
+            ]
+        ]
+    },
+    {
+        "id": "758eff61.8a71",
+        "type": "mqtt out",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "",
+        "qos": "",
+        "retain": "",
+        "broker": "MQTT.Localhost",
+        "x": 830,
+        "y": 400,
+        "wires": []
+    },
+    {
+        "id": "7cea62fc.83159c",
+        "type": "debug",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "active": false,
+        "console": "false",
+        "complete": "false",
+        "x": 1010,
+        "y": 460,
+        "wires": []
+    },
+    {
+        "id": "c8e3e96b.371c18",
+        "type": "comment",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Queue manager",
+        "info": "==========================================\n\nTo manipulate a sequence, just post MQTT messages into a topic named\nsequence/<queue_ID>/<command> where:\n   <queue_ID> is the name of the sequence\n   <command> is the command to apply to the queue. Possible values are:\n\t\t- \"add\" : to add the complete msg.payload as a JSON bloc into the sequence. The following JSON bloc's attributes have a special meaning:\n\t\t\tXXX.payload = a stringify JSON block containing the original message.\n\t\t\tXXX.type = type of the payload (to avoid, eventually, double messages of a same type). \n\t\t\tXXX.over = to specify the rule to apply to define the position of the message to add, and to define\twhat to do if an element of the same type already exists in this sequence. Possible values are:\n\t\t\t\t- null : don't care. Just add the current message to the end of the current queue.\n\t\t\t\t- \"replace\" : if some elements with the same type are already be added, it will replace the next occurrence by the new element. Else, it will add the new element at the end of the queue\n\t\t\tXXX.ttl  = time to live for the current message. Possible values are:\n\t\t\t\t- 0 or null : the element needs to be explicitely destroyed (or overwritten by another element of the same type).\n\t\t\t\t- <number> : the element will be displayed <number> times prior to be automatically dropped.\n\t\t- \"cons\" : consume he current sequence's element -> Send the current element on the topic given on \"callback Topic\" at the call of \"cons\". Decrement the ttl, drop the element if need and set the next element as the current element. Drop's action will set automatically the next element as current, so cons's action will not set it if it will call drop. If callbackTopic isn't set, the element is sent on sequenceCallback/def by default. Like the next element is set immediately, the element to drop is save.\n\t\t- \"next\" : to set the cursor to the next sequence's element. In this case, a message is generated into the topic \"sequence/<queue_ID>/set\". Its payload is the JSON\tbloc contained in the current element's payload. \n\t\t- \"drop\" : to drop the current message. The sequence's pointer is set to the next element and cons's action is call with callbackTopic\n\t\t- \"set\" : don't call this one. It's called by the sequence manager after a \"next\".\n  \nThe queues are all stored into : context.global.seqQueues\n\n \n==========================================",
+        "x": 120,
+        "y": 400,
+        "wires": []
+    },
+    {
+        "id": "85e724b9.7a18d8",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Verbose",
+        "func": "if(msg.verbose == null)\n{\n    return [null, msg];\n}\nmsg.payload = msg.verbose ;\nreturn [msg, null];",
+        "outputs": "2",
+        "x": 840,
+        "y": 480,
+        "wires": [
+            [],
+            []
+        ]
+    },
+    {
+        "id": "ea86a38d.15796",
+        "type": "mqtt in",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "sequenceCallback/def",
+        "broker": "MQTT.Localhost",
+        "x": 140,
+        "y": 780,
+        "wires": [
+            [
+                "8e6a798c.719588"
+            ]
+        ]
+    },
+    {
+        "id": "8e6a798c.719588",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "func": "msg = JSON.parse(msg.payload);\nmsg.payload = \"You need to define your own topic to callback, the message you get is : \" + msg.payload;\nreturn msg;",
+        "outputs": 1,
+        "x": 310,
+        "y": 780,
+        "wires": [
+            [
+                "6e11f6ae.91ee08"
+            ]
+        ]
+    },
+    {
+        "id": "6e11f6ae.91ee08",
+        "type": "debug",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 450,
+        "y": 780,
+        "wires": []
+    },
+    {
+        "id": "756d914e.8a927",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "func": "msg = JSON.parse(msg.payload); \nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 290,
+        "y": 660,
+        "wires": [
+            [
+                "75449c4d.8abb64"
+            ]
+        ]
+    },
+    {
+        "id": "5cddace6.a32254",
+        "type": "mqtt in",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "topic": "LedMatrix/display",
+        "broker": "MQTT.Localhost",
+        "x": 130,
+        "y": 660,
+        "wires": [
+            [
+                "756d914e.8a927"
+            ]
+        ]
+    },
+    {
+        "id": "75449c4d.8abb64",
+        "type": "ledblank",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 420,
+        "y": 660,
+        "wires": [
+            [
+                "31f41e6b.ce0be2"
+            ]
+        ]
+    },
+    {
+        "id": "e320304f.1cdfd",
+        "type": "commentdown",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Display a message on the led matrix",
+        "info": "",
+        "x": 180,
+        "y": 620,
+        "wires": []
+    },
+    {
+        "id": "6f03c51e.90fc3c",
+        "type": "commentdown",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Display element on debug tab when no callbackTopic is given",
+        "info": "",
+        "x": 260,
+        "y": 740,
+        "wires": []
+    },
+    {
+        "id": "a93efd47.56c1",
+        "type": "function",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "Clear",
+        "func": "// Delete current message\nvar theQueue = context.global.seqQueues[(msg.queue==null)?\"defQueue\":msg.queue];\n//\nif(theQueue != null)\n{   // If the queue is not empty\n    theQueue.messages = [];\n    context.global.seqQueues[theQueue.name] = null;\n\tmsg.verbose=\"Queue was clear\";\n}\nelse\n{\n\tmsg.verbose=\"This queue was already clear\";\n}\n\n\nreturn msg;",
+        "outputs": "1",
+        "x": 570,
+        "y": 460,
+        "wires": [
+            [
+                "85e724b9.7a18d8"
+            ]
+        ]
+    },
+    {
+        "id": "31f41e6b.ce0be2",
+        "type": "ledtext",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 560,
+        "y": 660,
+        "wires": [
+            [
+                "5129b050.aed65"
+            ]
+        ]
+    },
+    {
+        "id": "5129b050.aed65",
+        "type": "ledpicture",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 710,
+        "y": 660,
+        "wires": [
+            [
+                "235c61f8.dca39e"
+            ]
+        ]
+    },
+    {
+        "id": "235c61f8.dca39e",
+        "type": "ledmatrix",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "speed": 50,
+        "time": 500,
+        "name": "",
+        "x": 860,
+        "y": 660,
+        "wires": []
+    },
+    {
+        "id": "6e70ffad.918f",
+        "type": "boxip",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 530,
+        "y": 80,
+        "wires": [
+            [
+                "8e13cec0.71ec3"
+            ],
+            []
+        ]
+    },
+    {
+        "id": "4875ca12.ad0344",
+        "type": "ledmatrix",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "speed": 50,
+        "time": 500,
+        "name": "",
+        "x": 1480,
+        "y": 80,
+        "wires": []
+    },
+    {
+        "id": "a07fe3ca.49026",
+        "type": "ledtext",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 1340,
+        "y": 80,
+        "wires": [
+            [
+                "4875ca12.ad0344"
+            ]
+        ]
+    },
+    {
+        "id": "4696b895.36b058",
+        "type": "ledblank",
+        "z": "TaskManager",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/TaskManager/flows.json",
+        "name": "",
+        "x": 1200,
+        "y": 80,
+        "wires": [
+            [
+                "a07fe3ca.49026"
+            ]
+        ]
+    }
+]
\ No newline at end of file
diff -ruN node-red-src/package.json node-red-src_ttb/package.json
--- node-red-src/package.json	2017-09-27 10:53:14.718980662 +0000
+++ node-red-src_ttb/package.json	2017-09-27 10:46:52.707037956 +0000
@@ -12,7 +12,8 @@
     "scripts"      : {
         "start": "node red.js",
         "test": "grunt",
-        "build": "grunt build"
+        "build": "grunt build",
+        "postinstall": "./install_dependencies.sh"
     },
     "bin"          : {
         "node-red": "./red.js",
@@ -45,7 +46,7 @@
         "is-utf8":"0.2.1",
         "js-yaml": "3.8.4",
         "json-stringify-safe":"5.0.1",
-        "jsonata":"1.3.0",
+        "jsonata":"1.2.6",
         "media-typer": "0.3.0",
         "mqtt": "2.9.0",
         "multer": "1.3.0",
@@ -63,13 +64,24 @@
         "when": "3.7.8",
         "ws": "1.1.1",
         "xml2js":"0.4.17",
-        "node-red-node-feedparser":"0.1.*",
-        "node-red-node-email":"0.1.*",
-        "node-red-node-twitter":"0.1.*",
-        "node-red-node-rbe":"0.1.*"
+        "node-red-node-feedparser":"0.1.8",
+        "node-red-node-email":"0.1.23",
+        "node-red-node-twitter":"0.1.11",
+        "node-red-node-rbe":"0.1.11"
     },
     "optionalDependencies": {
-        "bcrypt":"~1.0.1"
+        "arduino-firmata": "shokai/node-arduino-firmata#3e9bd36",
+        "bcrypt": "kelektiv/node.bcrypt.js#45f498ef",
+        "crypto-js": "brix/crypto-js#73c20dd",
+        "ejs": "mde/ejs#5f255ce",
+        "node-hid": "node-hid/node-hid#ef1388d",
+        "node-red-contrib-eddystone": "matboehmer/node-red-contrib-eddystone#94bc8ca",
+        "node-red-contrib-objectid": "Chris1234567899/node-red-contrib-objectid#aaef426",
+        "node-red-contrib-splitter": "coderofsalvation/node-red-contrib-splitter#c762a4c",
+        "redis": "mranney/node_redis#4f7f1ad",
+        "ursa": "quartzjer/ursa#d307a6f",
+        "util": "defunctzombie/node-util#b5ae1b1",
+        "wiring-pi": "WiringPi/WiringPi-Node#f98bbcd"
     },
     "devDependencies": {
         "grunt": "~1.0.1",
diff -ruN node-red-src/red/api/auth/index.js node-red-src_ttb/red/api/auth/index.js
--- node-red-src/red/api/auth/index.js	2017-09-27 10:53:14.728980598 +0000
+++ node-red-src_ttb/red/api/auth/index.js	2017-09-26 15:24:30.924250500 +0000
@@ -84,7 +84,7 @@
         if (settings.adminAuth.type === "credentials") {
             response = {
                 "type":"credentials",
-                "prompts":[{id:"username",type:"text",label:"user.username"},{id:"password",type:"password",label:"user.password"}]
+                "prompts":[{id:"username",type:"text",label:"Username"},{id:"password",type:"password",label:"Password"}]
             }
         } else if (settings.adminAuth.type === "strategy") {
             response = {
diff -ruN node-red-src/red/api/info.js node-red-src_ttb/red/api/info.js
--- node-red-src/red/api/info.js	2017-09-27 10:53:14.728980598 +0000
+++ node-red-src_ttb/red/api/info.js	2017-09-26 15:24:31.194253000 +0000
@@ -49,8 +49,20 @@
             safeSettings.editorTheme.palette.editable = false;
         }
 
+        if (util.isArray(settings.hiddenWorkspaces)) {
+            safeSettings.hiddenWorkspaces = settings.hiddenWorkspaces;
+        }
+	
+        if (settings.functionGlobalContext.settings.showall != undefined) {
+            safeSettings.showall = settings.functionGlobalContext.settings.showall;
+        }
+
         settings.exportNodeSettings(safeSettings);
 
+        if (util.isArray(settings.otherPropToSave)) {
+            safeSettings.otherPropToSave = settings.otherPropToSave;
+        }
+
         res.json(safeSettings);
     }
 }
diff -ruN node-red-src/red/api/locales/en-US/editor.json node-red-src_ttb/red/api/locales/en-US/editor.json
--- node-red-src/red/api/locales/en-US/editor.json	2017-09-27 10:53:14.728980598 +0000
+++ node-red-src_ttb/red/api/locales/en-US/editor.json	2017-09-26 15:24:31.020167300 +0000
@@ -10,7 +10,8 @@
             "load": "Load",
             "save": "Save",
             "import": "Import",
-            "export": "Export"
+            "export": "Export",
+            "reboot": "Reboot"
         }
     },
     "workspace": {
@@ -29,7 +30,6 @@
         "label": {
             "view": {
                 "view": "View",
-                "grid": "Grid",
                 "showGrid": "Show grid",
                 "snapGrid": "Snap to grid",
                 "gridSize": "Grid size",
@@ -42,15 +42,12 @@
             "sidebar": {
                 "show": "Show sidebar"
             },
-            "settings": "Settings",
-            "userSettings": "User Settings",
-            "nodes": "Nodes",
+            "userSettings": "Settings",
             "displayStatus": "Show node status",
             "displayConfig": "Configuration nodes",
             "import": "Import",
             "export": "Export",
             "search": "Search flows",
-            "searchInput": "search your flows",
             "clipboard": "Clipboard",
             "library": "Library",
             "examples": "Examples",
@@ -65,15 +62,22 @@
             "login": "Login",
             "logout": "Logout",
             "editPalette":"Manage palette",
-            "other": "Other",
             "showTips": "Show tips",
-            "help": "Node-RED website"
+            "console": "Console",
+            "settings": "Settings",
+            "restore": "Restore the flows",
+            "restart": "Restart Node-RED",
+            "reboot": "Reboot",
+            "shutdown": "Shutdown",
+            "ttbdoc": "The Thingbox documentation",
+            "nrwebsite": "Node-RED Website",
+            "npm": "Node",
+            "help": "Help",
+            "about": "About"
         }
     },
     "user": {
         "loggedInAs": "Logged in as __name__",
-        "username": "Username",
-        "password": "Password",
         "login": "Login",
         "loginFailed": "Login failed",
         "notAuthorized": "Not authorized"
@@ -125,8 +129,22 @@
         "copyMessageValue": "Value copied",
         "copyMessageValue_truncated": "Truncated value copied"
     },
+    "npmInstallNode": {
+        "install": "Install",
+        "nodes": "Node:",
+        "selectNodes": "Select the text above and copy to the clipboard.",
+        "pasteNodes": "Paste node name or node url here",
+        "importNodes": "Import node",
+        "exportNodes": "Export nodes to clipboard",
+        "importUnrecognised": "Imported unrecognised type:",
+        "importUnrecognised_plural": "Imported unrecognised types:",
+        "nodeCopied": "__count__ node copied",
+        "nodeCopied_plural": "__count__ nodes copied",
+        "invalidFlow": "Invalid flow: __message__",
+        "installFail": "Node install failed"
+    },
     "deploy": {
-        "deploy": "Deploy",
+        "deploy": "Activate",
         "full": "Full",
         "fullDesc": "Deploys everything in the workspace",
         "modifiedFlows": "Modified Flows",
@@ -153,7 +171,6 @@
             "improperlyConfigured": "The workspace contains some nodes that are not properly configured:",
             "unknown": "The workspace contains some unknown node types:",
             "confirm": "Are you sure you want to deploy?",
-            "doNotWarn": "do not warn about this again",
             "conflict": "The server is running a more recent set of flows.",
             "backgroundUpdate": "The flows on the server have been updated.",
             "conflictChecking": "Checking to see if the changes can be merged automatically",
@@ -164,8 +181,6 @@
     "diff": {
         "unresolvedCount": "__count__ unresolved conflict",
         "unresolvedCount_plural": "__count__ unresolved conflicts",
-        "globalNodes": "Global nodes",
-        "flowProperties": "Flow Properties",
         "type": {
             "added": "added",
             "changed": "changed",
@@ -178,8 +193,8 @@
         },
         "nodeCount": "__count__ node",
         "nodeCount_plural": "__count__ nodes",
-        "local":"Local changes",
-        "remote":"Remote changes"
+        "local":"Local",
+        "remote":"Remote"
 
     },
     "subflow": {
@@ -221,13 +236,7 @@
     },
     "keyboard": {
         "title": "Keyboard Shortcuts",
-        "keyboard": "Keyboard",
-        "filterActions": "filter actions",
-        "shortcut": "shortcut",
-        "scope": "scope",
         "unassigned": "Unassigned",
-        "global": "global",
-        "workspace": "workspace",
         "selectAll": "Select all nodes",
         "selectAllConnected": "Select all connected nodes",
         "addRemoveNode": "Add/remove node from selection",
@@ -270,6 +279,7 @@
         "filter": "filter nodes",
         "search": "search modules",
         "label": {
+            "basic": "basic",
             "subflows": "subflows",
             "input": "input",
             "output": "output",
@@ -292,7 +302,6 @@
         },
         "editor": {
             "title": "Manage palette",
-            "palette": "Palette",
             "times": {
                 "seconds": "seconds ago",
                 "minutes": "minutes ago",
@@ -371,24 +380,16 @@
     "sidebar": {
         "info": {
             "name": "Node information",
-            "tabName": "Name",
             "label": "info",
             "node": "Node",
             "type": "Type",
             "id": "ID",
-            "status": "Status",
-            "enabled": "Enabled",
-            "disabled": "Disabled",
             "subflow": "Subflow",
             "instances": "Instances",
             "properties": "Properties",
             "info": "Information",
             "blank": "blank",
             "null": "null",
-            "showMore": "show more",
-            "showLess": "show less",
-            "flow": "Flow",
-            "information": "Information",
             "arrayItems": "__count__ items",
             "showTips":"You can open the tips from the settings panel"
         },
@@ -415,7 +416,6 @@
             "re": "regular expression",
             "bool": "boolean",
             "json": "JSON",
-            "bin": "buffer",
             "date": "timestamp"
         }
     },
@@ -452,5 +452,135 @@
         "modeString": "Handle as UTF-8 String",
         "modeArray": "Handle as JSON array",
         "modeDesc":"<h3>Buffer editor</h3><p>The Buffer type is stored as a JSON array of byte values. The editor will attempt to parse the entered value as a JSON array. If it is not valid JSON, it will be treated as a UTF-8 String and converted to an array of the individual character code points.</p><p>For example, a value of <code>Hello World</code> will be converted to the JSON array:<pre>[72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100]</pre></p>"
+    },
+    "settings": {
+        "common": {
+            "note": "<b>Note:</b> Use Ok to validate then Reboot.",
+            "reboot": "Reboot"
+        },
+        "navbar": {
+            "ttb": " The ThingBox ",
+            "powered": "&nbsp;powered by&nbsp;"
+        },
+        "hostname": {
+            "title": "Device Name",
+            "name": " Name",
+            "rename": "Rename",
+            "new": "New",
+            "password": "Password",
+            "note": "<b>Note:</b> Use Rename to validate then Reboot.",
+            "msg": "To change your device name you have to use your account password.",
+            "addmes": "Your new device address will be "
+        },
+        "account": {
+            "title": "Account",
+            "msg": "The account will be created if it does'nt exist.",
+            "mail": " Mail",
+            "password": " Password"
+        },
+        "wifi": {
+            "title": "WiFi",
+            "msg": "The current WiFi used is : ",
+            "notSelectedMsg": "WiFi is not currently used",
+            "ssid": "SSID",
+            "password": "Password"
+        },
+        "showall": {
+            "title": "Show all workspaces",
+            "show": " Show"
+        },
+        "staticip": {
+            "title": "Static IP",
+            "interface": {
+                "label": "Interface",
+                "ethernet": "Ethernet",
+                "wifi": "WiFi"
+            },
+            "type": {
+                "label": " Type",
+                "dynamic": "Dynamic",
+                "static": "Static"
+            },
+            "ip": "IP",
+            "netmask": "Netmask",
+            "gateway": "Gateway"
+        },
+        "update": {
+            "title": "System update",
+            "no": "No update found !",
+            "yes": "An update is available !",
+            "note": "<b>Note:</b> Reboot after Update.",
+            "progress": " Update in progress ...",
+            "update": "Update",
+            "success": "Successful update",
+            "error": "Something wrong happened. Please, try again."
+        },
+        "lang": {
+            "title": "Choose the language",
+            "select": {
+                "label": "Language",
+                "auto": "Automatic",
+                "en": "English",
+                "fr": "French"
+            },
+            "tips": "<b>Note:</b> Use Ok to validate then Reboot.<br><ul><li><b>Automatic</b> : Choose the language of your browser (by default).</li><li><b>English</b> : forces the English language.</li><li><b>French</b> : forces the French language.</li></ul>"
+        },
+        "displayMode": {
+            "title": "Choose the display mode",
+            "select": {
+                "label": "Display mode",
+                "1": "1 (if you bought a TimeSquAir before the September 20, 2016)",
+                "2": "2 (if you bought a TimeSquAir after the September 20, 2016)"
+            },
+            "tips": "<b>Note:</b> Use Ok to validate<br>"
+        },
+        "about": {
+            "current": "Current version : "
+        },
+        "enable_backup": {
+            "title": "Automatic backup",
+            "label": "enable",
+            "tips": "<b>Note:</b> a backup will be done each hour, erasing the last backup.<br/>Use Ok to validate. No need to reboot."
+        },
+        "create_backup": {
+            "title": "Backup",
+            "label": "create a backup",
+            "tips": "<b>Note:</b> a backup will erasing the last backup."
+        },
+        "use_backup":{
+            "title": "Use the last backup",
+            "date": "Last backup found : __date__",
+            "nodate": "No backup was made with this device",
+            "tips": "<b>Note:</b> Reboot after restore.",
+            "progress": " Restore in progress ...",
+            "update": "restore",
+            "success": "Successful restore",
+            "error": "Something wrong happened. Please, try again."
+        }
+    },
+    "cgu":{        
+        "obsolete" : "Your browser is out of date, please update it.",
+        "url" : "/cguEN.html",
+        "next" : "Next",
+        "previous" : "Previous",
+        "submit" : "Submit",
+        "acceptCGU" : " I accept the Terms stated above",
+        "accountWillBeCreated":"The account will be created if it does not exist",
+        "notConnected":"Your Thingbox has no access to internet",
+        "cannotUseAccountOffline":"In order to fully use its services, creating an account you will be proposed when your Thingbox will access internet",
+        "acceptCGUonSubmit":"By clicking \"Submit\", you state have read, understood and accepted the Terms",
+        "rename":"You have to rename your Thingbox's name",
+	"title":"Sign up / Sign in",
+        "mail":" e-Mail",
+        "password":" Password",
+        "confirmPassword":" Confirm your password",
+        "TSAName":" Your new Thingbox's name",
+        "warning":"Warning",
+        "newHostnameTips":"the new web address will be ",
+        "alreadyHostnameUsed":" is already in use on your network, choose another name",
+        "mailDoesntCorresponding":"The password does not correspond with the filled email",
+        "nameAlreadyUsedOnThisAccount":"This account already has a Thingbox or a TimeSquAir named : ",
+        "configWillBeUsed":"Its configuration will be used.",
+        "youWillBeRedirected":"You are going be redirected automatically once your Thingbox has finished to reboot."
     }
 }
diff -ruN node-red-src/red/api/locales/en-US/jsonata.json node-red-src_ttb/red/api/locales/en-US/jsonata.json
--- node-red-src/red/api/locales/en-US/jsonata.json	2017-09-27 10:53:14.728980598 +0000
+++ node-red-src_ttb/red/api/locales/en-US/jsonata.json	2017-09-26 15:24:31.015014100 +0000
@@ -95,10 +95,6 @@
         "args":"",
         "desc":"Returns a pseudo random number greater than or equal to zero and less than one."
     },
-    "$millis": {
-        "args":"",
-        "desc":"Returns the number of milliseconds since the Unix Epoch (1 January, 1970 UTC) as a number. All invocations of `$millis()` within an evaluation of an expression will all return the same value."
-    },
     "$sum": {
         "args": "array",
         "desc": "Returns the arithmetic sum of an `array` of numbers. It is an error if the input `array` contains an item which isn't a number."
@@ -164,10 +160,6 @@
         "args": "object",
         "desc": "Splits an object containing key/value pairs into an array of objects, each of which has a single key/value pair from the input object. If the parameter is an array of objects, then the resultant array contains an object for every key/value pair in every object in the supplied array."
     },
-    "$merge": {
-        "args": "array&lt;object&gt;",
-        "desc": "Merges an array of `objects` into a single `object` containing all the key/value pairs from each of the objects in the input array. If any of the input objects contain the same key, then the returned `object` will contain the value of the last one in the array. It is an error if the input array contains an item that is not an object."
-    },
     "$sift": {
         "args":"object, function",
         "desc":"Returns an object that contains only the key/value pairs from the `object` parameter that satisfy the predicate `function` passed in as the second parameter.\n\nThe `function` that is supplied as the second parameter must have the following signature:\n\n`function(value [, key [, object]])`"
diff -ruN node-red-src/red/api/locales/fr-FR/editor.json node-red-src_ttb/red/api/locales/fr-FR/editor.json
--- node-red-src/red/api/locales/fr-FR/editor.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/red/api/locales/fr-FR/editor.json	2017-09-26 15:24:31.073971600 +0000
@@ -0,0 +1,354 @@
+{
+    "common": {
+        "label": {
+            "name": "Nom",
+            "ok": "OK",
+            "cancel": "Annuler",
+            "delete": "Supprimer",
+            "close": "Fermer",
+	        "reboot": "Redémarrer"
+        }
+    },
+    "workspace": {
+        "defaultName": "Feuille __number__",
+        "renameSheet": "Renommer la feuille",
+        "confirmDelete": "Confirmer la suppression",
+        "delete": "Êtes-vous sûr de bien vouloir supprimer '__label__'?",
+        "dropFlowHere": "Lacher le flow ici"
+    },
+    "menu": {
+        "label": {
+            "sidebar": {
+                "sidebar": "Barre latérale",
+                "show": "Afficher la barre latérale"
+            },
+            "displayStatus": "Afficher le statut des nodes",
+            "import": "Importer",
+            "export": "Exporter",
+            "clipboard": "Presse-papiers",
+            "library": "Bibliothèque",
+            "subflows": "sous-flots",
+            "createSubflow": "Créer un sous-flot",
+            "selectionToSubflow": "La sélection en sous-flot",
+            "workspaces": "Espaces de travail",
+            "add": "Ajouter",
+            "rename": "Renomer",
+            "delete": "Supprimer",
+            "keyboardShortcuts": "Raccourcis clavier",
+            "login": "S'identifier",
+            "logout": "Se déconnecter",
+            "console": "Console",
+            "settings": "Paramètres",
+            "restore": "Restaurer les flows",
+            "restart": "Redémarrer Node-RED",
+            "reboot": "Reboot",
+            "shutdown": "Éteindre",
+            "ttbdoc": "Documentation de la Thingbox",
+            "nrwebsite": "Site web de Node-RED",
+            "npm": "Node",
+            "help": "Aide",
+            "about": "À propos"
+        }
+    },
+    "user": {
+        "loggedInAs": "Se connecter en tant que as __name__",
+        "login": "Indentifiant",
+        "loginFailed": "Erreur d'identifiant"
+    },
+    "notification": {
+        "warning": "<strong>Attention</strong>: __message__",
+        "warnings": {
+            "undeployedChanges": "les nodes ont des modifications non prises en comptes",
+            "nodeActionDisabled": "les nodes actions sont inactivés dans les sous-flots"
+        },
+
+        "error": "<strong>Erreur</strong>: __message__",
+        "errors": {
+            "lostConnection": "Perte de la connection serveur",
+            "cannotAddSubflowToItself": "On ne peut pas ajouter un sous-flot à lui même",
+            "cannotAddCircularReference": "Référence circulaire détéctée dans l'ajout du sous-flot"
+        }
+    },
+    "clipboard": {
+        "nodes": "Nodes:",
+        "selectNodes": "Sélectionner et copier le texte ci-dessus.",
+        "pasteNodes": "Coller les nodes ici",
+        "importNodes": "Importer les nodes",
+        "exportNodes": "Exprter les nodes dans le presse-papier",
+        "importUnrecognised": "Type non reconnu lors de l'import:",
+        "importUnrecognised_plural": "Types non reconnus lors de l'import:",
+        "nodeCopied": "Copie de __count__ node",
+        "nodeCopied_plural": "Copie de __count__ nodes",
+        "invalidFlow": "Flot non valide: __message__"
+    },
+	"npmInstallNode": {
+        "install": "Installer",
+        "nodes": "Node:",
+        "selectNodes": "Sélectionner et copier le texte ci-dessus.",
+        "pasteNodes": "Coller le nom ou l'adresse du node ici",
+        "importNodes": "Importer des nodes",
+        "exportNodes": "Exporter des nodes dans le presse-papier",
+        "importUnrecognised": "Le type de node importé n'est pas connu:",
+        "importUnrecognised_plural": "Les types de nodes importés ne sont pas connus:",
+        "nodeCopied": "__count__ node(s) ont été copiés",
+        "nodeCopied_plural": "__count__ node(s) ont été copiés",
+        "invalidFlow": "Ce flot n'est pas valide: __message__",
+		"installFail": "l'installation du node n'a pas fonctionné"
+    },
+    "deploy": {
+        "deploy": "Activer",
+        "full": "Full",
+        "fullDesc": "Tout activer",
+        "modifiedFlows": "flots modifiés",
+        "modifiedFlowsDesc": "N'activer que les flots dont les nodes ont changé",
+        "modifiedNodes": "Nodes modifiés",
+        "modifiedNodesDesc": "N'activer que les nodes modifiés",
+        "successfulDeploy": "Activation réussie",
+        "errors": {
+            "noResponse": "pas de réponse du serveur"
+        },
+        "confirm": {
+            "button": {
+                "confirm": "Confirmer l'activation",
+                "cancel": "Annuler"
+            },
+            "undeployedChanges": "Vous avez modifié.\n\nQuitter cette page vous fait perdre vos modifications.",
+            "improperlyConfigured": "Certains nodes ne sont pas bien configurés.",
+            "unknown": "La feuille contient des types de node non connus:",
+            "unusedConfig": "La feuille contient des nodes de configuration non connus:",
+            "confirm": "Etes vous sûr ce vouloir activer ce flot?"
+        }
+    },
+    "subflow": {
+        "tabLabel": "Sous-flot: __name__",
+        "editSubflow": "Modifier flow __name__",
+        "edit": "Modifier le flot",
+        "subflowInstances": "Il y a __count__ utilisation de ce sous-flot",
+        "subflowInstances_plural": "Il y a __count__ utilisations de ce sous-flot",
+        "editSubflowName": "modifier le nom",
+        "input": "input",
+        "output": "output",
+        "deleteSubflow": "détruire le sous-flot",
+        "errors": {
+            "noNodesSelected": "<strong>Impossible de créer le sous-flot</strong>: aucun node n'est sélectionné",
+            "multipleInputsToSelection": "<strong>Impossible de créer le sous-flot</strong>: il ne faut qu'un seul point d'entrée"
+        }
+    },
+    "editor": {
+        "configEdit": "éditer",
+        "configAdd": "ajouter",
+        "configDelete": "effacer",
+        "nodesUse": "__count__ node utilise ce node configuration",
+        "nodesUse_plural": "__count__ nodes utilisent ce node configuration",
+        "addNewConfig": "Ajouter un nouveau node de type __type__",
+        "editConfig": "Editer __type__ config node",
+        "addNewType": "Ajouter un nouveau __type__..."
+    },
+    "keyboard": {
+        "selectAll": "Sélectionner tous les nodes",
+        "selectAllConnected": "Sélectionner tous les nodes connectés",
+        "addRemoveNode": "Ajouter/enlever les nodes de la sélection",
+        "deleteSelected": "Détruire les nodes ou les liens sélectionnés",
+        "importNode": "Importer les nodes",
+        "exportNode": "Export selected nodes",
+        "toggleSidebar": "Ouvrir/fermer la barre latérale",
+        "deleteNode": "Détruire les nodes ou les liens sélectionnés",
+        "copyNode": "Copier les nodes sélectionnés",
+        "cutNode": "Couper les nodes sélectionnés",
+        "pasteNode": "Coller les nodes"
+    },
+    "library": {
+        "openLibrary": "Ouvrir une Librairie...",
+        "saveToLibrary": "Sauvegarder en Librairie...",
+        "typeLibrary": "__type__ library",
+        "unnamedType": "Unnamed __type__",
+        "saveToLibrary": "Sauvegarder en librairie",
+        "exportToLibrary": "Exporter en librairie",
+        "dialogSaveOverwrite": "Ecraser la librairie déjà existante de type __libraryType__?",
+        "invalidFilename": "Nom de fichier non valide",
+        "savedNodes": "Nodes sauvegardés",
+        "savedType": "__type__ sauvegardé",
+        "saveFailed": "L'enregistrement s'est mal passé: __message__",
+
+        "filename": "Nom de fichier",
+        "folder": "Dossier",
+        "filenamePlaceholder": "fichier",
+        "fullFilenamePlaceholder": "a/b/file",
+        "folderPlaceholder": "a/b",
+
+        "breadcrumb": "Librairie"
+    },
+    "palette": {
+        "noInfo": "pas dinformation disponible",
+        "filter": "Filtre",
+        "label": {
+            "basic": "générale",
+            "subflows": "sous-flots",
+            "input": "entrée",
+            "output": "sortie",
+            "function": "fonction",
+            "social": "social",
+            "storage": "stockage",
+            "analysis": "analyse",
+            "advanced": "technique"
+        },
+        "event": {
+            "nodeAdded": "Node ajouté à la palette:",
+            "nodeAdded_plural": "Nodes ajoutés à la palette",
+            "nodeRemoved": "Node enlevé de la palette:",
+            "nodeRemoved_plural": "Nodes enlevés de la palette:",
+            "nodeEnabled": "Node activé:",
+            "nodeEnabled_plural": "Nodes activés:",
+            "nodeDisabled": "Node desactivé:",
+            "nodeDisabled_plural": "Nodes desactivés:"
+        }
+    },
+    "sidebar": {
+        "info": {
+            "name": "Information",
+            "label": "info",
+            "node": "Node",
+            "type": "Type",
+            "id": "ID",
+            "subflow": "sous-flot",
+            "instances": "Instances",
+            "properties": "Propriétés",
+            "blank": "vide",
+            "arrayItems": "__count__ items"
+        },
+        "config": {
+            "name": "Nodes de configuration",
+            "label": "config"
+        }
+    },
+    "settings": {
+        "common": {
+            "note": "<b>Note:</b> Cliquer sur OK puis Redémarrer.",
+            "reboot": "Redémarrer"
+        },
+        "navbar": {
+            "ttb": " The ThingBox ",
+            "powered": "&nbsp;propulsé par&nbsp;"
+        },
+        "hostname": {
+            "title": "Nom de l'appareil",
+            "name": " Nom",
+            "rename": "Renommer",
+            "new": "Nouveau",
+            "password": "Passe",
+            "note": "<b>Note:</b> Cliquer sur Renommer puis Redémarrer.",
+            "msg": "Pour changer le nom de votre machine vous devez utiliser votre mot de passe utilisateur.",
+            "addmes": "La nouvelle adresse de votre machine sera "
+        },
+        "account": {
+            "title": "Compte",
+            "msg": "Le compte sera créé s'il n'existe pas.",
+            "mail": " Mail",
+            "password": " Passe"
+        },
+        "wifi": {
+            "title": "WiFi",
+            "msg": "Le WiFi utilisé en ce moment est : ",
+            "notSelectedMsg": "Le WiFi n'est pas actuellement utilisé",
+            "ssid": "Nom",
+            "password": "Passe"
+        },
+        "showall": {
+            "title": "Afficher tous les espaces de travail",
+            "show": " Afficher"
+        },
+        "staticip": {
+            "title": "IP statique",
+            "interface": {
+                "label": "Interface",
+                "ethernet": "Ethernet",
+                "wifi": "WiFi"
+            },
+            "type": {
+                "label": " Type",
+                "dynamic": "Dynamique",
+                "static": "Statique"
+            },
+            "ip": "IP",
+            "netmask": "Masque de sous-réseau",
+            "gateway": "Passerelle"
+        },
+        "update": {
+            "title": "Mise à jour du système",
+            "no": "Aucune mise à jour trouvée !",
+            "yes": "Une mise à jour du système est disponible !",
+            "note": "<b>Note:</b> Redémarrer après la mise à jour.",
+            "progress": " Mise à jour du système en cours ...",
+            "update": "Mettre à jour",
+            "success": "Mise à jour réussie",
+            "error": "Un problème est survenu. Veuillez réessayer."
+        },
+        "lang": {
+            "title": "Choix de la langue",
+            "select": {
+                "label": "Langue",
+                "auto": "Automatique",
+                "en": "Anglais",
+                "fr": "Français"
+            },
+            "tips": "<b>Note:</b> Cliquer sur OK puis Redémarrer.<br><ul><li><b>Automatique</b> : Choisi la langue de votre navigateur (par défaut).</li><li><b>Anglais</b> : force la langue en Anglais.</li><li><b>Français</b> : force la langue en Français.</li></ul>"
+        },
+        "displayMode": {
+            "title": "Choix du mode d'affichage",
+            "select": {
+                "label": "Mode d'affichage",
+                "1": "1 (si vous avez acheté un TimeSquAir avant le 20 septembre 2016)",
+                "2": "2 (si vous avez acheté un TimeSquAir après le 20 septembre 2016)"
+            },
+            "tips": "<b>Note:</b> Cliquer sur OK pour valider.<br>"
+        },
+        "about": {
+            "current": "Version installée: "
+        },
+        "enable_backup": {
+            "title": "Sauvegarde automatique",
+            "label": "activer",
+            "tips": "<b>Note:</b> Une sauvegarde sera faite toutes les heures, écrasant la précédente sauvegarde.<br/>Cliquer sur OK pour valider, pas de redémarrage nécessaire."
+        },
+        "create_backup": {
+            "title": "Faire une sauvegarde",
+            "label": "sauvegarder",
+            "tips": "<b>Note:</b> Cette sauvegarde écrasera la précédente."
+        },
+        "use_backup":{
+            "title": "Utiliser la dernière sauvegarde",
+            "date": "La dernière sauvegarde date du __date__",
+            "nodate": "Aucune sauvegarde n'a été effectué avec cet appareil",
+            "tips": "<b>Note:</b> Redémarrer après la restauration.",
+            "progress": " Restauration en cours ...",
+            "update": "restauration",
+            "success": "Restauration réussie",
+            "error": "Un problème est survenu. Veuillez réessayer."
+        }
+    },
+    "cgu":{
+        "obsolete" : "Votre navigateur est obsolète, veuillez le mettre à jour.",
+        "url" : "/cgu.html",
+        "next" : "Suivant",
+        "previous" : "Précédent",
+        "submit" : "Valider",
+        "acceptCGU" : " J'accepte les CGU énoncé ci-dessus",
+        "accountWillBeCreated":"Le compte sera créé s'il n'existe pas",
+        "notConnected":"Votre Thingbox n'a pas accès à internet",
+        "cannotUseAccountOffline":"Afin de pouvoir utiliser pleinement ses services, la création d'un compte vous sera proposé quand votre Thingbox aurra accès à internet",
+        "acceptCGUonSubmit":"En cliquant sur \"Valider\", vous déclarez avoir lu, compris et accepté les CGUs",
+        "rename":"Merci de renommer le nom de votre Thingbox",
+	"title":"Création de compte / Enregistrement",
+        "mail":" e-Mail",
+        "password":" Mot de passe",
+        "confirmPassword":" Mot de passe (confirmation)",
+        "TSAName":" Le nom de votre nouvelle Thingbox",
+        "warning":"Attention",
+        "newHostnameTips":"la nouvelle adresse sera ",
+        "alreadyHostnameUsed":" est déjà utilisé sur votre réseau, choisissez un autre nom",
+        "mailDoesntCorresponding":"Le mot de passe ne correspond pas à l'email renseigné",
+        "nameAlreadyUsedOnThisAccount":"Ce compte possède déjà une Thingbox ou un TimeSquAir ayant pour nom : ",
+        "configWillBeUsed":"Sa configuration sera utilisé.",
+        "youWillBeRedirected":"Vous allez être redirigé quand votre Thingbox aura fini de redémarrer"
+    }
+}
diff -ruN node-red-src/red/api/locales/ja/editor.json node-red-src_ttb/red/api/locales/ja/editor.json
--- node-red-src/red/api/locales/ja/editor.json	2017-09-27 10:53:14.728980598 +0000
+++ node-red-src_ttb/red/api/locales/ja/editor.json	2017-09-26 15:24:31.059823600 +0000
@@ -29,7 +29,6 @@
         "label": {
             "view": {
                 "view": "表示",
-                "grid": "グリッド",
                 "showGrid": "グリッドを表示",
                 "snapGrid": "ノードの配置を補助",
                 "gridSize": "グリッドの大きさ",
@@ -42,15 +41,12 @@
             "sidebar": {
                 "show": "サイドバーを表示"
             },
-            "settings": "設定",
-            "userSettings": "ユーザ設定",
-            "nodes": "ノード",
+            "userSettings": "設定",
             "displayStatus": "ノードの状態を表示",
             "displayConfig": "ノードの設定",
             "import": "読み込み",
             "export": "書き出し",
             "search": "ノードを検索",
-            "searchInput": "ノードを検索",
             "clipboard": "クリップボード",
             "library": "ライブラリ",
             "examples": "サンプル",
@@ -65,15 +61,11 @@
             "login": "ログイン",
             "logout": "ログアウト",
             "editPalette": "パレットの管理",
-            "other": "その他",
-            "showTips": "ヒントを表示",
-            "help": "Node-REDウェブサイト"
+            "showTips": "ヒントを表示"
         }
     },
     "user": {
         "loggedInAs": "__name__ としてログインしました",
-        "username": "ユーザ名",
-        "password": "パスワード",
         "login": "ログイン",
         "loginFailed": "ログインに失敗しました",
         "notAuthorized": "権限がありません"
@@ -83,7 +75,7 @@
         "warnings": {
             "undeployedChanges": "ノードの変更をデプロイしていません",
             "nodeActionDisabled": "ノードのアクションは、サブフロー内で無効になっています",
-            "missing-types": "不明なノードが存在するため、フローを停止しました。詳細はログを確認してください。",
+            "missing-types": "不明なノードが存在するため、フローを停止しました。詳細はログを確認してください",
             "restartRequired": "更新されたモジュールを有効化するため、Node-REDを再起動する必要があります"
         },
         "error": "<strong>エラー</strong>: __message__",
@@ -93,7 +85,7 @@
             "lostConnectionTry": "すぐに接続",
             "cannotAddSubflowToItself": "サブフロー自身を追加できません",
             "cannotAddCircularReference": "循環参照を検出したため、サブフローを追加できません",
-            "unsupportedVersion": "サポートされていないバージョンのNode.jsを使用しています。<br/>最新のNode.js LTSに更新してください。"
+            "unsupportedVersion": "サポートされていないバージョンのNode.jsを使用しています。<br/>最新のNode.js LTSに更新してください"
         }
     },
     "clipboard": {
@@ -152,7 +144,6 @@
             "improperlyConfigured": "以下のノードは、正しくプロパティが設定されていません:",
             "unknown": "ワークスペースに未知の型のノードがあります。",
             "confirm": "このままデプロイしても良いですか？",
-            "doNotWarn": "この警告を再度表示しない",
             "conflict": "フローを編集している間に、他のブラウザがフローをデプロイしました。デプロイを継続すると、他のブラウザがデプロイしたフローが削除されます。",
             "backgroundUpdate": "サーバ上のフローが更新されました",
             "conflictChecking": "変更を自動的にマージしてよいか確認してください。",
@@ -163,8 +154,6 @@
     "diff": {
         "unresolvedCount": "未解決の衝突 __count__",
         "unresolvedCount_plural": "未解決の衝突 __count__",
-        "globalNodes": "グローバルノード",
-        "flowProperties": "フロープロパティ",
         "type": {
             "added": "追加",
             "changed": "変更",
@@ -177,8 +166,8 @@
         },
         "nodeCount": "ノード数 __count__",
         "nodeCount_plural": "ノード数 __count__",
-        "local": "ローカルの変更",
-        "remote": "リモートの変更"
+        "local": "ローカル",
+        "remote": "リモート"
     },
     "subflow": {
         "editSubflow": "フローのテンプレートを編集: __name__",
@@ -219,13 +208,7 @@
     },
     "keyboard": {
         "title": "キーボードショートカット",
-        "keyboard": "キーボード",
-        "filterActions": "動作を検索",
-        "shortcut": "ショートカット",
-        "scope": "範囲",
         "unassigned": "未割当",
-        "global": "グローバル",
-        "workspace": "ワークスペース",
         "selectAll": "全てのノードを選択",
         "selectAllConnected": "接続された全てのノードを選択",
         "addRemoveNode": "ノードの選択、選択解除",
@@ -251,8 +234,8 @@
         "exportToLibrary": "ライブラリへフローを書き出す",
         "dialogSaveOverwrite": "__libraryName__ という __libraryType__ は既に存在しています 上書きしますか？",
         "invalidFilename": "不正なファイル名",
-        "savedNodes": "フローを保存しました",
-        "savedType": "__type__ を保存しました",
+        "savedNodes": "保存されたノード",
+        "savedType": "保存された __type__",
         "saveFailed": "保存に失敗しました: __message__",
         "filename": "ファイル名",
         "folder": "フォルダ",
@@ -288,7 +271,6 @@
         },
         "editor": {
             "title": "パレットの管理",
-            "palette": "パレット",
             "times": {
                 "seconds": "秒前",
                 "minutes": "分前",
@@ -330,12 +312,12 @@
             "sortRecent": "日付順",
             "more": "+ さらに __count__ 個",
             "errors": {
-                "catalogLoadFailed": "ノードのカタログの読み込みに失敗しました。<br>詳細はブラウザのコンソールを確認してください。",
-                "installFailed": "追加処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください。",
-                "removeFailed": "削除処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください。",
-                "updateFailed": "更新処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください。",
-                "enableFailed": "有効化処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください。",
-                "disableFailed": "無効化処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください。"
+                "catalogLoadFailed": "ノードのカタログの読み込みに失敗しました<br>詳細はブラウザのコンソールを確認してください",
+                "installFailed": "追加処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください",
+                "removeFailed": "削除処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください",
+                "updateFailed": "更新処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください",
+                "enableFailed": "有効化処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください",
+                "disableFailed": "無効化処理が失敗しました: __module__<br>__message__<br>詳細はログを確認してください"
             },
             "confirm": {
                 "install": {
@@ -365,24 +347,16 @@
     "sidebar": {
         "info": {
             "name": "ノードの情報を表示",
-            "tabName": "名前",
             "label": "情報",
             "node": "ノード",
             "type": "型",
             "id": "ID",
-            "status": "状態",
-            "enabled": "有効",
-            "disabled": "無効",
             "subflow": "サブフロー",
             "instances": "インスタンス",
             "properties": "プロパティ",
             "info": "情報",
             "blank": "ブランク",
             "null": "ヌル",
-            "showMore": "さらに表示",
-            "showLess": "表示を省略",
-            "flow": "フロー",
-            "information": "情報",
             "arrayItems": "__count__ 要素",
             "showTips": "設定からヒントを表示できます"
         },
@@ -409,7 +383,6 @@
             "re": "正規表現",
             "bool": "真偽",
             "json": "JSON",
-            "bin": "バッファ",
             "date": "日時"
         }
     },
diff -ruN node-red-src/red/api/locales.js node-red-src_ttb/red/api/locales.js
--- node-red-src/red/api/locales.js	2017-09-27 10:53:14.728980598 +0000
+++ node-red-src_ttb/red/api/locales.js	2017-09-26 15:24:31.216131600 +0000
@@ -33,9 +33,20 @@
     },
     get: function(req,res) {
         var namespace = req.params[0];
+		var settings = JSON.parse(fs.readFileSync("/root/userdir/thethingbox.json"));
         var lngs = req.query.lng;
         namespace = namespace.replace(/\.json$/,"");
         var lang = req.query.lng; //determineLangFromHeaders(req.acceptsLanguages() || []);
+        if(typeof settings.lang === "string") {
+            switch(settings.lang) {
+                case "auto":
+                    lang = req.query.lng; //i18n.determineLangFromHeaders(req.acceptedLanguages || []);
+                    break;
+                default:
+                    lang = settings.lang;
+                    break;
+            }
+        }
         var prevLang = i18n.i.lng();
         // Trigger a load from disk of the language if it is not the default
         i18n.i.setLng(lang, function(){
diff -ruN node-red-src/red/api/theme.js node-red-src_ttb/red/api/theme.js
--- node-red-src/red/api/theme.js	2017-09-27 10:53:14.728980598 +0000
+++ node-red-src_ttb/red/api/theme.js	2017-09-26 15:24:31.217975700 +0000
@@ -31,9 +31,52 @@
         image: "red/images/node-red.png"
     },
     asset: {
-        red: (process.env.NODE_ENV == "development")? "red/red.js":"red/red.min.js",
-        main: (process.env.NODE_ENV == "development")? "red/main.js":"red/main.min.js",
-
+        red: "red/red.js",
+        red_main: "red/main.js",
+        red_events: "red/events.js",
+        red_i18n: "red/i18n.js",
+        red_settings: "red/settings.js",
+        red_user: "red/user.js",
+        red_comms: "red/comms.js",
+        red_text_bidi: "red/text/bidi.js",
+        red_text_format: "red/text/format.js",
+        red_ui_state: "red/ui/state.js",
+        red_nodes: "red/nodes.js",
+        red_history: "red/history.js",
+        red_validators: "red/validators.js",
+        red_ui_utils: "red/ui/utils.js",
+        red_ui_common_editableList: "red/ui/common/editableList.js",
+		red_ui_common_checkboxSet: "red/ui/common/checkboxSet.js",
+        red_ui_common_menu: "red/ui/common/menu.js",
+		red_ui_common_panels: "red/ui/common/panels.js",
+        red_ui_common_popover: "red/ui/common/popover.js",
+        red_ui_common_searchBox: "red/ui/common/searchBox.js",
+        red_ui_common_tabs: "red/ui/common/tabs.js",
+		red_ui_common_stack: "red/ui/common/stack.js",
+        red_ui_common_typedInput: "red/ui/common/typedInput.js",
+        red_ui_actions: "red/ui/actions.js",
+        red_ui_deploy: "red/ui/deploy.js",
+        red_ui_diff: "red/ui/diff.js",
+        red_ui_keyboard: "red/ui/keyboard.js",
+        red_ui_workspaces: "red/ui/workspaces.js",
+        red_ui_view: "red/ui/view.js",
+        red_ui_sidebar: "red/ui/sidebar.js",
+        red_ui_palette: "red/ui/palette.js",
+        red_ui_tab_info: "red/ui/tab-info.js",
+        red_ui_tab_config: "red/ui/tab-config.js",
+        red_ui_palette_editor: "red/ui/palette-editor.js",
+        red_ui_npm: "red/ui/npm.js",
+        red_ui_editor: "red/ui/editor.js",
+        red_ui_tray: "red/ui/tray.js",
+        red_ui_clipboard: "red/ui/clipboard.js",
+        red_ui_library: "red/ui/library.js",
+        red_ui_notifications: "red/ui/notifications.js",
+        red_ui_thingboxSettings: "red/ui/thingboxSettings.js",
+        red_ui_typeSearch: "red/ui/typeSearch.js",
+        red_ui_search: "red/ui/search.js",
+        red_ui_subflow: "red/ui/subflow.js",
+        red_ui_userSettings: "red/ui/userSettings.js",
+        red_ui_touch_radialMenu: "red/ui/touch/radialMenu.js"
     }
 };
 
diff -ruN node-red-src/red/runtime/index.js node-red-src_ttb/red/runtime/index.js
--- node-red-src/red/runtime/index.js	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/red/runtime/index.js	2017-09-26 15:24:30.301745100 +0000
@@ -56,6 +56,7 @@
 
 function init(userSettings,_adminApi) {
     userSettings.version = getVersion();
+    userSettings.timeout = 1200000;
     log.init(userSettings);
     settings.init(userSettings);
 
@@ -97,11 +98,32 @@
                     reportMetrics();
                 }, settings.runtimeMetricInterval||15000);
             }
-            log.info("\n\n"+log._("runtime.welcome")+"\n===================\n");
+            var ttbpackage = JSON.parse(fs.readFileSync("/root/thethingbox/package.json"));
+
+            var nodejsName = "Node.js";
+            var noderedName = "Node-RED";
+            var ttbName = ttbpackage.name || "";
+
+            var sizeOfLongestName = [nodejsName,noderedName,ttbName].sort(function (a, b) { return b.length - a.length; })[0].length;
+            var padName = Array(sizeOfLongestName+1).join(' ');
+            nodejsName = (nodejsName + padName).substring(0, padName.length);
+            noderedName = (noderedName + padName).substring(0, padName.length);
+            ttbName = (ttbName + padName).substring(0, padName.length);
+
+            var splitter = "";
+            var welcomeName = "    " + log._("runtime.welcome") + "    ";
+            var padSplitter = Array(welcomeName.length+1).join('=');
+            splitter = (splitter + padSplitter).substring(0, padSplitter.length);
+
+            console.log("\n\n"+splitter+"\n"+welcomeName+"\n"+splitter);
+
+            if (ttbpackage.version && ttbpackage.name) {                
+                log.info(log._("runtime.version",{component:ttbName, version:"v"+ttbpackage.version}));
+            }
             if (settings.version) {
-                log.info(log._("runtime.version",{component:"Node-RED",version:"v"+settings.version}));
+                log.info(log._("runtime.version",{component:noderedName,version:"v"+settings.version}));
             }
-            log.info(log._("runtime.version",{component:"Node.js ",version:process.version}));
+            log.info(log._("runtime.version",{component:nodejsName,version:process.version}));
             if (settings.UNSUPPORTED_VERSION) {
                 log.error("*****************************************************************");
                 log.error("* "+log._("runtime.unsupported_version",{component:"Node.js",version:process.version,requires: ">=4"})+" *");
@@ -155,9 +177,6 @@
                 if (settings.settingsFile) {
                     log.info(log._("runtime.paths.settings",{path:settings.settingsFile}));
                 }
-                if (settings.httpStatic) {
-                    log.info(log._("runtime.paths.httpStatic",{path:path.resolve(settings.httpStatic)}));
-                }
                 redNodes.loadFlows().then(redNodes.startFlows);
                 started = true;
             }).otherwise(function(err) {
diff -ruN node-red-src/red/runtime/locales/en-US/runtime.json node-red-src_ttb/red/runtime/locales/en-US/runtime.json
--- node-red-src/red/runtime/locales/en-US/runtime.json	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/red/runtime/locales/en-US/runtime.json	2017-09-26 15:24:30.303720800 +0000
@@ -4,8 +4,7 @@
         "version": "__component__ version: __version__",
         "unsupported_version": "Unsupported version of __component__. Requires: __requires__ Found: __version__",
         "paths": {
-            "settings": "Settings file  : __path__",
-            "httpStatic": "HTTP Static    : __path__"
+            "settings": "Settings file  : __path__"
         }
     },
 
diff -ruN node-red-src/red/runtime/nodes/flows/index.js node-red-src_ttb/red/runtime/nodes/flows/index.js
--- node-red-src/red/runtime/nodes/flows/index.js	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/red/runtime/nodes/flows/index.js	2017-09-26 15:24:30.685250600 +0000
@@ -31,6 +31,7 @@
 
 var storage = null;
 var settings = null;
+var comms = null;
 
 var activeConfig = null;
 var activeFlowConfig = null;
@@ -49,6 +50,7 @@
     }
     settings = runtime.settings;
     storage = runtime.storage;
+    comms = runtime.adminApi.comms;
     started = false;
     if (!typeEventRegistered) {
         events.on('type-registered',function(type) {
@@ -324,6 +326,7 @@
 
 function stop(type,diff,muteLog) {
     type = type||"full";
+    comms.publish("stopFlows",type,false);
     diff = diff||{
         added:[],
         changed:[],
diff -ruN node-red-src/red/runtime/nodes/index.js node-red-src_ttb/red/runtime/nodes/index.js
--- node-red-src/red/runtime/nodes/index.js	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/red/runtime/nodes/index.js	2017-09-26 15:24:30.534306400 +0000
@@ -31,6 +31,7 @@
 var events = require("../events");
 
 var settings;
+var comms;
 
 /**
  * Registers a node constructor
@@ -94,6 +95,7 @@
 
 function init(runtime) {
     settings = runtime.settings;
+    comms = runtime.adminApi.comms;
     log = runtime.log;
     credentials.init(runtime);
     flows.init(runtime);
@@ -107,6 +109,10 @@
     return registry.disableNode(id);
 }
 
+function addNodeToClients(n) {
+    comms.publish("addNode", n, false);
+}
+
 function uninstallModule(module) {
     var info = registry.getModuleInfo(module);
     if (!info) {
@@ -172,5 +178,8 @@
     addCredentials: credentials.add,
     getCredentials: credentials.get,
     deleteCredentials: credentials.delete,
-    getCredentialDefinition: credentials.getDefinition
+    getCredentialDefinition: credentials.getDefinition,
+
+    //
+    addNodeToClients: addNodeToClients
 };
diff -ruN node-red-src/red/runtime/nodes/Node.js node-red-src_ttb/red/runtime/nodes/Node.js
--- node-red-src/red/runtime/nodes/Node.js	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/red/runtime/nodes/Node.js	2017-09-26 15:24:30.531221300 +0000
@@ -26,6 +26,9 @@
 function Node(n) {
     this.id = n.id;
     this.type = n.type;
+    if(!n.hasOwnProperty("z")){
+        this.origin = n.origin || "";
+    }
     this.z = n.z;
     this._closeCallbacks = [];
 
diff -ruN node-red-src/red/runtime/nodes/registry/loader.js node-red-src_ttb/red/runtime/nodes/registry/loader.js
--- node-red-src/red/runtime/nodes/registry/loader.js	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/red/runtime/nodes/registry/loader.js	2017-09-26 15:24:30.562035000 +0000
@@ -72,7 +72,7 @@
         util: runtime.util,
         version: runtime.version,
     }
-    copyObjectProperties(runtime.nodes,red.nodes,["createNode","getNode","eachNode","addCredentials","getCredentials","deleteCredentials" ]);
+    copyObjectProperties(runtime.nodes,red.nodes,["createNode","getNode","eachNode","addCredentials","getCredentials","deleteCredentials","addNodeToClients" ]);
     red.nodes.registerType = function(type,constructor,opts) {
         runtime.nodes.registerType(node.id,type,constructor,opts);
     }
diff -ruN node-red-src/red/runtime/nodes/registry/localfilesystem.js node-red-src_ttb/red/runtime/nodes/registry/localfilesystem.js
--- node-red-src/red/runtime/nodes/registry/localfilesystem.js	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/red/runtime/nodes/registry/localfilesystem.js	2017-09-26 15:24:30.605881800 +0000
@@ -98,6 +98,8 @@
                 if (info) {
                     result.push(info);
                 }
+            } else if(fn === "flows.json") {
+                events.emit("node-flows-file", path.join(dir, fn));
             }
         } else if (stats.isDirectory()) {
             // Ignore /.dirs/, /lib/ /node_modules/
diff -ruN node-red-src/red/runtime/storage/localfilesystem.js node-red-src_ttb/red/runtime/storage/localfilesystem.js
--- node-red-src/red/runtime/storage/localfilesystem.js	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/red/runtime/storage/localfilesystem.js	2017-09-26 15:24:30.358610800 +0000
@@ -15,6 +15,7 @@
  **/
 
 var fs = require('fs-extra');
+var path = require("path");
 var when = require('when');
 var nodeFn = require('when/node/function');
 var keys = require('when/keys');
@@ -23,6 +24,8 @@
 
 var log = require("../log");
 
+var events = require("../events");
+
 var promiseDir = nodeFn.lift(mkdirp);
 
 var initialFlowLoadComplete = false;
@@ -38,6 +41,26 @@
 var libFlowsDir;
 var globalSettingsFile;
 
+var flowsFileList = {};
+
+function addFlowFile(file){
+    var p = fspath.resolve(file);
+    if(!flowsFileList[p]) {
+        flowsFileList[p] = [];
+    }
+}
+
+events.on("node-flows-file",function(f) {
+    addFlowFile(f);
+});
+
+var tabFileList = {};
+function addTabFile(tab,src) {
+    if(!tabFileList[tab]) {
+        tabFileList[tab] = src;
+    }
+}
+
 function getFileMeta(root,path) {
     var fn = fspath.join(root,path);
     var fd = fs.openSync(fn,"r");
@@ -45,64 +68,62 @@
     var meta = {};
     var read = 0;
     var length = 10;
-    var remaining = Buffer(0);
+    var remaining = "";
     var buffer = Buffer(length);
-    var idx = -1;
     while(read < size) {
         read+=fs.readSync(fd,buffer,0,length);
-        var data = Buffer.concat([remaining,buffer]);
-        while((idx = data.indexOf("\n")) != -1){
-            var part = data.slice(0,idx+1);
-            var match = /^\/\/ (\w+): (.*)/.exec(part.toString());
+        var data = remaining+buffer.toString();
+        var parts = data.split("\n");
+        remaining = parts.splice(-1);
+        for (var i=0;i<parts.length;i+=1) {
+            var match = /^\/\/ (\w+): (.*)/.exec(parts[i]);
             if (match) {
                 meta[match[1]] = match[2];
             } else {
                 read = size;
                 break;
             }
-            data = data.slice(idx+1);
         }
-        remaining = data;
     }
     fs.closeSync(fd);
     return meta;
 }
 
 function getFileBody(root,path) {
-    var body = Buffer(0);
+    var body = "";
     var fn = fspath.join(root,path);
     var fd = fs.openSync(fn,"r");
     var size = fs.fstatSync(fd).size;
     var scanning = true;
     var read = 0;
     var length = 50;
-    var remaining = Buffer(0);
+    var remaining = "";
     var buffer = Buffer(length);
-    var idx = -1;
     while(read < size) {
         var thisRead = fs.readSync(fd,buffer,0,length);
         read += thisRead;
         if (scanning) {
-            var data = Buffer.concat([remaining,buffer.slice(0,thisRead)]);
-            while((idx = data.indexOf("\n")) != -1){
-                var part = data.slice(0,idx+1);
-                if (! /^\/\/ \w+: /.test(part.toString())) {
+            var data = remaining+buffer.slice(0,thisRead).toString();
+            var parts = data.split("\n");
+            remaining = parts.splice(-1)[0];
+            for (var i=0;i<parts.length;i+=1) {
+                if (! /^\/\/ \w+: /.test(parts[i])) {
                     scanning = false;
-                    body = Buffer.concat([body,data]);
-                    break;
+                    body += parts[i]+"\n";
                 }
-                data = data.slice(idx+1);
             }
-            remaining = data;
-            if (scanning && read >= size) {
-                body = Buffer.concat([body,remaining]);
+            if (! /^\/\/ \w+: /.test(remaining)) {
+                scanning = false;
+            }
+            if (!scanning) {
+                body += remaining;
             }
         } else {
-            body = Buffer.concat([body,buffer.slice(0,thisRead)]);
+            body += buffer.slice(0,thisRead).toString();
         }
     }
     fs.closeSync(fd);
-    return body.toString();
+    return body;
 }
 
 /**
@@ -131,12 +152,12 @@
     return JSON.parse(data);
 }
 
-function readFile(path,backupPath,emptyResponse,type) {
+function readFile(path, backupPath, emptyResponse, type, addToList) {
     return when.promise(function(resolve) {
         fs.readFile(path,'utf8',function(err,data) {
             if (!err) {
                 if (data.length === 0) {
-                    log.warn(log._("storage.localfilesystem.empty",{type:type}));
+                    log.warn(log._("storage.localfilesystem.empty",{type:type}) + " : " + path);
                     try {
                         var backupStat = fs.statSync(backupPath);
                         if (backupStat.size === 0) {
@@ -162,14 +183,23 @@
                     }
                 }
                 try {
-                    return resolve(parseJSON(data));
+    	            var flow = parseJSON(data);
+    	            if(addToList){
+    	                for(var n in flow) {
+    	                    if(flow[n].type === "tab") {
+    	                        addTabFile(flow[n].id, path);
+    	                    }
+    	                    flow[n].origin = path;
+    	                }
+    	            }
+    	            return resolve(flow);
                 } catch(parseErr) {
-                    log.warn(log._("storage.localfilesystem.invalid",{type:type}));
+                    log.warn(log._("storage.localfilesystem.invalid",{type:type}) + " : " + path);
                     return resolve(emptyResponse);
                 }
             } else {
                 if (type === 'flow') {
-                    log.info(log._("storage.localfilesystem.create",{type:type}));
+                    log.info(log._("storage.localfilesystem.create",{type:type}) + " : " + path);
                 }
                 resolve(emptyResponse);
             }
@@ -234,12 +264,38 @@
         var ffBase = fspath.basename(flowsFullPath,ffExt);
         var ffDir = fspath.dirname(flowsFullPath);
 
+        function getLocalFlowsFiles (dir){            
+            var files = [];
+            try {
+                files = fs.readdirSync(dir);
+            }
+            catch(err) {
+                return;
+            }
+            files.sort();
+            files.forEach(function(fn) {
+                var stats = fs.statSync(path.join(dir,fn));
+                if (stats.isFile() && fn === "flows.json") {
+                    addFlowFile(path.join(dir, fn));
+                }else if (stats.isDirectory()) {
+                    getLocalFlowsFiles(path.join(dir,fn));
+                }
+            });
+        }
+
+        if(settings.flowDir){
+            getLocalFlowsFiles(settings.flowDir+"node_modules/");
+        }
+        if(settings.secondFlowDir){
+            getLocalFlowsFiles(settings.secondFlowDir);        
+        }
+
         credentialsFile = fspath.join(settings.userDir,ffBase+"_cred"+ffExt);
         credentialsFileBackup = fspath.join(settings.userDir,"."+ffBase+"_cred"+ffExt+".backup");
 
         oldCredentialsFile = fspath.join(settings.userDir,"credentials.json");
 
-        flowsFileBackup = fspath.join(ffDir,"."+ffName+".backup");
+        flowsFileBackup = fspath.join(ffDir, ffName+".backup");
 
         sessionsFile = fspath.join(settings.userDir,".sessions.json");
 
@@ -270,36 +326,84 @@
     },
 
     getFlows: function() {
-        if (!initialFlowLoadComplete) {
-            initialFlowLoadComplete = true;
-            log.info(log._("storage.localfilesystem.user-dir",{path:settings.userDir}));
-            log.info(log._("storage.localfilesystem.flows-file",{path:flowsFullPath}));
-        }
-        return readFile(flowsFullPath,flowsFileBackup,[],'flow');
+        return when.promise(function(resolve) {
+            if (!initialFlowLoadComplete) {
+                initialFlowLoadComplete = true;
+                log.info(log._("storage.localfilesystem.user-dir",{path:settings.userDir}));
+                log.info("Flows file : ");
+                console.log("\t\t\t\t", flowsFullPath);		
+                for(var i in flowsFileList) {
+                    console.log("\t\t\t\t", i);
+                }
+            }
+            var promises = [];
+            var promise = readFile(flowsFullPath, flowsFileBackup, [], 'flow', false);
+            promises.push(promise);
+            for(var i in flowsFileList) {
+                promise = readFile(i, i+".backup",[],'flow', true);
+                promises.push(promise);
+            }
+
+            when.settle(promises).then(function(descriptors) {
+                var flows = [];
+                for(var i in descriptors) {
+                    Array.prototype.push.apply(flows, descriptors[i].value);
+                }
+                resolve(flows);
+            });
+        });
     },
 
     saveFlows: function(flows) {
         if (settings.readOnly) {
             return when.resolve();
         }
+        return when.promise(function(resolve, reject) {
+            var promises = [];
+            for(var i in flowsFileList) {
+                flowsFileList[i] = [];
+            }
+
+            var userFlows = [];
+            for(var j in flows) {
+                var n = flows[j];
+                if (n.hasOwnProperty("origin")) {
+                    addFlowFile(n.origin);
+                    flowsFileList[n.origin].push(n);
+                } else if(n.hasOwnProperty("z") && tabFileList.hasOwnProperty(n.z) ){
+                    addFlowFile(tabFileList[n.z]);
+                    flowsFileList[tabFileList[n.z]].push(n);
+                } else if(n.hasOwnProperty("type") && n.hasOwnProperty("id") && n.type === "tab" && tabFileList.hasOwnProperty(n.id) ){
+                    flowsFileList[tabFileList[n.id]].push(n);
+                }else {
+                    userFlows.push(n);                    
+                }
+            }
 
-        try {
-            fs.renameSync(flowsFullPath,flowsFileBackup);
-        } catch(err) {
-        }
+            var flowData;
+
+            for(var i in flowsFileList) {
+                flowData = settings.flowFilePretty ? JSON.stringify(flowsFileList[i], null, 4) : JSON.stringify(flowsFileList[i]);
+                if(localfilesystem.isValidFlowFile(i)) {
+                    fs.renameSync(i, i + ".backup");
+                }
+                promises.push(writeFile(i, flowData));
+            }
 
-        var flowData;
+            if (localfilesystem.isValidFlowFile(flowsFullPath)) {
+                fs.renameSync(flowsFullPath,flowsFileBackup);
+            }
+            flowData = settings.flowFilePretty ? JSON.stringify(userFlows, null, 4) : JSON.stringify(userFlows);
 
-        if (settings.flowFilePretty) {
-            flowData = JSON.stringify(flows,null,4);
-        } else {
-            flowData = JSON.stringify(flows);
-        }
-        return writeFile(flowsFullPath, flowData);
+            promises.push(writeFile(flowsFullPath, flowData));
+            when.settle(promises).then(function(descriptors) {
+                return resolve();
+            });
+        });
     },
 
     getCredentials: function() {
-        return readFile(credentialsFile,credentialsFileBackup,{},'credentials');
+        return readFile(credentialsFile,credentialsFileBackup,{},'credentials', false);
     },
 
     saveCredentials: function(credentials) {
@@ -437,6 +541,20 @@
         return promiseDir(fspath.dirname(fn)).then(function () {
             writeFile(fn,headers+body);
         });
+    },
+    
+    isValidFlowFile:function(path){
+        var bool = false;
+        if (fs.existsSync(path)){
+            var flow = fs.readFileSync(path,"utf8");
+            try {
+                if (flow.trim() != "[]") {
+                    flow = parseJSON(flow);
+                    bool = true;
+                }
+            } catch(e){ }
+        }
+        return bool;
     }
 };
 
diff -ruN node-red-src/red/runtime/util.js node-red-src_ttb/red/runtime/util.js
--- node-red-src/red/runtime/util.js	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/red/runtime/util.js	2017-09-26 15:24:30.775751400 +0000
@@ -338,7 +338,7 @@
         return node.context().flow.get(val);
     });
     expr.assign('globalContext',function(val) {
-        return node.context().global.get(val);
+        return node.context().global(val);
     });
     expr._legacyMode = /(^|[^a-zA-Z0-9_'"])msg([^a-zA-Z0-9_'"]|$)/.test(value);
     return expr;
diff -ruN node-red-src/settings.js node-red-src_ttb/settings.js
--- node-red-src/settings.js	2017-09-27 10:53:14.738980534 +0000
+++ node-red-src_ttb/settings.js	2017-09-26 15:24:31.286209300 +0000
@@ -19,8 +19,9 @@
 //var fs = require("fs");
 
 module.exports = {
-    // the tcp port that the Node-RED web server is listening on
-    uiPort: process.env.PORT || 1880,
+    // the tcp port that the Node-RED web server is listening on    
+    // Overwriten by TheThingBox. Read the /root/thethingbox/thethingbox.js file
+    //uiPort: process.env.PORT || 1880,
 
     // By default, the Node-RED UI accepts connections on all IPv4 interfaces.
     // The following property can be used to listen on a specific interface. For
@@ -45,7 +46,7 @@
     //httpRequestTimeout: 120000,
 
     // The maximum length, in characters, of any message sent to the debug sidebar tab
-    debugMaxLength: 1000,
+    debugMaxLength: 2000,
 
     // To disable the option for using local files for storing keys and certificates in the TLS configuration
     //  node, set this to true
@@ -55,10 +56,12 @@
     //debugUseColors: true,
 
     // The file containing the flows. If not set, it defaults to flows_<hostname>.json
+    // Overwriten by TheThingBox. Read the /root/thethingbox/thethingbox.js file
     //flowFile: 'flows.json',
 
     // To enabled pretty-printing of the flow within the flow file, set the following
     //  property to true:
+    // Overwriten by TheThingBox. Read the /root/thethingbox/thethingbox.js file
     //flowFilePretty: true,
 
     // By default, credentials are encrypted in storage using a generated key. To
@@ -67,10 +70,11 @@
     // Note: once you set this property, do not change it - doing so will prevent
     // node-red from being able to decrypt your existing credentials and they will be
     // lost.
-    //credentialSecret: "a-secret-key",
+    credentialSecret: "TheThingBoxKey",
 
     // By default, all user data is stored in the Node-RED install directory. To
     // use a different location, the following property can be used
+    // Overwriten by TheThingBox. Read the /root/thethingbox/thethingbox.js file
     //userDir: '/home/nol/.node-red/',
 
     // Node-RED scans the `nodes` directory in the install directory to find nodes.
@@ -78,14 +82,16 @@
     //nodesDir: '/home/nol/.node-red/nodes',
 
     // By default, the Node-RED UI is available at http://localhost:1880/
-    // The following property can be used to specify a different root path.
+    // The following property can be used to specifiy a different root path.
     // If set to false, this is disabled.
+    // Overwriten by TheThingBox. Read the /root/thethingbox/thethingbox.js file
     //httpAdminRoot: '/admin',
 
     // Some nodes, such as HTTP In, can be used to listen for incoming http requests.
     // By default, these are served relative to '/'. The following property
     // can be used to specifiy a different root path. If set to false, this is
     // disabled.
+    // Overwriten by TheThingBox. Read the /root/thethingbox/thethingbox.js file
     //httpNodeRoot: '/red-nodes',
 
     // The following property can be used in place of 'httpAdminRoot' and 'httpNodeRoot',
@@ -149,6 +155,7 @@
     // in the HTTP nodes.
     // See https://github.com/troygoode/node-cors#configuration-options for
     // details on its contents. The following is a basic permissive set of options:
+    // Overwriten by TheThingBox. Read the /root/thethingbox/thethingbox.js file
     //httpNodeCors: {
     //    origin: "*",
     //    methods: "GET,PUT,POST,DELETE"
@@ -196,18 +203,20 @@
     //    functionGlobalContext: { os:require('os') }
     // can be accessed in a function block as:
     //    context.global.os
+    // Overwriten by TheThingBox. Read the /root/thethingbox/thethingbox.js file
 
-    functionGlobalContext: {
+    //functionGlobalContext: {
         // os:require('os'),
         // octalbonescript:require('octalbonescript'),
         // jfive:require("johnny-five"),
         // j5board:require("johnny-five").Board({repl:false})
-    },
+    //},
 
     // The following property can be used to order the categories in the editor
     // palette. If a node's category is not in the list, the category will get
     // added to the end of the palette.
     // If not set, the following default order is used:
+    // Overwriten by TheThingBox. Read the /root/thethingbox/thethingbox.js file
     //paletteCategories: ['subflows', 'input', 'output', 'function', 'social', 'mobile', 'storage', 'analysis', 'advanced'],
 
     // Configure the logging output
diff -ruN node-red-src/test/nodes/core/core/80-template_spec.js node-red-src_ttb/test/nodes/core/core/80-template_spec.js
--- node-red-src/test/nodes/core/core/80-template_spec.js	2017-09-27 10:53:14.748980470 +0000
+++ node-red-src_ttb/test/nodes/core/core/80-template_spec.js	2017-09-26 15:24:20.882085200 +0000
@@ -88,18 +88,6 @@
         });
     });
 
-    it('should handle escape characters in Mustache format and JSON output mode', function(done) {
-        var flow = [{id:"n1", type:"template", field:"payload", syntax:"mustache", template:"{\"data\":\"{{payload}}\"}", output:"json", wires:[["n2"]]},{id:"n2",type:"helper"}];
-        helper.load(templateNode, flow, function() {
-            var n1 = helper.getNode("n1");
-            var n2 = helper.getNode("n2");
-            n2.on("input", function(msg) {
-                msg.payload.should.have.property('data', 'line\t1\nline\\2\r\nline\b3\f');
-                done();
-            });
-            n1.receive({payload:"line\t1\nline\\2\r\nline\b3\f"});
-        });
-    });
 
     it('should modify payload in plain text mode', function(done) {
         var flow = [{id:"n1", type:"template", field:"payload", syntax:"plain", template:"payload={{payload}}",wires:[["n2"]]},{id:"n2",type:"helper"}];
diff -ruN node-red-src/ttbsystemflow/about.json node-red-src_ttb/ttbsystemflow/about.json
--- node-red-src/ttbsystemflow/about.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/about.json	2017-09-26 15:24:23.235685200 +0000
@@ -0,0 +1,86 @@
+
+    {
+        "id": "2434f3ce.15072c",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/about",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 120,
+        "y": 2220,
+        "wires": [
+            [
+                "53df859f.d287a4"
+            ]
+        ]
+    },
+    {
+        "id": "53df859f.d287a4",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "ttb package.json",
+        "filename": "/root/thethingbox/package.json",
+        "format": "utf8",
+        "x": 310,
+        "y": 2220,
+        "wires": [
+            [
+                "7400b62c.efc9d8"
+            ]
+        ]
+    },
+    {
+        "id": "1d3328bd.b8611f",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 710,
+        "y": 2220,
+        "wires": []
+    },
+    {
+        "id": "322d3a98.99b09e",
+        "type": "template",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "field": "payload",
+        "format": "handlebars",
+        "template": "<div class=\"setting-board ui-dialog ui-widget ui-widget-content\">\n    <div style=\"text-align: center;display: block; width: auto;\"\n\t\tid=\"dialog\" class=\"hide ui-dialog-content ui-widget-content\">\n        <b style=\"text-transform:uppercase;\">{{payload.name}}</b><br>\n        <span id=\"about_current\"></span><code>{{payload.version}}</code><br>\n        <a target=\"_blank\" href=\"{{payload.homepage}}\">© <span id=\"year\"></span> Digital Airways</a>\n    </div>\n</div>\n\n<script>\n    $(\"#about_current\").html(RED._(\"settings.about.current\"));\n    $(\"#year\").html(new Date().getFullYear());\n</script>",
+        "x": 590,
+        "y": 2220,
+        "wires": [
+            [
+                "1d3328bd.b8611f"
+            ]
+        ]
+    },
+    {
+        "id": "7400b62c.efc9d8",
+        "type": "json",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 470,
+        "y": 2220,
+        "wires": [
+            [
+                "322d3a98.99b09e"
+            ]
+        ]
+    },
+    {
+        "id": "6ccfb7f9.7ad16",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "About form",
+        "info": "",
+        "x": 100,
+        "y": 2180,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/account.ejs node-red-src_ttb/ttbsystemflow/account.ejs
--- node-red-src/ttbsystemflow/account.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/account.ejs	2017-09-26 15:24:23.228782300 +0000
@@ -0,0 +1,124 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+	tabindex="-1"
+	class="setting-board ui-dialog ui-widget ui-widget-content">
+
+	<div
+		class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+		<span class="ui-dialog-title" id="ui-id-4">
+            <span id="account_title"></span>
+        </span>
+	</div>
+	
+	<div
+		style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+		id="dialog" class="hide ui-dialog-content ui-widget-content">
+		<form id="account-form" class="form-horizontal">
+			
+			<p style="font-family:Verdana; font-size:12px;" id="account_msg"></p>
+			
+			<div id="change-account-container">
+				<div class="form-row">
+					<label for="change-password-input"><i class="icon-tag"></i>
+                        <span id="account_mail"></span>
+                    </label>
+					<input id="change-account-input-email" type="text" name="email">
+				</div>
+				<div class="form-row">
+					<label for="change-password-input"><i class="icon-lock"></i>
+                        <span id="account_password"></span>
+                    </label>
+					<input id="change-account-input-pwd" type="password" name="pwd">
+				</div>
+				<input id="change-account-input-ttb_name" type="hidden" name="ttb_name">
+				<input id="change-account-input-ttb_id" type="hidden" name="id">
+				<input id="change-account-input-account_id" type="hidden" name="account_id">
+			</div>
+
+			<div class="form-tips note"></div>
+		</form>
+	</div>
+	<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
+		<div class="ui-dialog-buttonset">
+			<button aria-disabled="false" role="button" id="account-submit" 
+                class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only false_pwd">
+				OK
+			</button>
+		</div>
+	</div>
+
+</div>
+
+<div id="ttb-account"></div>
+
+
+<script>
+    $("#account_title").html(RED._("settings.account.title"));
+    $("#account_msg").html(RED._("settings.account.msg"));
+    $("#account_mail").html(RED._("settings.account.mail"));
+    $("#account_password").html(RED._("settings.account.password"));
+    
+	$("#change-account-container").ready(function() {
+		$.ajax({
+	       url : 'current-account',
+	       type : 'GET',
+	       dataType : 'html',
+	       success : function(data, statut){
+				data = JSON.parse(data);
+				// update form value
+				$("#change-account-input-ttb_name").val(data.ttb_name);
+				$("#change-account-input-ttb_id").val(data.id);
+				$("#change-account-input-email").val(data.email);
+                if($("#change-account-input-email").val() != ""){
+                    $("#change-account-input-pwd").val("........");
+                }
+				$("#change-account-input-account_id").val(data.account_id);
+                $(".false_pwd").button({ disabled: true });
+			},
+			error : function(result, statut, error){
+				alert(error);
+			}
+	    });
+	});
+
+
+	$("#account-submit").click(function(event){
+		var pwd = $("#change-account-input-pwd").val();
+		var email = $("#change-account-input-email").val();
+		if((!pwd || pwd == "") && (!email || email == "")) {
+			return RED.notify("Some informations are missing !", "error");
+		}
+		var datas = {
+			email: email,
+			pwd: pwd,
+			ttb_name: $("#change-account-input-ttb_name").val(),
+			id: $("#change-account-input-ttb_id").val(),
+			account_id: $("#change-account-input-account_id").val()
+		};
+		$.ajax({
+			url : 'account-id',
+		    type: 'POST',
+		    data: datas ,
+	        success : function(code_html, statut){
+	        	if(code_html.code == 200){
+	        	    RED.notify("Information updated !","success");
+	        	} else if (code_html.code == 304) {
+	        	    RED.notify("Nothing to update !","success");
+	        	} else {
+	        	    RED.notify("Bad password !","error");
+	        	}
+	        },
+	        error : function(result, statut, error){
+	        }
+		});
+	});
+    
+    $("#change-account-input-pwd").on("keyup", function() {
+        var value =  $("#change-account-input-pwd").val();
+        if(value === "........" || !value){
+            $( ".false_pwd" ).button({ disabled: true });
+        }
+        else{
+            $( ".false_pwd" ).button({ disabled: false });
+        }
+    });
+</script>
diff -ruN node-red-src/ttbsystemflow/account.json node-red-src_ttb/ttbsystemflow/account.json
--- node-red-src/ttbsystemflow/account.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/account.json	2017-09-26 15:24:23.207765400 +0000
@@ -0,0 +1,459 @@
+
+    {
+        "id": "51a406c8.804ba8",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Account form",
+        "info": "",
+        "x": 110,
+        "y": 1660,
+        "wires": []
+    },
+    {
+        "id": "3359ce36.62a5d2",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/account",
+        "method": "get",
+        "x": 130,
+        "y": 1700,
+        "wires": [
+            [
+                "832b940f.c3c7c"
+            ]
+        ]
+    },
+    {
+        "id": "6394fd85.ca9f2c",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/current-account",
+        "method": "get",
+        "x": 150,
+        "y": 1740,
+        "wires": [
+            [
+                "6d81de6f.63034"
+            ]
+        ]
+    },
+    {
+        "id": "eedbb720.753358",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 430,
+        "y": 1700,
+        "wires": []
+    },
+    {
+        "id": "a3431c3b.cb98b8",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "read settings",
+        "filename": "/root/userdir/thethingbox.json",
+        "format": "utf8",
+        "x": 950,
+        "y": 1740,
+        "wires": [
+            [
+                "dae6e4be.ad4ab8"
+            ]
+        ]
+    },
+    {
+        "id": "6d81de6f.63034",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/etc/hostname",
+        "format": "utf8",
+        "x": 360,
+        "y": 1740,
+        "wires": [
+            [
+                "9c1c5842.a90b7"
+            ]
+        ]
+    },
+    {
+        "id": "d9d90fa5.e88798",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 1270,
+        "y": 1740,
+        "wires": []
+    },
+    {
+        "id": "dae6e4be.ad4ab8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "create payload",
+        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.payload.ttb_name = msg.ttb_name;\nmsg.payload.id = msg.uuid;\nreturn msg;",
+        "outputs": 1,
+        "x": 1120,
+        "y": 1740,
+        "wires": [
+            [
+                "d9d90fa5.e88798"
+            ]
+        ]
+    },
+    {
+        "id": "9c1c5842.a90b7",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "ttb_name",
+        "func": "msg.ttb_name = msg.payload.replace(\"\\n\",\"\");\nif (typeof msg.ttb_name === 'string') {\n    msg.ttb_name = msg.ttb_name.toLowerCase();\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 520,
+        "y": 1740,
+        "wires": [
+            [
+                "5c5258d0.a3ada8"
+            ]
+        ]
+    },
+    {
+        "id": "5c5258d0.a3ada8",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "read uuid",
+        "filename": "/root/settings.json",
+        "format": "utf8",
+        "x": 660,
+        "y": 1740,
+        "wires": [
+            [
+                "ceefb180.31105"
+            ]
+        ]
+    },
+    {
+        "id": "ceefb180.31105",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "get uuid",
+        "func": "msg.uuid = JSON.parse(msg.payload).id;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 800,
+        "y": 1740,
+        "wires": [
+            [
+                "a3431c3b.cb98b8"
+            ]
+        ]
+    },
+    {
+        "id": "91409b74.2b01f8",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/account-id",
+        "method": "post",
+        "x": 140,
+        "y": 1840,
+        "wires": [
+            [
+                "abf4e7c0.4e36"
+            ]
+        ]
+    },
+    {
+        "id": "abf4e7c0.4e36",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Decode payload",
+        "func": "msg.payload.ttb_id = msg.payload.id;\ndelete msg.payload.id;\nmsg.values = msg.payload;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 340,
+        "y": 1840,
+        "wires": [
+            [
+                "5f97964b.09b928"
+            ]
+        ]
+    },
+    {
+        "id": "8ba04589.10c338",
+        "type": "http request",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "method": "POST",
+        "ret": "txt",
+        "url": "http://mythingbox.io/api/V3/account/get",
+        "x": 690,
+        "y": 1880,
+        "wires": [
+            [
+                "e33b9779.d205e"
+            ]
+        ]
+    },
+    {
+        "id": "b8d725fe.41f9d",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Account ID",
+        "info": "",
+        "x": 100,
+        "y": 1800,
+        "wires": []
+    },
+    {
+        "id": "7336edd2.d92d9c",
+        "type": "file",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "write",
+        "filename": "/root/userdir/thethingbox.json",
+        "appendNewline": false,
+        "overwriteFile": "true",
+        "x": 1750,
+        "y": 1900,
+        "wires": []
+    },
+    {
+        "id": "75a4c87c.29f608",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "process api response",
+        "func": "msg.headers = { \"Content-Type\": \"application/json\" };\nmsg.account_id = msg.payload.account_id;\nmsg.code = msg.payload.code;\nmsg.payload = msg.values;\nmsg.payload.account_id = msg.account_id;\nmsg.payload.id = msg.payload.ttb_id;\nmsg.payload.code = msg.code;\ndelete msg.payload.ttb_id;\ndelete msg.payload.rsaKey;\nmsg.values = msg.payload;\nif (msg.code == 200 || msg.code == 304){\n    return [msg,msg];\n} else {\n    return [msg,null];\n}",
+        "outputs": 2,
+        "noerr": 0,
+        "x": 1220,
+        "y": 1880,
+        "wires": [
+            [
+                "b662d472.7db38"
+            ],
+            [
+                "a4fb190e.139e9"
+            ]
+        ]
+    },
+    {
+        "id": "b662d472.7db38",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 1390,
+        "y": 1860,
+        "wires": []
+    },
+    {
+        "id": "a4fb190e.139e9",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "read",
+        "filename": "/root/userdir/thethingbox.json",
+        "format": "utf8",
+        "x": 1390,
+        "y": 1900,
+        "wires": [
+            [
+                "d11739b6.d4c0a"
+            ]
+        ]
+    },
+    {
+        "id": "d11739b6.d4c0a",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "to write thethingbox.json",
+        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.payload.email = msg.values.email;\nmsg.payload.account_id = msg.values.account_id;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1570,
+        "y": 1900,
+        "wires": [
+            [
+                "7336edd2.d92d9c"
+            ]
+        ]
+    },
+    {
+        "id": "832b940f.c3c7c",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Account",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/account.ejs",
+        "reloadfile": true,
+        "x": 300,
+        "y": 1700,
+        "wires": [
+            [
+                "eedbb720.753358"
+            ]
+        ]
+    },
+    {
+        "id": "eee954d5.2bfa",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "add public key",
+        "func": "msg.values.rsaKey = msg.payload;\nmsg.values.device = {};\nmsg.values.device.type = msg.device.name;\nmsg.values.device.version = msg.device.version;\nmsg.payload = JSON.stringify(msg.values);\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 340,
+        "y": 1880,
+        "wires": [
+            [
+                "743df4d2.32e25c"
+            ]
+        ]
+    },
+    {
+        "id": "743df4d2.32e25c",
+        "type": "cryptomessage",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "action": "encrypt",
+        "method": "rsa",
+        "target": "payload",
+        "rsa_useTTBKey": false,
+        "rsa_useServerKey": true,
+        "x": 520,
+        "y": 1880,
+        "wires": [
+            [
+                "8ba04589.10c338"
+            ]
+        ]
+    },
+    {
+        "id": "e33b9779.d205e",
+        "type": "cryptomessage",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "action": "decrypt",
+        "method": "rsa",
+        "target": "payload",
+        "rsa_useTTBKey": false,
+        "rsa_useServerKey": true,
+        "x": 860,
+        "y": 1880,
+        "wires": [
+            [
+                "b715ab43.6cf0d"
+            ]
+        ]
+    },
+    {
+        "id": "b715ab43.6cf0d",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "extract infos",
+        "func": "try{\n    msg.payload = JSON.parse(msg.payload);\n}catch(e){\n    \n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1030,
+        "y": 1880,
+        "wires": [
+            [
+                "75a4c87c.29f608"
+            ]
+        ]
+    },
+    {
+        "id": "607157c5.6698a8",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "read",
+        "filename": "/root/certs/my-ttb.pub",
+        "format": "utf8",
+        "x": 990,
+        "y": 1840,
+        "wires": [
+            [
+                "eee954d5.2bfa"
+            ]
+        ]
+    },
+    {
+        "id": "5f97964b.09b928",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "ttb package.json",
+        "filename": "/root/thethingbox/package.json",
+        "format": "utf8",
+        "x": 530,
+        "y": 1840,
+        "wires": [
+            [
+                "8bd2b816.122fe8"
+            ]
+        ]
+    },
+    {
+        "id": "8bd2b816.122fe8",
+        "type": "json",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 690,
+        "y": 1840,
+        "wires": [
+            [
+                "265e2e14.1843ba"
+            ]
+        ]
+    },
+    {
+        "id": "265e2e14.1843ba",
+        "type": "change",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "rules": [
+            {
+                "t": "set",
+                "p": "device",
+                "to": "msg.payload"
+            }
+        ],
+        "action": "",
+        "property": "",
+        "from": "",
+        "to": "",
+        "reg": false,
+        "x": 840,
+        "y": 1840,
+        "wires": [
+            [
+                "607157c5.6698a8"
+            ]
+        ]
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/account-password.json node-red-src_ttb/ttbsystemflow/account-password.json
--- node-red-src/ttbsystemflow/account-password.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/account-password.json	2017-09-26 15:24:23.209771500 +0000
@@ -0,0 +1,180 @@
+
+    {
+        "id": "c0a77008.2a0f2",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/account-pwd",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 140,
+        "y": 3000,
+        "wires": [
+            [
+                "46a2d218.f1f984"
+            ]
+        ]
+    },
+    {
+        "id": "46a2d218.f1f984",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.values = {};\nmsg.values.ttb_name = msg.req.param(\"ttb_name\");\nmsg.values.email = msg.req.param(\"email\");\nmsg.values.pwd = msg.req.param(\"pwd\");\nmsg.values.verif = msg.req.param(\"verif\");\nmsg.filename = \"/root/certs/my-ttb.pub\"\nmsg.new_name = msg.req.param(\"new_name\").toLowerCase();\n\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 310,
+        "y": 3000,
+        "wires": [
+            [
+                "67390810.ee0478"
+            ]
+        ]
+    },
+    {
+        "id": "67390810.ee0478",
+        "type": "cryptomessage",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "action": "encrypt",
+        "method": "rsa",
+        "target": "new_name",
+        "rsa_useTTBKey": true,
+        "rsa_useServerKey": false,
+        "x": 460,
+        "y": 3000,
+        "wires": [
+            [
+                "47bc833b.b8437c"
+            ]
+        ]
+    },
+    {
+        "id": "47bc833b.b8437c",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "",
+        "format": "utf8",
+        "x": 610,
+        "y": 3000,
+        "wires": [
+            [
+                "315a7846.5c4af8"
+            ]
+        ]
+    },
+    {
+        "id": "315a7846.5c4af8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "add public key",
+        "func": "msg.values.rsaKey = msg.payload;\nmsg.values.new_name = msg.new_name;\nmsg.payload = JSON.stringify(msg.values);\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 760,
+        "y": 3000,
+        "wires": [
+            [
+                "8464e45f.7b9b18"
+            ]
+        ]
+    },
+    {
+        "id": "8464e45f.7b9b18",
+        "type": "cryptomessage",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "action": "encrypt",
+        "method": "rsa",
+        "target": "payload",
+        "rsa_useTTBKey": false,
+        "rsa_useServerKey": true,
+        "x": 940,
+        "y": 3000,
+        "wires": [
+            [
+                "7e4f3a1a.092f64"
+            ]
+        ]
+    },
+    {
+        "id": "7e4f3a1a.092f64",
+        "type": "http request",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "method": "POST",
+        "ret": "txt",
+        "url": "http://mythingbox.io/api/V3/account/get",
+        "x": 1110,
+        "y": 3000,
+        "wires": [
+            [
+                "46181c24.d5178c"
+            ]
+        ]
+    },
+    {
+        "id": "46181c24.d5178c",
+        "type": "cryptomessage",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "action": "decrypt",
+        "method": "rsa",
+        "target": "payload",
+        "rsa_useTTBKey": false,
+        "rsa_useServerKey": true,
+        "x": 1280,
+        "y": 3000,
+        "wires": [
+            [
+                "be694308.2ec188"
+            ]
+        ]
+    },
+    {
+        "id": "be694308.2ec188",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "extract infos",
+        "func": "msg.headers = {\"Access-Control-Allow-Origin\" : \"*\"};\ntry{\n    msg.payload = JSON.parse(msg.payload);\n}catch(e){\n    \n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1450,
+        "y": 3000,
+        "wires": [
+            [
+                "c4bf80b9.b023"
+            ]
+        ]
+    },
+    {
+        "id": "c4bf80b9.b023",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 1590,
+        "y": 3000,
+        "wires": []
+    },
+    {
+        "id": "fdff8ca8.6c477",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Check account password",
+        "info": "",
+        "x": 150,
+        "y": 2960,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/api_cloud.json node-red-src_ttb/ttbsystemflow/api_cloud.json
--- node-red-src/ttbsystemflow/api_cloud.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/api_cloud.json	2017-09-26 15:24:23.282650200 +0000
@@ -0,0 +1,387 @@
+
+    {
+        "id": "ed53270e.12acd8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "email",
+        "func": "msg.email = JSON.parse(msg.payload).email;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 890,
+        "y": 3400,
+        "wires": [
+            [
+                "b69a28b8.4965d8"
+            ]
+        ]
+    },
+    {
+        "id": "c23e0d9a.3dc1f",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "read settings",
+        "filename": "/root/userdir/thethingbox.json",
+        "format": "utf8",
+        "x": 750,
+        "y": 3400,
+        "wires": [
+            [
+                "ed53270e.12acd8"
+            ]
+        ]
+    },
+    {
+        "id": "abee4a32.5411b8",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/etc/hostname",
+        "format": "utf8",
+        "x": 440,
+        "y": 3400,
+        "wires": [
+            [
+                "29b4962e.d64b6a"
+            ]
+        ]
+    },
+    {
+        "id": "29b4962e.d64b6a",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "ttb_name",
+        "func": "msg.ttb_name = msg.payload.replace(\"\\n\",\"\");\nif (typeof msg.ttb_name === 'string') {\n    msg.ttb_name = msg.ttb_name.toLowerCase();\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 600,
+        "y": 3400,
+        "wires": [
+            [
+                "c23e0d9a.3dc1f"
+            ]
+        ]
+    },
+    {
+        "id": "52a5a2b8.ad5a5c",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "set email and ttb name",
+        "func": "msg.payload = {\n    \"email\":msg.email,\n    \"ttb_name\":msg.ttb_name\n};\n\nmsg.data = JSON.stringify(msg.data);\n\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1230,
+        "y": 3420,
+        "wires": [
+            [
+                "ac5f922f.53a07"
+            ]
+        ]
+    },
+    {
+        "id": "ac5f922f.53a07",
+        "type": "cryptomessage",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "action": "encrypt",
+        "method": "rsa",
+        "target": "data",
+        "rsa_useTTBKey": true,
+        "rsa_useServerKey": false,
+        "x": 1435,
+        "y": 3420,
+        "wires": [
+            [
+                "218ec111.de713e"
+            ]
+        ]
+    },
+    {
+        "id": "218ec111.de713e",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "add data to payload",
+        "func": "msg.payload.data = msg.data;\n\nmsg.payload = JSON.stringify(msg.payload);\n\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1240,
+        "y": 3458,
+        "wires": [
+            [
+                "6e70126f.918fec"
+            ]
+        ]
+    },
+    {
+        "id": "6e70126f.918fec",
+        "type": "cryptomessage",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "action": "encrypt",
+        "method": "rsa",
+        "target": "payload",
+        "rsa_useTTBKey": false,
+        "rsa_useServerKey": true,
+        "x": 1436,
+        "y": 3458,
+        "wires": [
+            [
+                "1d5b6c70.e2a494"
+            ]
+        ]
+    },
+    {
+        "id": "1d5b6c70.e2a494",
+        "type": "http request",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "method": "POST",
+        "ret": "txt",
+        "url": "",
+        "x": 1690,
+        "y": 3380,
+        "wires": [
+            [
+                "d327d90e.2cd828"
+            ]
+        ]
+    },
+    {
+        "id": "9d7c8456.628378",
+        "type": "cryptomessage",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "action": "decrypt",
+        "method": "rsa",
+        "target": "payload",
+        "rsa_useTTBKey": true,
+        "rsa_useServerKey": true,
+        "x": 1980,
+        "y": 3440,
+        "wires": [
+            [
+                "23f48c1d.dc0b74"
+            ]
+        ]
+    },
+    {
+        "id": "9b5be471.64a418",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "extract infos",
+        "func": "msg.oldurl = msg.url;\nvar data = msg.req.body;\ntry{\n    data = JSON.parse(data);\n}catch(e){}\nmsg.url = data.url;\nmsg.data = data.payload;\n\nif(data.hasOwnProperty(\"url\") && data.url.indexOf(\"mythingbox.io/api/\") != -1){\n    msg.url = data.url;\n} else {\n    msg.payload = \"wrong url\";\n    return [msg,null];\n}\n\nif(data.hasOwnProperty(\"dontdecrypt\") && data.dontdecrypt != false){\n    msg.dontdecrypt = true;\n}\nif(data.hasOwnProperty(\"dontencrypt\") && data.dontencrypt != false){\n    msg.dontencrypt = true;\n}\n\nif (msg.data == \"\"){\n    msg.data = \"nothingtosend\";\n}\nreturn [null,msg];",
+        "outputs": "2",
+        "noerr": 0,
+        "x": 270,
+        "y": 3380,
+        "wires": [
+            [
+                "2faeff12.d051"
+            ],
+            [
+                "abee4a32.5411b8"
+            ]
+        ]
+    },
+    {
+        "id": "2faeff12.d051",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 410,
+        "y": 3360,
+        "wires": []
+    },
+    {
+        "id": "ce6d8cff.31927",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/cloud",
+        "method": "post",
+        "swaggerDoc": "",
+        "x": 110,
+        "y": 3380,
+        "wires": [
+            [
+                "9b5be471.64a418"
+            ]
+        ]
+    },
+    {
+        "id": "ab93c574.546c38",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 2270,
+        "y": 3360,
+        "wires": []
+    },
+    {
+        "id": "23f48c1d.dc0b74",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.url = msg.oldurl;\nmsg.headers = {};\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 2150,
+        "y": 3400,
+        "wires": [
+            [
+                "ab93c574.546c38"
+            ]
+        ]
+    },
+    {
+        "id": "c8924a9a.376db8",
+        "type": "switch",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "dontdecrypt",
+        "property": "dontdecrypt",
+        "rules": [
+            {
+                "t": "nnull"
+            },
+            {
+                "t": "else"
+            }
+        ],
+        "checkall": "true",
+        "outputs": 2,
+        "x": 1970,
+        "y": 3400,
+        "wires": [
+            [
+                "23f48c1d.dc0b74"
+            ],
+            [
+                "9d7c8456.628378"
+            ]
+        ]
+    },
+    {
+        "id": "b69a28b8.4965d8",
+        "type": "switch",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "dontencrypt",
+        "property": "dontencrypt",
+        "rules": [
+            {
+                "t": "nnull"
+            },
+            {
+                "t": "else"
+            }
+        ],
+        "checkall": "true",
+        "outputs": 2,
+        "x": 1030,
+        "y": 3400,
+        "wires": [
+            [
+                "9fddb761.602248"
+            ],
+            [
+                "52a5a2b8.ad5a5c"
+            ]
+        ]
+    },
+    {
+        "id": "9fddb761.602248",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "set payload",
+        "func": "msg.payload = JSON.stringify({\n    \"email\":msg.email,\n    \"ttb_name\":msg.ttb_name,\n    \"data\":msg.data\n});\n\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1190,
+        "y": 3380,
+        "wires": [
+            [
+                "1d5b6c70.e2a494"
+            ]
+        ]
+    },
+    {
+        "id": "d327d90e.2cd828",
+        "type": "switch",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "property": "payload",
+        "rules": [
+            {
+                "t": "eq",
+                "v": "ttb parameter is missing"
+            },
+            {
+                "t": "else"
+            }
+        ],
+        "checkall": "true",
+        "outputs": 2,
+        "x": 1830,
+        "y": 3380,
+        "wires": [
+            [
+                "e7b28af5.184d78"
+            ],
+            [
+                "c8924a9a.376db8"
+            ]
+        ]
+    },
+    {
+        "id": "e7b28af5.184d78",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.statusCode = 403;\nif(!msg.hasOwnProperty(\"headers\")){\n    msg.headers = {};\n}\nmsg.headers.status = 403;\nmsg.payload = JSON.stringify({\n    data : JSON.stringify({\n        needAccount:true\n    })\n});\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1950,
+        "y": 3360,
+        "wires": [
+            [
+                "ab93c574.546c38"
+            ]
+        ]
+    },
+    {
+        "id": "ae3d86ee.889bc8",
+        "type": "commentdown",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "api to use service on the cloud",
+        "info": "",
+        "langs": [
+            {
+                "key": "en-US",
+                "title": "api to use service on the cloud",
+                "body": "",
+                "isDefault": true
+            }
+        ],
+        "x": 170,
+        "y": 3340,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/avahi.json node-red-src_ttb/ttbsystemflow/avahi.json
--- node-red-src/ttbsystemflow/avahi.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/avahi.json	2017-09-26 15:24:23.259505100 +0000
@@ -0,0 +1,70 @@
+
+    {
+        "id": "2a5cc00e.d5a34",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/avahi/scan",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 120,
+        "y": 2900,
+        "wires": [
+            [
+                "3288caa8.cd7736"
+            ]
+        ]
+    },
+    {
+        "id": "3288caa8.cd7736",
+        "type": "scanAvahi",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 290,
+        "y": 2900,
+        "wires": [
+            [
+                "b359ba7e.4ca648"
+            ]
+        ]
+    },
+    {
+        "id": "b359ba7e.4ca648",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "extract infos",
+        "func": "msg.payload = msg.scan;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 450,
+        "y": 2900,
+        "wires": [
+            [
+                "696f180f.9690e8"
+            ]
+        ]
+    },
+    {
+        "id": "696f180f.9690e8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 590,
+        "y": 2900,
+        "wires": []
+    },
+    {
+        "id": "360dcdd7.991142",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "scan avahi",
+        "info": "",
+        "x": 100,
+        "y": 2860,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/backupWithRsync.json node-red-src_ttb/ttbsystemflow/backupWithRsync.json
--- node-red-src/ttbsystemflow/backupWithRsync.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/backupWithRsync.json	2017-09-26 15:24:23.178680100 +0000
@@ -0,0 +1,599 @@
+
+    {
+        "id": "2732c1ea.65986e",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/enable_backup",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 150,
+        "y": 3740,
+        "wires": [
+            [
+                "af6b182.b2b08e8"
+            ]
+        ]
+    },
+    {
+        "id": "af6b182.b2b08e8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "check.checkox",
+        "func": "if(context.global.settings.enableBackup ===  true){\n    msg.payload =  true;\n}\nelse {\n    msg.payload =  false;\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 360,
+        "y": 3740,
+        "wires": [
+            [
+                "e7b9538e.3c851"
+            ]
+        ]
+    },
+    {
+        "id": "e7b9538e.3c851",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "enable_backup",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/enable_backup.ejs",
+        "reloadfile": true,
+        "x": 540,
+        "y": 3740,
+        "wires": [
+            [
+                "ff499b28.327ba8"
+            ]
+        ]
+    },
+    {
+        "id": "ff499b28.327ba8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 690,
+        "y": 3740,
+        "wires": []
+    },
+    {
+        "id": "be1d6bb7.9abb78",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/handle/enable_backup",
+        "method": "post",
+        "swaggerDoc": "",
+        "x": 160,
+        "y": 3800,
+        "wires": [
+            [
+                "9ab35663.a499f8",
+                "936e40ed.2630e"
+            ]
+        ]
+    },
+    {
+        "id": "9ab35663.a499f8",
+        "type": "ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "ejs": "Request submitted.",
+        "x": 350,
+        "y": 3780,
+        "wires": [
+            [
+                "b6557d9a.169b8"
+            ]
+        ]
+    },
+    {
+        "id": "b6557d9a.169b8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 470,
+        "y": 3780,
+        "wires": []
+    },
+    {
+        "id": "936e40ed.2630e",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "parse query",
+        "func": "if(msg.req.body.backup == \"true\"){\n    context.global.settings.enableBackup =  true;\n}\nelse {\n    context.global.settings.enableBackup =  false;\n}\ncontext.global.settingslib.writeSettings(context.global.settings);\n",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 370,
+        "y": 3820,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "backupAutoWithRSync",
+        "type": "inject",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "date",
+        "repeat": "",
+        "crontab": "0 0-23 * * *",
+        "once": false,
+        "x": 100,
+        "y": 3960,
+        "wires": [
+            [
+                "ff29ec77.75ea"
+            ]
+        ]
+    },
+    {
+        "id": "ff29ec77.75ea",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "if(context.global.settings.enableBackup === true){\n    return msg;\n} else {\n    return null;\n}",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 230,
+        "y": 3960,
+        "wires": [
+            [
+                "fe3e5b4b.f0e068"
+            ]
+        ]
+    },
+    {
+        "id": "backupWithRSync",
+        "type": "go",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 230,
+        "y": 3920,
+        "wires": [
+            [
+                "fe3e5b4b.f0e068"
+            ]
+        ]
+    },
+    {
+        "id": "fe3e5b4b.f0e068",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.notification = \"backup started\";\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 350,
+        "y": 3960,
+        "wires": [
+            [
+                "10a70b1d.08a345",
+                "b6975daf.5710c"
+            ]
+        ]
+    },
+    {
+        "id": "b6975daf.5710c",
+        "type": "notifyUI",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "notification": "",
+        "notificationType": "info",
+        "fix": false,
+        "defaultTout": true,
+        "timeout": "",
+        "timeoutUnits": "",
+        "x": 480,
+        "y": 4000,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "10a70b1d.08a345",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": "/root/backup.sh",
+        "addpay": false,
+        "append": "",
+        "useSpawn": "",
+        "name": "",
+        "x": 500,
+        "y": 3960,
+        "wires": [
+            [
+                "60d4397b.776948",
+                "8e5998ea.fa33d8"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "60d4397b.776948",
+        "type": "file",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/root/backup.log",
+        "appendNewline": false,
+        "createDir": false,
+        "overwriteFile": "true",
+        "x": 680,
+        "y": 3900,
+        "wires": []
+    },
+    {
+        "id": "8e5998ea.fa33d8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.message = msg.payload;\nmsg.notification = \"backup completed\";\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 650,
+        "y": 3940,
+        "wires": [
+            [
+                "96c9b126.7acba",
+                "62438dcb.849614"
+            ]
+        ]
+    },
+    {
+        "id": "62438dcb.849614",
+        "type": "notifyUI",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "notification": "",
+        "notificationType": "success",
+        "fix": false,
+        "defaultTout": true,
+        "timeout": "",
+        "timeoutUnits": "",
+        "x": 780,
+        "y": 3980,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "96c9b126.7acba",
+        "type": "timestamp",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 790,
+        "y": 3940,
+        "wires": [
+            [
+                "a8f165e6.ec4fc8"
+            ]
+        ]
+    },
+    {
+        "id": "a8f165e6.ec4fc8",
+        "type": "dateformat",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "dayname": false,
+        "date": "YYYY/MM/DD",
+        "hour": "HH:mm:ss",
+        "meridiem": false,
+        "timezone": "Europe/Paris",
+        "x": 950,
+        "y": 3940,
+        "wires": [
+            [
+                "b459c3a.1339f4"
+            ]
+        ]
+    },
+    {
+        "id": "b459c3a.1339f4",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "parse query",
+        "func": "context.global.settings.lastBackup = msg.payload;\ncontext.global.settingslib.writeSettings(context.global.settings);",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1110,
+        "y": 3940,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "5579c31.c87f93c",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "backup on rsync server",
+        "info": "",
+        "x": 140,
+        "y": 3700,
+        "wires": []
+    },
+    {
+        "id": "e745d08c.d3ef5",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/use_backup",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 140,
+        "y": 4080,
+        "wires": [
+            [
+                "f70da97e.f1a5d8"
+            ]
+        ]
+    },
+    {
+        "id": "f70da97e.f1a5d8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "get last backup date",
+        "func": "msg.payload = context.global.settings.lastBackup ;\n\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 360,
+        "y": 4080,
+        "wires": [
+            [
+                "fe003ef4.50b7c"
+            ]
+        ]
+    },
+    {
+        "id": "fe003ef4.50b7c",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "use backup",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/use_backup.ejs",
+        "reloadfile": true,
+        "x": 550,
+        "y": 4080,
+        "wires": [
+            [
+                "1bb7dc45.7fcd84"
+            ]
+        ]
+    },
+    {
+        "id": "1bb7dc45.7fcd84",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 690,
+        "y": 4080,
+        "wires": []
+    },
+    {
+        "id": "restoreWithRSync",
+        "type": "go",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 90,
+        "y": 4160,
+        "wires": [
+            [
+                "e66bc6c8.2d23f8"
+            ]
+        ]
+    },
+    {
+        "id": "e66bc6c8.2d23f8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.notification = \"restoration started\";\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 210,
+        "y": 4160,
+        "wires": [
+            [
+                "91587326.4bd51",
+                "3ea08edc.ba8db2"
+            ]
+        ]
+    },
+    {
+        "id": "3ea08edc.ba8db2",
+        "type": "notifyUI",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "notification": "",
+        "notificationType": "info",
+        "fix": false,
+        "defaultTout": true,
+        "timeout": "",
+        "timeoutUnits": "",
+        "x": 340,
+        "y": 4200,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "91587326.4bd51",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": "/root/restore.sh",
+        "addpay": false,
+        "append": "",
+        "useSpawn": "",
+        "name": "",
+        "x": 360,
+        "y": 4160,
+        "wires": [
+            [
+                "372e0ef5.0f5442",
+                "20c2e71c.1304f8"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "372e0ef5.0f5442",
+        "type": "file",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/root/restore.log",
+        "appendNewline": false,
+        "createDir": false,
+        "overwriteFile": "true",
+        "x": 540,
+        "y": 4120,
+        "wires": []
+    },
+    {
+        "id": "20c2e71c.1304f8",
+        "type": "template",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "JSON response OK",
+        "field": "payload",
+        "fieldType": "msg",
+        "format": "json",
+        "syntax": "mustache",
+        "template": "{\n    \"result\": \"OK\"\n}",
+        "x": 560,
+        "y": 4160,
+        "wires": [
+            [
+                "f1319a4c.117378",
+                "3ba2dd30.5ff7d2"
+            ]
+        ]
+    },
+    {
+        "id": "f1319a4c.117378",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 730,
+        "y": 4160,
+        "wires": []
+    },
+    {
+        "id": "3ba2dd30.5ff7d2",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.notification = \"restoration completed\";\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 730,
+        "y": 4200,
+        "wires": [
+            [
+                "50286c68.58b764"
+            ]
+        ]
+    },
+    {
+        "id": "50286c68.58b764",
+        "type": "notifyUI",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "notification": "",
+        "notificationType": "success",
+        "fix": false,
+        "defaultTout": true,
+        "timeout": "",
+        "timeoutUnits": "",
+        "x": 860,
+        "y": 4200,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "3a4bdba8.9e13b4",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "restore on rsync server",
+        "info": "",
+        "x": 140,
+        "y": 4040,
+        "wires": []
+    },
+    {
+        "id": "7bc41217.8c182c",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/create_backup",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 150,
+        "y": 3860,
+        "wires": [
+            [
+                "52676dbf.0ce5c4"
+            ]
+        ]
+    },
+    {
+        "id": "52676dbf.0ce5c4",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "create_backup",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/create_backup.ejs",
+        "reloadfile": true,
+        "x": 360,
+        "y": 3860,
+        "wires": [
+            [
+                "e9c8ca8b.da0ed8"
+            ]
+        ]
+    },
+    {
+        "id": "e9c8ca8b.da0ed8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 510,
+        "y": 3860,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/cgu.json node-red-src_ttb/ttbsystemflow/cgu.json
--- node-red-src/ttbsystemflow/cgu.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/cgu.json	2017-09-26 15:24:23.169362900 +0000
@@ -0,0 +1,396 @@
+
+    {
+        "id": "db66e06.f24992",
+        "type": "commentdown",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "CGU",
+        "info": "",
+        "x": 90,
+        "y": 3060,
+        "wires": []
+    },
+    {
+        "id": "af4d8099.50b28",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/cgu-flags",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 120,
+        "y": 3100,
+        "wires": [
+            [
+                "f1585049.0ea7b"
+            ]
+        ]
+    },
+    {
+        "id": "fc4d21a.f03b2e",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 410,
+        "y": 3100,
+        "wires": []
+    },
+    {
+        "id": "f1585049.0ea7b",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "cgu-flags",
+        "func": "msg.payload = {\n    \"CGUReaded\":context.global.settings.CGUReaded,\n    \"AccountCreated\":context.global.settings.AccountCreated\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 280,
+        "y": 3100,
+        "wires": [
+            [
+                "fc4d21a.f03b2e"
+            ]
+        ]
+    },
+    {
+        "id": "7b154baa.84eab4",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/cgu-connected",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 130,
+        "y": 3200,
+        "wires": [
+            [
+                "8ea79268.71587"
+            ]
+        ]
+    },
+    {
+        "id": "d399f46c.2c6608",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 790,
+        "y": 3200,
+        "wires": []
+    },
+    {
+        "id": "8ea79268.71587",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": "curl --head http://mythingbox.io 2>&1",
+        "addpay": false,
+        "append": "",
+        "useSpawn": "",
+        "timer": "",
+        "name": "",
+        "x": 390,
+        "y": 3200,
+        "wires": [
+            [
+                "f950a181.06af6"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "f950a181.06af6",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "extract infos",
+        "func": "var error = \"Could not resolve host\"\ntry {\n    msg.payload = msg.payload.replace(/\\n/g,\" \").replace(/\\r/g,\" \").trim();\n} catch(e) {\n    msg.payload = error;\n}\nif (msg.payload.indexOf(error) == -1){\n    msg.payload = \"200\";\n}\nelse {\n    msg.payload = \"408\";\n}\n\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 650,
+        "y": 3200,
+        "wires": [
+            [
+                "d399f46c.2c6608"
+            ]
+        ]
+    },
+    {
+        "id": "6a3662ab.95c99c",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/cgu-flags",
+        "method": "post",
+        "swaggerDoc": "",
+        "x": 120,
+        "y": 3140,
+        "wires": [
+            [
+                "18fda505.e7025b"
+            ]
+        ]
+    },
+    {
+        "id": "a17b0ebb.5e84f",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 750,
+        "y": 3120,
+        "wires": []
+    },
+    {
+        "id": "2212725c.dded8e",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "cgu-flags",
+        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.payload.AccountCreated = msg.AccountCreated;\nmsg.payload.CGUReaded = msg.CGUReaded;\nmsg.payload.AccountLater = msg.AccountLater;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 620,
+        "y": 3140,
+        "wires": [
+            [
+                "a17b0ebb.5e84f",
+                "1e7ae25b.e1851e"
+            ]
+        ]
+    },
+    {
+        "id": "bc29b00b.43d65",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/root/settings.json",
+        "format": "utf8",
+        "x": 450,
+        "y": 3140,
+        "wires": [
+            [
+                "2212725c.dded8e"
+            ]
+        ]
+    },
+    {
+        "id": "18fda505.e7025b",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "cgu-flags",
+        "func": "try {\n    msg.payload = JSON.parse(msg.req.body);\n} catch (e) {\n    msg.payload = msg.req.body;\n}\n\nmsg.CGUReaded = msg.payload.CGUReaded;\nmsg.AccountCreated = msg.payload.AccountCreated;\nmsg.AccountLater = msg.payload.AccountLater;\n\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 280,
+        "y": 3140,
+        "wires": [
+            [
+                "bc29b00b.43d65"
+            ]
+        ]
+    },
+    {
+        "id": "1e7ae25b.e1851e",
+        "type": "file",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/root/settings.json",
+        "appendNewline": false,
+        "createDir": false,
+        "overwriteFile": "true",
+        "x": 790,
+        "y": 3160,
+        "wires": []
+    },
+    {
+        "id": "be5520c3.41aae",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/handle/change-hostname",
+        "method": "post",
+        "swaggerDoc": "",
+        "x": 170,
+        "y": 700,
+        "wires": [
+            [
+                "21d6a223.de295e",
+                "425142d6.bdaebc"
+            ]
+        ]
+    },
+    {
+        "id": "21d6a223.de295e",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "parse query",
+        "func": "\n\n//console.log(JSON.stringify(msg.req.query));\n\n//console.log(JSON.stringify(msg.req.query.value));\nif (msg.payload.hasOwnProperty(\"hostname\")){\n    return {payload: msg.payload.hostname};\n} else{\n    return null;\n}",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 390,
+        "y": 720,
+        "wires": [
+            [
+                "20c18703.afbb48"
+            ]
+        ]
+    },
+    {
+        "id": "20c18703.afbb48",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "lowercase",
+        "func": "if (typeof msg.payload === 'string') {\n    msg.payload = msg.payload.toLowerCase();\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 550,
+        "y": 720,
+        "wires": [
+            [
+                "ae1d253c.51e2d8"
+            ]
+        ]
+    },
+    {
+        "id": "ae1d253c.51e2d8",
+        "type": "file",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/etc/hostname",
+        "appendNewline": false,
+        "overwriteFile": true,
+        "x": 720,
+        "y": 720,
+        "wires": []
+    },
+    {
+        "id": "425142d6.bdaebc",
+        "type": "ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "ejs": "Request submitted.",
+        "x": 370,
+        "y": 680,
+        "wires": [
+            [
+                "d0b42b50.2f4bd8"
+            ]
+        ]
+    },
+    {
+        "id": "d0b42b50.2f4bd8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 530,
+        "y": 680,
+        "wires": []
+    },
+    {
+        "id": "f60b631b.09f4a",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/keepalive",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 120,
+        "y": 3260,
+        "wires": [
+            [
+                "d422f622.2bdd08"
+            ]
+        ]
+    },
+    {
+        "id": "d422f622.2bdd08",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.url = msg.req.query.url;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 270,
+        "y": 3260,
+        "wires": [
+            [
+                "b64c4bd9.49b3b8"
+            ]
+        ]
+    },
+    {
+        "id": "b64c4bd9.49b3b8",
+        "type": "http request",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "method": "GET",
+        "ret": "txt",
+        "url": "",
+        "x": 410,
+        "y": 3260,
+        "wires": [
+            [
+                "5704b6d9.a8fb48"
+            ]
+        ]
+    },
+    {
+        "id": "5704b6d9.a8fb48",
+        "type": "ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "ejs": "Request submitted.",
+        "x": 550,
+        "y": 3260,
+        "wires": [
+            [
+                "addf39ca.5220c8"
+            ]
+        ]
+    },
+    {
+        "id": "addf39ca.5220c8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.headers = {\"Access-Control-Allow-Origin\" : \"*\"};\nmsg.payload = \"OK\";\nreturn msg;\n",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 670,
+        "y": 3260,
+        "wires": [
+            [
+                "c7c2baff.383d48"
+            ]
+        ]
+    },
+    {
+        "id": "c7c2baff.383d48",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 790,
+        "y": 3260,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/change_hostname.ejs node-red-src_ttb/ttbsystemflow/change_hostname.ejs
--- node-red-src/ttbsystemflow/change_hostname.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/change_hostname.ejs	2017-09-26 15:24:23.266608300 +0000
@@ -0,0 +1,54 @@
+<div class="form-row">
+	<label for="change-password-input"><i class="icon-tag"></i>
+        <span id="hostname_name"></span>
+    </label>
+    <input id="change-password-input" type="text" name="value" readonly="readonly">
+    <a id="settings-rename" class="btn"><i class="fa fa-pencil"></i></a>
+</div>
+
+<style>
+    input[readonly]#change-password-input {
+        cursor: pointer;
+    }
+</style>
+
+<script>
+    var account;
+    $("#hostname_name").html(RED._("settings.hostname.name"));
+    $("#verif_ok").css("width", "auto");
+    
+    var renameFunc = function () {
+        $(".new_name").show();
+        $(".new_add").show();
+        $("#settings-rename").hide();
+        $('#change-password-input').prop('readonly', false);
+        $.ajax({
+	       url : 'current-account',
+	       type : 'GET',
+	       dataType : 'html',
+	       success : function(data, statut){
+				data = JSON.parse(data);
+                data.verif = "true";
+                account = data;
+                //account.pwd = $("#hostname_password").val();
+                account.new_name = $("#change-password-input").val();
+                if(data.email && data.account_id){
+                    /*$(".with_account").show();
+                    $('#hostname_password').on('input propertychange paste', function() {
+                        account.pwd = $("#hostname_password").val();
+                        account.new_name = $("#change-password-input").val();
+                    });*/
+                    $('#change-password-input').on('input propertychange paste', function() {
+                       // account.pwd = $("#hostname_password").val();
+                        account.new_name = $("#change-password-input").val();
+                    });
+                }
+			},
+			error : function(result, statut, error){
+				console.log("An error as occured when trying to GET the account datas from your device.");
+			}
+	    });
+    };
+    $("#change-password-input").click(renameFunc);
+    $("#settings-rename").click(renameFunc);
+</script>
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/create_backup.ejs node-red-src_ttb/ttbsystemflow/create_backup.ejs
--- node-red-src/ttbsystemflow/create_backup.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/create_backup.ejs	2017-09-26 15:24:23.284655500 +0000
@@ -0,0 +1,40 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+	tabindex="-1"
+	class="setting-board ui-dialog ui-widget ui-widget-content">
+
+	<div
+		class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+		<span class="ui-dialog-title" id="ui-id-4">
+            <span id="create_backup_title"></span>
+        </span>
+	</div>
+	<div
+		style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+		id="dialog" class="hide ui-dialog-content ui-widget-content">
+		
+			<div class="form-row">
+				<button id="create_backup-btn">
+                    <span id="create_backup_label"></span>
+				</button>
+			</div>
+		
+			<div class="form-tips" id="create_backup_tips"></div>
+	</div>
+
+</div>
+
+<script>
+    $("#create_backup_title").html(RED._("settings.create_backup.title"));
+    $("#create_backup_label").html(RED._("settings.create_backup.label"));
+    $("#create_backup_tips").html(RED._("settings.create_backup.tips"));
+
+	$('#create_backup-btn').click(function(event){
+        $.ajax({
+        	url:"/inject/backupWithRSync",
+        	method:"POST",
+        	success:function(){
+        		RED.notify("backup completed","success");
+        	}
+        });
+    });
+</script>
diff -ruN node-red-src/ttbsystemflow/current_wifi.ejs node-red-src_ttb/ttbsystemflow/current_wifi.ejs
--- node-red-src/ttbsystemflow/current_wifi.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/current_wifi.ejs	2017-09-26 15:24:23.230755600 +0000
@@ -0,0 +1,20 @@
+<div id="current-wifi">
+    <span class="icon-signal"></span>
+    <% if (payload.essid !== null) { %>
+    	<% if (payload.essid != "off") { %>    		
+	    	<span id="wifi-not-selected_msg" class="hide"></span>
+	    	<span id="wifi_msg"></span>
+	        <code>
+	            <%= payload.essid %>
+	        </code>
+	    <% } else {%>
+	    	<span id="wifi_msg" class="hide"></span>
+	    	<span id="wifi-not-selected_msg"></span>
+	    <% } %>
+    <% } %>
+</div></br>
+
+<script>
+    $("#wifi_msg").html(RED._("settings.wifi.msg"));
+    $("#wifi-not-selected_msg").html(RED._("settings.wifi.notSelectedMsg"));
+</script>
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/displayMode.ejs node-red-src_ttb/ttbsystemflow/displayMode.ejs
--- node-red-src/ttbsystemflow/displayMode.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/displayMode.ejs	2017-09-26 15:24:23.181662000 +0000
@@ -0,0 +1,66 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+	tabindex="-1"
+	class="setting-board ui-dialog ui-widget ui-widget-content">
+
+	<div
+		class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+		<span class="ui-dialog-title" id="ui-id-4">
+            <span id="displayMode_title"></span>
+        </span>
+	</div>
+	<div
+		style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+		id="dialog" class="hide ui-dialog-content ui-widget-content">
+		<form id="displayMode-form" class="form-horizontal" action="/handle/displayMode">
+		
+			<div class="form-row">
+				<label style="width:20%" for="displayMode_interface">
+                    <span id="displayMode_select"></span>
+				</label>
+                <select style="width:75%" id="displayMode_interface" name="displayMode">
+                    <option value="1"  id="displayModev1"></option>
+                    <option value="2" id="displayModev2"></option>
+                </select>
+            </div>
+            
+			<div class="form-tips" id="displayMode_tips"></div>			
+		</form>
+	</div>
+
+	<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
+		<div class="ui-dialog-buttonset">
+			<button aria-disabled="false" role="button"
+				class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"
+				type="submit" form="displayMode-form">
+				<span class="ui-button-text">OK</span>
+			</button>
+		</div>
+	</div>
+</div>
+
+<script>
+    $("#displayMode_title").html(RED._("settings.displayMode.title"));
+    $("#displayMode_select").html(RED._("settings.displayMode.select.label"));
+    $("#displayModev1").html(RED._("settings.displayMode.select.1"));
+    $("#displayModev2").html(RED._("settings.displayMode.select.2"));
+    $("#displayMode_tips").html(RED._("settings.displayMode.tips"));
+    
+    $(document).ready(function(){
+        var settings = "<%- payload %>";
+        $('#displayMode_interface').val(settings);
+    });
+	
+	$('#displayMode-form').submit(function(event){
+        var $this = $(this);
+        event.preventDefault();
+        $('input[name="usingAJAX"]',this).val( 'true' );
+        var url = $this.attr('action');
+        var dataToSend = $this.serialize();
+        var callback = function(dataReceived){
+            RED.notify(dataReceived,"success");
+        };
+        var typeOfDataToReceive = 'html';
+        $.get( url, dataToSend, callback, typeOfDataToReceive )
+    });
+</script>
+
diff -ruN node-red-src/ttbsystemflow/enable_backup.ejs node-red-src_ttb/ttbsystemflow/enable_backup.ejs
--- node-red-src/ttbsystemflow/enable_backup.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/enable_backup.ejs	2017-09-26 15:24:23.191715600 +0000
@@ -0,0 +1,67 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+	tabindex="-1"
+	class="setting-board ui-dialog ui-widget ui-widget-content">
+
+	<div
+		class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+		<span class="ui-dialog-title" id="ui-id-4">
+            <span id="enable_backup_title"></span>
+        </span>
+	</div>
+	<div
+		style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+		id="dialog" class="hide ui-dialog-content ui-widget-content">
+		<form id="enable_backup-form" class="form-horizontal" action="/handle/enable_backup">
+		
+			<div class="form-row">
+				<label for="enable_backup-input">
+					<i class="icon-tag"></i>
+                    <span id="enable_backup_label"></span>
+				</label>
+				<input id="enable_backup-input" type="checkbox" name="backup" title="enable backup">
+			</div>
+		
+			<div class="form-tips" id="enable_backup_tips"></div>			
+		</form>
+	</div>
+
+	<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
+		<div class="ui-dialog-buttonset">
+			<button aria-disabled="false" role="button"
+				class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"
+				type="submit" form="enable_backup-form">
+				<span class="ui-button-text">OK</span>
+			</button>
+		</div>
+	</div>
+</div>
+
+<script>
+	var checked = <%- payload %>;
+    $("#enable_backup_title").html(RED._("settings.enable_backup.title"));
+    $("#enable_backup_label").html(RED._("settings.enable_backup.label"));
+    $("#enable_backup_tips").html(RED._("settings.enable_backup.tips"));
+    
+    $("#enable_backup-input").ready(function(){
+        if(typeof checked != undefined && checked === true){
+          $('#enable_backup-input').attr('checked', true);
+        } else {
+          $('#senable_backup-input').attr('checked', false);
+        }
+    });
+
+	$('#enable_backup-form').submit(function(event){
+        var $this = $(this);
+        event.preventDefault();
+        $.ajax({
+        	url:$this.attr('action'),
+        	method:"POST",
+        	data: {
+	    		backup:$('#enable_backup-input').is(":checked")
+	    	},
+        	success: function(dataReceived){
+	            RED.notify(dataReceived,"success");
+	        }
+        });
+    });
+</script>
diff -ruN node-red-src/ttbsystemflow/flowFilter.json node-red-src_ttb/ttbsystemflow/flowFilter.json
--- node-red-src/ttbsystemflow/flowFilter.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/flowFilter.json	2017-09-26 15:24:23.248108700 +0000
@@ -0,0 +1,157 @@
+    
+    {
+        "id": "MQTT.HomeKeeper",
+        "type": "mqtt-broker",
+        "z": "",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "broker": "localhost",
+        "port": "1883",
+        "clientid": "",
+        "usetls": false,
+        "compatmode": true,
+        "keepalive": "15",
+        "cleansession": true,
+        "willTopic": "",
+        "willQos": "0",
+        "willPayload": "",
+        "birthTopic": "",
+        "birthQos": "0",
+        "birthPayload": ""
+    },
+    {
+        "id": "e5460e76.d13e3",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/flowFilter",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 120,
+        "y": 4260,
+        "wires": [
+            [
+                "36acff4e.c64da8"
+            ]
+        ]
+    },
+    {
+        "id": "243cb801.99d1a8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 690,
+        "y": 4260,
+        "wires": []
+    },
+    {
+        "id": "36acff4e.c64da8",
+        "type": "http request",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "method": "GET",
+        "ret": "txt",
+        "url": "/flows",
+        "x": 330,
+        "y": 4260,
+        "wires": [
+            [
+                "d69b1c4f.fdf808"
+            ]
+        ]
+    },
+    {
+        "id": "d69b1c4f.fdf808",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "var flows  = JSON.parse(msg.payload),\n    filter = msg.filter,\n    result = [];\n\nfor(var i = 0; i < flows.length; i++) {\n    if (flows[i].hasOwnProperty(\"extra\")) {\n        if(flows[i][\"extra\"][\"ui\"] === true) {\n            result.push(flows[i]);\n        }\n    }\n}\nmsg.payload = JSON.stringify(result, null, 4);\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 490,
+        "y": 4260,
+        "wires": [
+            [
+                "243cb801.99d1a8",
+                "3900f2a0.226f3e"
+            ]
+        ]
+    },
+    {
+        "id": "a929a34d.099e4",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Filter for the total flows",
+        "info": "",
+        "x": 140,
+        "y": 4220,
+        "wires": []
+    },
+    {
+        "id": "3900f2a0.226f3e",
+        "type": "mqtt out",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "topic": "allDevices",
+        "qos": "0",
+        "retain": "false",
+        "broker": "MQTT.HomeKeeper",
+        "x": 710,
+        "y": 4300,
+        "wires": []
+    },
+    {
+        "id": "8cddd6ad.76ff88",
+        "type": "inject",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "str",
+        "repeat": "",
+        "crontab": "",
+        "once": true,
+        "x": 910,
+        "y": 4260,
+        "wires": [
+            [
+                "1c74bce3.f10483"
+            ]
+        ]
+    },
+    {
+        "id": "1c74bce3.f10483",
+        "type": "http request",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "method": "GET",
+        "ret": "txt",
+        "url": "/flowFilter",
+        "x": 1130,
+        "y": 4260,
+        "wires": [
+            [
+                "996b26e6.d7deb8"
+            ]
+        ]
+    },
+    {
+        "id": "996b26e6.d7deb8",
+        "type": "debug",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "active": false,
+        "console": "false",
+        "complete": "id",
+        "x": 1290,
+        "y": 4260,
+        "wires": []
+    }
diff -ruN node-red-src/ttbsystemflow/hostname.ejs node-red-src_ttb/ttbsystemflow/hostname.ejs
--- node-red-src/ttbsystemflow/hostname.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/hostname.ejs	2017-09-26 15:24:23.194700300 +0000
@@ -0,0 +1,157 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+	tabindex="-1"
+	class="setting-board ui-dialog ui-widget ui-widget-content">
+
+	<div
+		class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+		<span class="ui-dialog-title" id="ui-id-4 ">
+            <span id="hostname_title"></span>
+        </span>
+	</div>
+	<div
+		style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+		id="dialog" class="hide ui-dialog-content ui-widget-content">
+		<form id="hostname-form" class="form-horizontal"
+			action="/handle/change-hostname">
+			
+			<div id="change-hostname-container"></div>
+            <!--
+            <div class="form-row with_account">
+                <label for="hostname_password"><i class="icon-lock"></i>
+                    <span id="hostname_pass"></span>
+                </label>
+                <input id="hostname_password" type="password" name="pwd">
+            </div>
+            -->
+            <div class="with_account">
+                <p id="hostname_msg" style="font-family:Verdana; font-size:12px;"></p>
+            </div>
+            <div class="new_add">
+                <p style="font-family:Verdana; font-size:12px;">
+                    <span id="newAddMes"></span>
+                    <span style="text-decoration: underline;">
+                        <a id="newLink" target="_blank">http://<span id="newHostname"></span>.local/</a>
+                    </span>
+                </p>
+            </div>
+			<div class="form-tips new_name" id="host-note"></div>
+		</form>
+	</div>
+	<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix new_name">
+		<div class="ui-dialog-buttonset">
+			<button aria-disabled="false" role="button" id="hostname-submit" 
+				class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"
+				type="submit" form="hostname-form">
+				<span class="ui-button-text" id="host-rename"></span>
+			</button>
+		</div>
+	</div>
+
+</div>
+
+<div id="ttb-name"></div>
+
+
+<script>
+    $("#hostname_title").html(RED._("settings.hostname.title"));
+    //$("#hostname_pass").html(RED._("settings.hostname.password"));
+    $("#hostname_msg").html(RED._("settings.hostname.msg"));
+    $("#host-rename").html(RED._("settings.hostname.rename"));
+    $("#host-note").html(RED._("settings.hostname.note"));
+    $('#newAddMes').html(RED._("settings.hostname.addmes"))
+    $(".new_name").hide();
+    $(".new_add").hide();
+    $(".with_account").hide();
+    $("#verif_ok").hide();
+    
+	$("#change-hostname-container").load("change-hostname", function() {
+		$.ajax({
+	       url : 'current-hostname',
+	       type : 'GET',
+	       dataType : 'html',
+	           success : function(code_html, statut){
+	           	code_html;
+				$("#change-password-input").val(code_html);
+                $("#newHostname").html($("#change-password-input").val());
+                $("#newLink").attr("href", "http://"+$("#change-password-input").val()+".local");
+	           },
+	           error : function(result, statut, error){
+				alert(error);
+	           }
+	    });
+	});
+
+    var changingFunc = function() {
+        var value =  $("#change-password-input").val();
+    	if(value && value.trim() !== ""){
+    		$("#newHostname").html(value);
+            $("#newLink").attr("href", "http://"+value+".local");
+    	}
+    	else {
+    		$("#newHostname").html("thethingbox");
+            $("#newLink").attr("href", "http://thethingbox.local");
+    	}
+    };
+    $("#change-hostname-container").on("keyup", changingFunc);
+    $("#change-hostname-container").on("change", changingFunc);
+
+    $('#hostname-form').submit(function(event){
+        var $this = $(this);
+        var result = false;
+        $(".new_name").hide();
+        //$(".with_account").hide();
+        $("#settings-rename").show();
+        $('#change-password-input').prop('readonly', true);
+        
+        if(account.email && account.account_id){
+            $.ajax({
+                url : 'account-pwd',
+                type: 'GET',
+                async: false,
+                data : { 
+                    email: account.email,
+                    account_id: account.account_id,
+                    ttb_name: account.ttb_name,
+                    verif: account.verif,
+                    //pwd: account.pwd,
+                    new_name: account.new_name
+                },
+                success : function(data, statut){
+                    if(data.status == "success"){
+                        result = true;
+                    }
+                },
+                error : function(result, statut, error){
+                    console.log("An error has occured when trying to check your Password.");
+                }
+            });
+            
+            if(result){
+                event.preventDefault();
+                $('input[name="usingAJAX"]',this).val( 'true' );
+                var url = $this.attr('action');
+                var dataToSend = $this.serialize();
+                var callback = function(dataReceived){
+                    RED.notify(dataReceived,"success");
+                };
+                var typeOfDataToReceive = 'html';
+                $.get( url, dataToSend, callback, typeOfDataToReceive )
+            }
+            else {
+                event.preventDefault();
+                RED.notify("Bad password","error");
+            }
+        }
+        else {
+            event.preventDefault();
+            $('input[name="usingAJAX"]',this).val( 'true' );
+            var url = $this.attr('action');
+            var dataToSend = $this.serialize();
+            var callback = function(dataReceived){
+                RED.notify(dataReceived,"success");
+            };
+            var typeOfDataToReceive = 'html';
+            $.get( url, dataToSend, callback, typeOfDataToReceive )
+        }
+    });
+</script>
diff -ruN node-red-src/ttbsystemflow/hostname.json node-red-src_ttb/ttbsystemflow/hostname.json
--- node-red-src/ttbsystemflow/hostname.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/hostname.json	2017-09-26 15:24:23.164210100 +0000
@@ -0,0 +1,241 @@
+
+    {
+        "id": "2f8616b0.f7d2ea",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/change-hostname",
+        "method": "get",
+        "x": 160,
+        "y": 780,
+        "wires": [
+            [
+                "cb7518f8.f26ac8"
+            ]
+        ]
+    },
+    {
+        "id": "cb7518f8.f26ac8",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Change name",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/change_hostname.ejs",
+        "reloadfile": true,
+        "x": 380,
+        "y": 780,
+        "wires": [
+            [
+                "634e840e.29986c"
+            ]
+        ]
+    },
+    {
+        "id": "634e840e.29986c",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 530,
+        "y": 780,
+        "wires": []
+    },
+    {
+        "id": "97b79794.49e28",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/current-hostname",
+        "method": "get",
+        "x": 160,
+        "y": 520,
+        "wires": [
+            [
+                "915e29c2.6c0248"
+            ]
+        ]
+    },
+    {
+        "id": "915e29c2.6c0248",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/etc/hostname",
+        "format": "utf8",
+        "x": 380,
+        "y": 520,
+        "wires": [
+            [
+                "40d7cfb7.c80eb"
+            ]
+        ]
+    },
+    {
+        "id": "40d7cfb7.c80eb",
+        "type": "function",
+        "z": "system",
+        "name": "lowercase",
+        "func": "if (typeof msg.payload === 'string') {\n    msg.payload = msg.payload.toLowerCase();\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 550,
+        "y": 520,
+        "wires": [
+            [
+                "249cecaa.2aeff4"
+            ]
+        ]
+    },
+    {
+        "id": "249cecaa.2aeff4",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 690,
+        "y": 520,
+        "wires": []
+    },
+    {
+        "id": "96ccea98.c34d7",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/hostname",
+        "method": "get",
+        "x": 140,
+        "y": 560,
+        "wires": [
+            [
+                "c46a7408.da7048"
+            ]
+        ]
+    },
+    {
+        "id": "c46a7408.da7048",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Hostname",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/hostname.ejs",
+        "reloadfile": true,
+        "x": 370,
+        "y": 560,
+        "wires": [
+            [
+                "5b60e3b3.6f7d64"
+            ]
+        ]
+    },
+    {
+        "id": "5b60e3b3.6f7d64",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 530,
+        "y": 560,
+        "wires": []
+    },
+    {
+        "id": "dfa3262b.4db73",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/handle/change-hostname",
+        "method": "get",
+        "x": 170,
+        "y": 620,
+        "wires": [
+            [
+                "72c00016.fb1be8",
+                "3614413c.e3a5c6"
+            ]
+        ]
+    },
+    {
+        "id": "72c00016.fb1be8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "parse query",
+        "func": "\n\n//console.log(JSON.stringify(msg.req.query));\n\n//console.log(JSON.stringify(msg.req.query.value));\n\nreturn {payload: msg.req.query.value};",
+        "outputs": 1,
+        "x": 390,
+        "y": 640,
+        "wires": [
+            [
+                "397f7544.ae81ea"
+            ]
+        ]
+    },
+    {
+        "id": "397f7544.ae81ea",
+        "type": "function",
+        "z": "system",
+        "name": "lowercase",
+        "func": "if (typeof msg.payload === 'string') {\n    msg.payload = msg.payload.toLowerCase();\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 550,
+        "y": 640,
+        "wires": [
+            [
+                "bc2bed57.d7102"
+            ]
+        ]
+    },
+    {
+        "id": "bc2bed57.d7102",
+        "type": "file",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/etc/hostname",
+        "appendNewline": false,
+        "overwriteFile": true,
+        "x": 720,
+        "y": 640,
+        "wires": []
+    },
+    {
+        "id": "3614413c.e3a5c6",
+        "type": "ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "ejs": "Request submitted.",
+        "x": 370,
+        "y": 600,
+        "wires": [
+            [
+                "455f67e2.f7a8c8"
+            ]
+        ]
+    },
+    {
+        "id": "455f67e2.f7a8c8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 530,
+        "y": 600,
+        "wires": []
+    },
+    {
+        "id": "731eae69.bbfb9",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Name",
+        "info": "",
+        "x": 90,
+        "y": 480,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/lang.ejs node-red-src_ttb/ttbsystemflow/lang.ejs
--- node-red-src/ttbsystemflow/lang.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/lang.ejs	2017-09-26 15:24:23.196700800 +0000
@@ -0,0 +1,69 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+	tabindex="-1"
+	class="setting-board ui-dialog ui-widget ui-widget-content">
+
+	<div
+		class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+		<span class="ui-dialog-title" id="ui-id-4">
+            <span id="lang_title"></span>
+        </span>
+	</div>
+	<div
+		style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+		id="dialog" class="hide ui-dialog-content ui-widget-content">
+		<form id="lang-form" class="form-horizontal" action="/handle/lang">
+		
+			<div class="form-row">
+				<label for="lang_interface">
+					<i class="fa fa-globe"></i>
+                    <span id="lang_select"></span>
+				</label>
+                <select id="lang_interface" name="languages">
+                    <option value="auto"  id="lang_auto"></option>
+                    <option value="en-US" id="lang_en"></option>
+                    <option value="fr-FR" id="lang_fr"></option>
+                </select>
+            </div>
+            
+			<div class="form-tips" id="lang_tips"></div>			
+		</form>
+	</div>
+
+	<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
+		<div class="ui-dialog-buttonset">
+			<button aria-disabled="false" role="button"
+				class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"
+				type="submit" form="lang-form">
+				<span class="ui-button-text">OK</span>
+			</button>
+		</div>
+	</div>
+</div>
+
+<script>
+    $("#lang_title").html(RED._("settings.lang.title"));
+    $("#lang_select").html(RED._("settings.lang.select.label"));
+    $("#lang_auto").html(RED._("settings.lang.select.auto"));
+    $("#lang_en").html(RED._("settings.lang.select.en"));
+    $("#lang_fr").html(RED._("settings.lang.select.fr"));
+    $("#lang_tips").html(RED._("settings.lang.tips"));
+    
+    $(document).ready(function(){
+        var settings = "<%- payload %>";
+        $('#lang_interface').val(settings);
+    });
+	
+	$('#lang-form').submit(function(event){
+        var $this = $(this);
+        event.preventDefault();
+        $('input[name="usingAJAX"]',this).val( 'true' );
+        var url = $this.attr('action');
+        var dataToSend = $this.serialize();
+        var callback = function(dataReceived){
+            RED.notify(dataReceived,"success");
+        };
+        var typeOfDataToReceive = 'html';
+        $.get( url, dataToSend, callback, typeOfDataToReceive )
+    });
+</script>
+
diff -ruN node-red-src/ttbsystemflow/lang.json node-red-src_ttb/ttbsystemflow/lang.json
--- node-red-src/ttbsystemflow/lang.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/lang.json	2017-09-26 15:24:23.251506200 +0000
@@ -0,0 +1,130 @@
+
+    {
+        "id": "7710d7ea.6624e",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/lang",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 120,
+        "y": 2740,
+        "wires": [
+            [
+                "4e07ec23.20be1c"
+            ]
+        ]
+    },
+    {
+        "id": "3d11c945.6bd436",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 550,
+        "y": 2740,
+        "wires": []
+    },
+    {
+        "id": "63b2e98e.87b078",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Lang",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/lang.ejs",
+        "reloadfile": true,
+        "x": 430,
+        "y": 2740,
+        "wires": [
+            [
+                "3d11c945.6bd436"
+            ]
+        ]
+    },
+    {
+        "id": "33d87310.be48ac",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Language of the interface",
+        "info": "",
+        "x": 150,
+        "y": 2700,
+        "wires": []
+    },
+    {
+        "id": "7ea0493.5610fb8",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/handle/lang",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 120,
+        "y": 2800,
+        "wires": [
+            [
+                "994f999b.7816e",
+                "f0fd547a.db4b4"
+            ]
+        ]
+    },
+    {
+        "id": "7b7125e.3cd645c",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 390,
+        "y": 2780,
+        "wires": []
+    },
+    {
+        "id": "994f999b.7816e",
+        "type": "ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "ejs": "Request submitted.",
+        "x": 270,
+        "y": 2780,
+        "wires": [
+            [
+                "7b7125e.3cd645c"
+            ]
+        ]
+    },
+    {
+        "id": "f0fd547a.db4b4",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "parse query",
+        "func": "context.global.settings.lang =  msg.payload.languages;\ncontext.global.settingslib.writeSettings(context.global.settings);",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 290,
+        "y": 2820,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "4e07ec23.20be1c",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "check.lang",
+        "func": "if(typeof context.global.settings.lang === \"undefined\") {\n    msg.payload = \"auto\";\n} else {\n    msg.payload = context.global.settings.lang;\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 290,
+        "y": 2740,
+        "wires": [
+            [
+                "63b2e98e.87b078"
+            ]
+        ]
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/main.json node-red-src_ttb/ttbsystemflow/main.json
--- node-red-src/ttbsystemflow/main.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/main.json	2017-09-26 15:24:23.192690600 +0000
@@ -0,0 +1,102 @@
+
+    {
+        "type": "tab",
+        "id": "system",
+        "label": "System",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json"
+    },
+    {
+        "id": "75422b74.99729c",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/navbar",
+        "method": "get",
+        "x": 130,
+        "y": 120,
+        "wires": [
+            [
+                "a12715f.aa40268"
+            ]
+        ]
+    },
+    {
+        "id": "ecb91ea9.a18a1",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 430,
+        "y": 120,
+        "wires": []
+    },
+    {
+        "id": "b48816c8.cc6a58",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/settings",
+        "method": "get",
+        "x": 130,
+        "y": 80,
+        "wires": [
+            [
+                "422b11a5.fa1f2"
+            ]
+        ]
+    },
+    {
+        "id": "a14ebf23.ea3a6",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 430,
+        "y": 80,
+        "wires": []
+    },
+    {
+        "id": "72b1ed31.1543a4",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "This flow handles the internal functionalities of the Thingbox",
+        "info": "",
+        "x": 260,
+        "y": 40,
+        "wires": []
+    },
+    {
+        "id": "422b11a5.fa1f2",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Settings",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/settings.ejs",
+        "reloadfile": true,
+        "x": 300,
+        "y": 80,
+        "wires": [
+            [
+                "a14ebf23.ea3a6"
+            ]
+        ]
+    },
+    {
+        "id": "a12715f.aa40268",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Navbar",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/navbar.ejs",
+        "reloadfile": true,
+        "x": 300,
+        "y": 120,
+        "wires": [
+            [
+                "ecb91ea9.a18a1"
+            ]
+        ]
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/management.json node-red-src_ttb/ttbsystemflow/management.json
--- node-red-src/ttbsystemflow/management.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/management.json	2017-09-26 15:24:23.240701300 +0000
@@ -0,0 +1,210 @@
+
+    {
+        "id": "restart",
+        "type": "go",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 670,
+        "y": 1320,
+        "wires": [
+            [
+                "248cfa4a.86ea86"
+            ]
+        ]
+    },
+    {
+        "id": "248cfa4a.86ea86",
+        "type": "notifyUI",
+        "z": "system",
+        "name": "",
+        "notification": "Node-RED restarting ...",
+        "notificationType": "error",
+        "fix": false,
+        "defaultTout": true,
+        "timeout": "",
+        "timeoutUnits": "",
+        "x": 800,
+        "y": 1320,
+        "wires": [
+            [
+                "97657198.3a5b2"
+            ]
+        ]
+    },
+    {
+        "id": "97657198.3a5b2",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": "service thethingbox restart",
+        "addpay": false,
+        "append": "",
+        "useSpawn": "",
+        "name": "",
+        "x": 1000,
+        "y": 1320,
+        "wires": [
+            [],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "94f9f0db.e0788",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "restart Node-RED",
+        "info": "",
+        "x": 710,
+        "y": 1280,
+        "wires": []
+    },
+    {
+        "id": "reboot",
+        "type": "go",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 90,
+        "y": 1320,
+        "wires": [
+            [
+                "903f8d79.9bd3e"
+            ]
+        ]
+    },
+    {
+        "id": "903f8d79.9bd3e",
+        "type": "notifyUI",
+        "z": "system",
+        "name": "",
+        "notification": "Rebooting ...",
+        "notificationType": "",
+        "fix": false,
+        "defaultTout": true,
+        "timeout": "",
+        "timeoutUnits": "",
+        "x": 220,
+        "y": 1320,
+        "wires": [
+            [
+                "4ffc6df3.5488fc"
+            ]
+        ]
+    },
+    {
+        "id": "4ffc6df3.5488fc",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": "reboot",
+        "append": "",
+        "useSpawn": "",
+        "name": "",
+        "x": 350,
+        "y": 1320,
+        "wires": [
+            [],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "c53b3211.d4d2b",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "reboot TimeSquAir",
+        "info": "",
+        "x": 130,
+        "y": 1280,
+        "wires": []
+    },
+    {
+        "id": "8c8e0699.c967",
+        "type": "mqtt in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Localhost",
+        "topic": "a/b/c",
+        "broker": "MQTT.Localhost",
+        "x": 100,
+        "y": 1420,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "88b43764.1113e8",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "To avoid \"unused config node\"",
+        "info": "",
+        "x": 170,
+        "y": 1380,
+        "wires": []
+    },
+    {
+        "id": "shutdown",
+        "type": "go",
+        "z": "system",
+        "name": "",
+        "x": 90,
+        "y": 1220,
+        "wires": [
+            [
+                "4e370dff.6cfd24"
+            ]
+        ]
+    },
+    {
+        "id": "4e370dff.6cfd24",
+        "type": "notifyUI",
+        "z": "system",
+        "name": "",
+        "notification": "Shutdown ...",
+        "notificationType": "error",
+        "fix": false,
+        "defaultTout": true,
+        "timeout": "",
+        "timeoutUnits": "",
+        "x": 220,
+        "y": 1220,
+        "wires": [
+            [
+                "7b4bcaed.98d754"
+            ]
+        ]
+    },
+    {
+        "id": "7b4bcaed.98d754",
+        "type": "exec",
+        "z": "system",
+        "command": "shutdown -h now",
+        "addpay": false,
+        "append": "",
+        "useSpawn": "",
+        "timer": "",
+        "oldrc": false,
+        "name": "",
+        "x": 390,
+        "y": 1220,
+        "wires": [
+            [],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "11a85969.2ac627",
+        "type": "comment",
+        "z": "system",
+        "name": "shutdown TimeSquAir",
+        "info": "",
+        "x": 140,
+        "y": 1180,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/Mongodb2Default.json node-red-src_ttb/ttbsystemflow/Mongodb2Default.json
--- node-red-src/ttbsystemflow/Mongodb2Default.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/Mongodb2Default.json	2017-09-26 15:24:23.236689800 +0000
@@ -0,0 +1,11 @@
+
+    {
+        "id": "MONGODB2.Localhost",
+        "type": "mongodb2",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "z": "",
+        "uri": "mongodb://127.0.0.1:27017/nodered",
+        "name": "",
+        "options": "",
+        "parallelism": "-1"
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/MongodbDefault.json node-red-src_ttb/ttbsystemflow/MongodbDefault.json
--- node-red-src/ttbsystemflow/MongodbDefault.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/MongodbDefault.json	2017-09-26 15:24:23.263395600 +0000
@@ -0,0 +1,11 @@
+
+    {
+        "id": "MONGODB.Localhost",
+        "type": "mongodb",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "z": "",
+        "hostname": "127.0.0.1",
+        "port": "27017",
+        "db": "nodered",
+        "name": ""
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/MQTTDefault.json node-red-src_ttb/ttbsystemflow/MQTTDefault.json
--- node-red-src/ttbsystemflow/MQTTDefault.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/MQTTDefault.json	2017-09-26 15:24:23.202563200 +0000
@@ -0,0 +1,20 @@
+
+	{
+        "id": "MQTT.Localhost",
+        "type": "mqtt-broker",
+        "z": "",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "broker": "localhost",
+        "port": "1883",
+        "clientid": "",
+        "usetls": false,
+        "compatmode": true,
+        "keepalive": "15",
+        "cleansession": true,
+        "willTopic": "",
+        "willQos": "0",
+        "willPayload": "",
+        "birthTopic": "",
+        "birthQos": "0",
+        "birthPayload": ""
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/MysqlDefault.json node-red-src_ttb/ttbsystemflow/MysqlDefault.json
--- node-red-src/ttbsystemflow/MysqlDefault.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/MysqlDefault.json	2017-09-26 15:24:23.161201300 +0000
@@ -0,0 +1,11 @@
+
+	{		
+        "id": "MYSQL.Localhost",
+        "type": "MySQLdatabase",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "z": "",
+        "host": "127.0.0.1",
+        "port": "3306",
+        "db": "nodered",
+        "tz": ""
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/navbar.ejs node-red-src_ttb/ttbsystemflow/navbar.ejs
--- node-red-src/ttbsystemflow/navbar.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/navbar.ejs	2017-09-26 15:24:23.180659000 +0000
@@ -0,0 +1,29 @@
+<div id="header">
+    <span class="logo">
+		<a target="_blank" href="http://thethingbox.io"><img src="/logo.png" style="height: 30px;"></a>
+		<span id="powered"></span>
+ 		<a target="_blank" href="http://nodered.org/"><img src="/red/images/node-red.png" style="height:auto;"> <span>Node-RED</span></a>
+	</span>
+
+	<span id="main_reboot-group" class="deploy-button-group button-group" style="margin-top: 5px;">
+	    <a id="main_reboot-link" class="deploy-button button-reboot" href="#">
+	        <i class="fa fa-refresh"></i> <span id="main_reboot-btn"></span>
+	    </a>
+	</span>
+
+</div>
+<style>
+    #main_reboot-link {
+        text-align: center;
+        width: 100px;
+    }
+    #main_reboot-group {
+        position: absolute;
+        right: 25px;
+        height: 30px;
+    }
+</style>
+<script>
+    $("#main_reboot-btn").html(RED._("settings.common.reboot"));
+    $("#powered").html(RED._("settings.navbar.powered"));
+</script>
diff -ruN node-red-src/ttbsystemflow/nodeInstall.json node-red-src_ttb/ttbsystemflow/nodeInstall.json
--- node-red-src/ttbsystemflow/nodeInstall.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/nodeInstall.json	2017-09-26 15:24:23.245925200 +0000
@@ -0,0 +1,450 @@
+
+    {
+        "id": "cf688e9c.d21a08",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/npm/:action",
+        "method": "post",
+        "swaggerDoc": "",
+        "x": 130,
+        "y": 2460,
+        "wires": [
+            [
+                "88e0dc23.6c4028"
+            ]
+        ]
+    },
+    {
+        "id": "88e0dc23.6c4028",
+        "type": "change",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "switch",
+        "rules": [
+            {
+                "t": "set",
+                "p": "payload",
+                "to": "payload.node",
+                "tot": "msg"
+            }
+        ],
+        "action": "",
+        "property": "",
+        "from": "",
+        "to": "",
+        "reg": false,
+        "x": 290,
+        "y": 2460,
+        "wires": [
+            [
+                "2a16af82.ca2438"
+            ]
+        ]
+    },
+    {
+        "id": "2a16af82.ca2438",
+        "type": "switch",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "property": "payload",
+        "rules": [
+            {
+                "t": "regex",
+                "v": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?"
+            },
+            {
+                "t": "else"
+            }
+        ],
+        "checkall": "true",
+        "outputs": 2,
+        "x": 410,
+        "y": 2460,
+        "wires": [
+            [
+                "f3f206da.0c0df8"
+            ],
+            [
+                "2c902753.d92b5"
+            ]
+        ]
+    },
+    {
+        "id": "f3f206da.0c0df8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "set url",
+        "func": "msg.url = msg.payload;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 530,
+        "y": 2420,
+        "wires": [
+            [
+                "29217d3a.d6de82"
+            ]
+        ]
+    },
+    {
+        "id": "29217d3a.d6de82",
+        "type": "http request",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "method": "GET",
+        "ret": "bin",
+        "url": "",
+        "x": 690,
+        "y": 2420,
+        "wires": [
+            [
+                "f54b00a7.0ab5"
+            ]
+        ]
+    },
+    {
+        "id": "f54b00a7.0ab5",
+        "type": "unzip",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "unzip",
+        "destpath": "/root/userdir/node_modules/",
+        "x": 830,
+        "y": 2420,
+        "wires": [
+            [
+                "a7f289ff.580d78"
+            ]
+        ]
+    },
+    {
+        "id": "a7f289ff.580d78",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "var path = msg.headers[\"content-disposition\"].split(\"filename=\")[1].split(\".zip\")[0];\nmsg.headers = null;\nmsg.payload = \" /root/userdir/node_modules/\" + path + \";npm install --unsafe-perm\";\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 950,
+        "y": 2420,
+        "wires": [
+            [
+                "34ff8ffb.cb007"
+            ]
+        ]
+    },
+    {
+        "id": "34ff8ffb.cb007",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": "cd ",
+        "addpay": true,
+        "append": "",
+        "useSpawn": "",
+        "name": "",
+        "x": 1070,
+        "y": 2420,
+        "wires": [
+            [
+                "5234a872.1c6c6"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "5234a872.1c6c6",
+        "type": "template",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Response",
+        "field": "payload",
+        "format": "json",
+        "template": "{\n    \"action\":\"OK\",\n    \"message\":\"Everything was ok\"\n}",
+        "x": 1210,
+        "y": 2420,
+        "wires": [
+            [
+                "7e0bf4c4.a75884"
+            ]
+        ]
+    },
+    {
+        "id": "7e0bf4c4.a75884",
+        "type": "delay",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "pauseType": "delay",
+        "timeout": "5",
+        "timeoutUnits": "seconds",
+        "rate": "1",
+        "rateUnits": "second",
+        "randomFirst": "1",
+        "randomLast": "5",
+        "randomUnits": "seconds",
+        "drop": false,
+        "x": 1360,
+        "y": 2420,
+        "wires": [
+            [
+                "5706bcf6.aa15dc"
+            ]
+        ]
+    },
+    {
+        "id": "5706bcf6.aa15dc",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 1490,
+        "y": 2420,
+        "wires": []
+    },
+    {
+        "id": "2c902753.d92b5",
+        "type": "switch",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "property": "req.params.action",
+        "propertyType": "msg",
+        "rules": [
+            {
+                "t": "eq",
+                "v": "uninstall",
+                "vt": "str"
+            },
+            {
+                "t": "eq",
+                "v": "install",
+                "vt": "str"
+            }
+        ],
+        "checkall": "false",
+        "outputs": 2,
+        "x": 530,
+        "y": 2500,
+        "wires": [
+            [
+                "d5faf266.2211c8"
+            ],
+            [
+                "991a25fb.83138"
+            ]
+        ]
+    },    
+    {
+        "id": "d5faf266.2211c8",
+        "type": "npm",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "nodename": "ttb",
+        "method": "uninstall",
+        "path": "/root/userdir",
+        "name": "uninstall",
+        "x": 660,
+        "y": 2480,
+        "wires": [
+            [
+                "a283c8b0.9429e8"
+            ]
+        ]
+    },
+    {
+        "id": "a283c8b0.9429e8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 790,
+        "y": 2480,
+        "wires": []
+    },    
+    {
+        "id": "991a25fb.83138",
+        "type": "npm",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "nodename": "ttb",
+        "method": "install",
+        "path": "/root/userdir",
+        "name": "install",
+        "x": 650,
+        "y": 2520,
+        "wires": [
+            [
+                "925dc18.13e084"
+            ]
+        ]
+    },
+    {
+        "id": "925dc18.13e084",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 790,
+        "y": 2520,
+        "wires": []
+    },
+    {
+        "id": "3e620ab.a619af6",
+        "type": "watch",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "files": "/root/userdir/node_modules",
+        "x": 160,
+        "y": 2620,
+        "wires": [
+            [
+                "76666308.e6d684"
+            ]
+        ]
+    },
+    {
+        "id": "76666308.e6d684",
+        "type": "delay",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "pauseType": "delay",
+        "timeout": "5",
+        "timeoutUnits": "seconds",
+        "rate": "1",
+        "rateUnits": "second",
+        "randomFirst": "1",
+        "randomLast": "5",
+        "randomUnits": "seconds",
+        "drop": false,
+        "x": 360,
+        "y": 2620,
+        "wires": [
+            [
+                "6d2874f6.97ed4c"
+            ]
+        ]
+    },
+    {
+        "id": "6d2874f6.97ed4c",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "var tmp = msg.payload;\nmsg={};\nmsg.payload = tmp+\"/lib/flows\";\nmsg.directory = msg.payload;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 490,
+        "y": 2620,
+        "wires": [
+            [
+                "a391079d.696f18"
+            ]
+        ]
+    },
+    {
+        "id": "a391079d.696f18",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": "ls ",
+        "addpay": true,
+        "append": "",
+        "useSpawn": false,
+        "name": "",
+        "x": 610,
+        "y": 2620,
+        "wires": [
+            [
+                "d9f480f5.95bda"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "d9f480f5.95bda",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "var tmp=msg.payload.split(\"\\n\");\ntmp.pop();\n\nvar myMsg={\"payload\":[]};\nfor(var i=0;i<tmp.length;i++){\n    var myObject = {};\n    myObject.directory = msg.directory;\n    myObject.file = tmp[i];\n    myMsg.payload.push(myObject);\n}\nreturn myMsg;",
+        "outputs": "1",
+        "noerr": 0,
+        "x": 730,
+        "y": 2620,
+        "wires": [
+            [
+                "d6e4851b.49327"
+            ]
+        ]
+    },
+    {
+        "id": "d6e4851b.49327",
+        "type": "splitter",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "property": "payload",
+        "x": 850,
+        "y": 2620,
+        "wires": [
+            [
+                "c36e3c5c.ad2238"
+            ]
+        ]
+    },
+    {
+        "id": "c36e3c5c.ad2238",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.payload = \"'\"+msg.payload.directory+\"/\"+msg.payload.file + \"' '/root/userdir/lib/flows/\"+msg.payload.file+\"'\";\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 970,
+        "y": 2620,
+        "wires": [
+            [
+                "baf51717.22aec8"
+            ]
+        ]
+    },
+    {
+        "id": "baf51717.22aec8",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": "ln ",
+        "addpay": true,
+        "append": "",
+        "useSpawn": false,
+        "name": "",
+        "x": 1090,
+        "y": 2620,
+        "wires": [
+            [],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "5e5eb0bf.6458b8",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Node install flows",
+        "info": "",
+        "x": 120,
+        "y": 2420,
+        "wires": []
+    }
diff -ruN node-red-src/ttbsystemflow/Port80.json node-red-src_ttb/ttbsystemflow/Port80.json
--- node-red-src/ttbsystemflow/Port80.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/Port80.json	2017-09-26 15:24:23.268614000 +0000
@@ -0,0 +1,81 @@
+
+    {
+        "id": "2e80babe.a524ee",
+        "type": "tcp in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "server": "server",
+        "host": "",
+        "port": "1880",
+        "datamode": "stream",
+        "datatype": "utf8",
+        "newline": "",
+        "topic": "",
+        "base64": false,
+        "x": 100,
+        "y": 2320,
+        "wires": [
+            [
+                "549f36f.4e27cc8"
+            ]
+        ]
+    },
+    {
+        "id": "549f36f.4e27cc8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "var lines = msg.payload.split(\"\\r\\n\");\n\nvar tokens = lines[0].split(\" \");\nmsg.page = tokens[1];\n\ntokens = lines[1].split(\" \");\nmsg.host = tokens[tokens.length-1].split(\":\")[0];\nmsg.payload = tokens;\n\nreturn msg;",
+        "outputs": 1,
+        "x": 230,
+        "y": 2320,
+        "wires": [
+            [
+                "b2a89e3c.03ba58"
+            ]
+        ]
+    },
+    {
+        "id": "b2a89e3c.03ba58",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "var page = msg.page == \"/\" ? \"\": msg.page;\n\nmsg.payload=\"HTTP/1.1 301 Moved Permanently\\r\\n\";\nmsg.payload += \"Location: http://\" + msg.host + page +\"\\r\\n\";\nmsg.payload += \"Connection: close\\r\\n\";\nmsg.payload += \"\\r\\n\";\nmsg.payload += \"\\r\\n\";\nmsg.payload += \"\\r\\n\";\n\nreturn msg;",
+        "outputs": 1,
+        "x": 350,
+        "y": 2320,
+        "wires": [
+            [
+                "88b880e0.28bf"
+            ]
+        ]
+    },
+    {
+        "id": "ff7b292e.4465f8",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Redirect http port 1880 to 80",
+        "info": "",
+        "x": 160,
+        "y": 2280,
+        "wires": []
+    },
+    {
+        "id": "88b880e0.28bf",
+        "type": "tcp out",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "host": "",
+        "port": "",
+        "beserver": "reply",
+        "base64": false,
+        "end": false,
+        "name": "",
+        "x": 470,
+        "y": 2320,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/queuetopic.json node-red-src_ttb/ttbsystemflow/queuetopic.json
--- node-red-src/ttbsystemflow/queuetopic.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/queuetopic.json	2017-09-26 15:24:23.253511600 +0000
@@ -0,0 +1,13 @@
+
+    {
+        "id": "Topic.Sound",
+        "type": "queue-topic",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "topic": "Sound"
+    },
+    {
+        "id": "Topic.LedMatrix",
+        "type": "queue-topic",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "topic": "LEDMatrix"
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/rsync.json node-red-src_ttb/ttbsystemflow/rsync.json
--- node-red-src/ttbsystemflow/rsync.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/rsync.json	2017-09-26 15:24:23.273647500 +0000
@@ -0,0 +1,414 @@
+
+    {
+        "id": "ff80080c.03a2c8",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/systemupd",
+        "method": "get",
+        "x": 140,
+        "y": 1960,
+        "wires": [
+            [
+                "5b1409ca.1183d"
+            ]
+        ]
+    },
+    {
+        "id": "31860010.a6846",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 470,
+        "y": 1960,
+        "wires": []
+    },
+    {
+        "id": "37696557.bfc4a2",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/system/checkupd",
+        "method": "get",
+        "x": 140,
+        "y": 2020,
+        "wires": [
+            [
+                "a84a89a1.5c55e8"
+            ]
+        ]
+    },
+    {
+        "id": "eb79617f.e143d8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "200 - application/json",
+        "func": "msg.headers = { \"Content-Type\": \"application/json\" }\nmsg.statusCode = 200;\nreturn msg;",
+        "outputs": 1,
+        "x": 1880,
+        "y": 2040,
+        "wires": [
+            [
+                "c8d51b0.7419268"
+            ]
+        ]
+    },
+    {
+        "id": "35038449.3f042c",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/system/update",
+        "method": "get",
+        "x": 130,
+        "y": 2100,
+        "wires": [
+            [
+                "c7fcb7a3.024e08"
+            ]
+        ]
+    },
+    {
+        "id": "7ba567a6.15b54",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 870,
+        "y": 2100,
+        "wires": []
+    },
+    {
+        "id": "c7fcb7a3.024e08",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "config",
+        "func": "if(!context.global.updateInfos) {\n    return [null, msg];\n}\nmsg.src = context.global.updateInfos.src;\nmsg.dest = context.global.updateInfos.dest;\nif(!msg.src || !msg.dest) {\n    return [null, msg];\n}\nreturn [msg, null];",
+        "outputs": "2",
+        "x": 310,
+        "y": 2100,
+        "wires": [
+            [
+                "842f05af.bc2f38"
+            ],
+            [
+                "1cf20ddb.77736a"
+            ]
+        ]
+    },
+    {
+        "id": "842f05af.bc2f38",
+        "type": "template",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "command",
+        "field": "payload",
+        "format": "handlebars",
+        "template": "rsync -arv --delete --exclude 'userdir/*' ttbupdate@mythingbox.io:{{{src}}} {{{dest}}}",
+        "x": 440,
+        "y": 2080,
+        "wires": [
+            [
+                "cdc859e7.4cb35"
+            ]
+        ]
+    },
+    {
+        "id": "cdc859e7.4cb35",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": " ",
+        "addpay": true,
+        "append": "",
+        "useSpawn": "",
+        "name": "rsync",
+        "x": 570,
+        "y": 2080,
+        "wires": [
+            [
+                "7e15b876.0232e"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "7e15b876.0232e",
+        "type": "template",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "JSON response",
+        "field": "payload",
+        "format": "json",
+        "template": "{\n    \"result\": \"OK\"\n}",
+        "x": 720,
+        "y": 2080,
+        "wires": [
+            [
+                "7ba567a6.15b54"
+            ]
+        ]
+    },
+    {
+        "id": "d1b69506.db3c38",
+        "type": "http request",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "method": "GET",
+        "ret": "txt",
+        "url": "",
+        "x": 770,
+        "y": 2020,
+        "wires": [
+            [
+                "4af58ab0.e814dc"
+            ]
+        ]
+    },
+    {
+        "id": "85c41c7e.ce47c8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "set url",
+        "func": "msg.url = msg.payload.update.url + \"?\" + \"type=\" + msg.payload.update.type;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 630,
+        "y": 2020,
+        "wires": [
+            [
+                "d1b69506.db3c38"
+            ]
+        ]
+    },
+    {
+        "id": "3e75fe3a.4de242",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "payload to updateInfos",
+        "func": "msg.updateInfos = msg.payload;\n\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1090,
+        "y": 2040,
+        "wires": [
+            [
+                "5878485e.598988"
+            ]
+        ]
+    },
+    {
+        "id": "5878485e.598988",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "ttb package.json",
+        "filename": "/root/thethingbox/package.json",
+        "format": "utf8",
+        "x": 1310,
+        "y": 2040,
+        "wires": [
+            [
+                "346f76a0.05758a"
+            ]
+        ]
+    },
+    {
+        "id": "346f76a0.05758a",
+        "type": "json",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 1470,
+        "y": 2040,
+        "wires": [
+            [
+                "42a02d16.5d922c"
+            ]
+        ]
+    },
+    {
+        "id": "42a02d16.5d922c",
+        "type": "template",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "field": "ttbversion",
+        "format": "handlebars",
+        "template": "{{payload.version}}",
+        "x": 1590,
+        "y": 2040,
+        "wires": [
+            [
+                "3cae24e8.609294"
+            ]
+        ]
+    },
+    {
+        "id": "3cae24e8.609294",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "var updateInfos = JSON.parse(msg.updateInfos);\nif(updateInfos.version != msg.ttbversion) {\n    msg.payload = updateInfos;\n    context.global.updateInfos = msg.payload;\n} else {\n    msg.payload = {};\n}\nreturn msg;",
+        "outputs": "1",
+        "noerr": 0,
+        "x": 1710,
+        "y": 2040,
+        "wires": [
+            [
+                "eb79617f.e143d8"
+            ]
+        ]
+    },
+    {
+        "id": "1cf20ddb.77736a",
+        "type": "template",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "JSON response",
+        "field": "payload",
+        "format": "json",
+        "template": "{\n    \"result\": \"Error\"\n}",
+        "x": 460,
+        "y": 2120,
+        "wires": [
+            [
+                "7ba567a6.15b54"
+            ]
+        ]
+    },
+    {
+        "id": "fe1f93c0.9abb3",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Update form",
+        "info": "",
+        "x": 110,
+        "y": 1920,
+        "wires": []
+    },
+    {
+        "id": "c8d51b0.7419268",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 2050,
+        "y": 2040,
+        "wires": []
+    },
+    {
+        "id": "4af58ab0.e814dc",
+        "type": "switch",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "property": "statusCode",
+        "rules": [
+            {
+                "t": "neq",
+                "v": "200"
+            },
+            {
+                "t": "eq",
+                "v": "200"
+            }
+        ],
+        "checkall": "true",
+        "outputs": 2,
+        "x": 910,
+        "y": 2020,
+        "wires": [
+            [
+                "f8024db6.54978"
+            ],
+            [
+                "3e75fe3a.4de242"
+            ]
+        ]
+    },
+    {
+        "id": "f8024db6.54978",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.payload = {};\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1030,
+        "y": 2000,
+        "wires": [
+            [
+                "fb11081b.ef4378"
+            ]
+        ]
+    },
+    {
+        "id": "fb11081b.ef4378",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 1150,
+        "y": 2000,
+        "wires": []
+    },
+    {
+        "id": "5b1409ca.1183d",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Update form",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/update.ejs",
+        "reloadfile": true,
+        "x": 330,
+        "y": 1960,
+        "wires": [
+            [
+                "31860010.a6846"
+            ]
+        ]
+    },
+    {
+        "id": "a84a89a1.5c55e8",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "/root/settings.json",
+        "filename": "/root/settings.json",
+        "format": "utf8",
+        "x": 350,
+        "y": 2020,
+        "wires": [
+            [
+                "1fada6ba.bdb999"
+            ]
+        ]
+    },
+    {
+        "id": "1fada6ba.bdb999",
+        "type": "json",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 510,
+        "y": 2020,
+        "wires": [
+            [
+                "85c41c7e.ce47c8"
+            ]
+        ]
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/settings.ejs node-red-src_ttb/ttbsystemflow/settings.ejs
--- node-red-src/ttbsystemflow/settings.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/settings.ejs	2017-09-26 15:24:23.156898300 +0000
@@ -0,0 +1,168 @@
+<!DOCTYPE HTML>
+<html>
+<title>Settings</title>
+<script src="http://code.jquery.com/jquery-1.10.2.js"></script>
+<link rel="icon" type="image/png" href="../../favicon.ico">
+<link href="../../vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen">
+<link href="../../vendor/jquery/css/smoothness/jquery-ui-1.10.3.custom.min.css" rel="stylesheet" media="screen">
+<link rel="stylesheet" href="../../vendor/font-awesome/css/font-awesome.min.css">
+<link rel="stylesheet" href="../../vendor/vendor.css">
+<link rel="stylesheet" href="../../red/style.min.css">
+<script src="/async.js"></script>
+<script src="/vendor/vendor.js"></script>
+<script src="/vendor/ace/ace.js"></script>
+<script src="/vendor/ace/ext-language_tools.js"></script>
+<script src="/red/red.js"></script>
+<script src="/red/main.js"></script>
+<script src="/red/events.js"></script>
+<script src="/red/i18n.js"></script>
+<script src="/red/settings.js"></script>
+<script src="/red/user.js"></script>
+<script src="/red/comms.js"></script>
+<script src="/red/ui/state.js"></script>
+<script src="/red/validators.js"></script>
+<script src="/red/ui/keyboard.js"></script>
+<script src="/red/ui/view.js"></script>
+<script src="/red/ui/editor.js"></script>
+<script src="/red/ui/library.js"></script>
+<script src="/red/ui/notifications.js"></script>
+
+
+<style>
+    html {
+        height: 100%;
+    }
+    body {
+        padding-top: 0px;
+        height: 100%;
+    }
+    .navbar-fixed-top {
+        position: fixed !important;
+    }
+    .setting-board {
+        position: static;
+    }
+    .setting-edit-container {
+        padding: 0px;
+        margin: 23px auto;
+        width: 540px;
+    }
+    .setting-about-container {
+        margin: 0px auto;
+        width: 300px;
+    }
+    #settings-container {
+        overflow: auto;
+        background-color: white;
+        height: 100%;
+    }
+    .ui-button:active {
+        background-color: #8f8f8f;
+    }
+</style>
+
+<script>
+    function load() {
+        var funcs = [];
+
+        funcs.push(function(callback){
+            $("#hostname-container").load("hostname", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#wifi-container").load("wifi", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#static_ip-container").load("static_ip", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#show-all-workspaces").load("show_all", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#account-container").load("account", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#systemupd-container").load("systemupd", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#lang-container").load("lang", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#about-container").load("about", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#enable_backup-container").load("enable_backup", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#create_backup-container").load("create_backup", function(){
+                callback();
+            });
+        });
+        funcs.push(function(callback){
+            $("#use_backup-container").load("use_backup", function(){
+                callback();
+            });
+        });
+
+        async.parallel(funcs, function(){
+            $(".note").html(RED._("settings.common.note"));
+            $(".button-reboot").click(function() {
+                    var conf = confirm("Are you sure you want to Reboot ?");
+                    if(conf){
+                        RED.notify("Reboot ...","success");
+                        $.ajax({
+                            type: "POST",
+                            url: "/inject/reboot"
+                        });
+                    }
+            });
+        });
+    }
+
+    function waitNLS() {
+        if (RED._("settings.common.reboot") != "") {
+            load();
+        }
+        else {
+            setTimeout(waitNLS, 100);
+        }
+    }
+
+    $(document).ready(waitNLS);
+
+</script>
+
+<div id="notifications"></div>
+
+<div id="settings-container">
+    <div id="hostname-container"  class="setting-edit-container"></div>
+    <div id="account-container"   class="setting-edit-container"></div>
+    <div id="lang-container"      class="setting-edit-container"></div>
+    <div id="wifi-container"      class="setting-edit-container"></div>
+    <div id="show-all-workspaces" class="setting-edit-container"></div>
+    <div id="static_ip-container" class="setting-edit-container"></div>
+    <div id="enable_backup-container" class="setting-edit-container"></div>
+    <div id="create_backup-container" class="setting-edit-container"></div>
+    <div id="use_backup-container" class="setting-edit-container"></div>
+    <div id="systemupd-container" class="setting-edit-container"></div>
+    <div id="about-container" class="setting-about-container"></div>
+</div>
+
+</html>
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/show_all.ejs node-red-src_ttb/ttbsystemflow/show_all.ejs
--- node-red-src/ttbsystemflow/show_all.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/show_all.ejs	2017-09-26 15:24:23.250122700 +0000
@@ -0,0 +1,65 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+	tabindex="-1"
+	class="setting-board ui-dialog ui-widget ui-widget-content">
+
+	<div
+		class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+		<span class="ui-dialog-title" id="ui-id-4">
+            <span id="showall_title"></span>
+        </span>
+	</div>
+	<div
+		style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+		id="dialog" class="hide ui-dialog-content ui-widget-content">
+		<form id="show_all-form" class="form-horizontal" action="/handle/show_all">
+		
+			<div class="form-row">
+				<label for="show_all-workspaces">
+					<i class="icon-tag"></i>
+                    <span id="showall_show"></span>
+				</label>
+				<input id="show_all-workspaces" type="checkbox" name="workspaces" title="Show all workspaces">
+			</div>
+		
+			<div class="form-tips note"></div>			
+		</form>
+	</div>
+
+	<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
+		<div class="ui-dialog-buttonset">
+			<button aria-disabled="false" role="button"
+				class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"
+				type="submit" form="show_all-form">
+				<span class="ui-button-text">OK</span>
+			</button>
+		</div>
+	</div>
+</div>
+
+<script>
+    $("#showall_title").html(RED._("settings.showall.title"));
+    $("#showall_show").html(RED._("settings.showall.show"));
+    
+    $("#show_all-workspaces").ready(function(){
+        var settings = <%- payload %>;
+        if(typeof settings != undefined && settings === true){
+          $('#show_all-workspaces').attr('checked', true);
+        } else {
+          $('#show_all-workspaces').attr('checked', false);
+        }
+    });
+	
+	$('#show_all-form').submit(function(event){
+        var $this = $(this);
+        event.preventDefault();
+        $('input[name="usingAJAX"]',this).val( 'true' );
+        var url = $this.attr('action');
+        var dataToSend = $this.serialize();
+        var callback = function(dataReceived){
+            RED.notify(dataReceived,"success");
+        };
+        var typeOfDataToReceive = 'html';
+        $.get( url, dataToSend, callback, typeOfDataToReceive )
+    });
+</script>
+
diff -ruN node-red-src/ttbsystemflow/show_all_workspaces.json node-red-src_ttb/ttbsystemflow/show_all_workspaces.json
--- node-red-src/ttbsystemflow/show_all_workspaces.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/show_all_workspaces.json	2017-09-26 15:24:23.159906700 +0000
@@ -0,0 +1,130 @@
+
+    {
+        "id": "b7487335.781028",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/show_all",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 130,
+        "y": 1520,
+        "wires": [
+            [
+                "34441f25.5caeb"
+            ]
+        ]
+    },
+    {
+        "id": "92551122.d4b45",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 610,
+        "y": 1520,
+        "wires": []
+    },
+    {
+        "id": "4f4c0450.a6e2d4",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Show all",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/show_all.ejs",
+        "reloadfile": true,
+        "x": 480,
+        "y": 1520,
+        "wires": [
+            [
+                "92551122.d4b45"
+            ]
+        ]
+    },
+    {
+        "id": "2206d474.2376ec",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Show all workspaces",
+        "info": "",
+        "x": 140,
+        "y": 1480,
+        "wires": []
+    },
+    {
+        "id": "5e91808a.12714",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/handle/show_all",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 140,
+        "y": 1580,
+        "wires": [
+            [
+                "1677e907.94d00f",
+                "42850e4f.dd631"
+            ]
+        ]
+    },
+    {
+        "id": "bbcf7d01.ff9ca8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 430,
+        "y": 1560,
+        "wires": []
+    },
+    {
+        "id": "1677e907.94d00f",
+        "type": "ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "ejs": "Request submitted.",
+        "x": 310,
+        "y": 1560,
+        "wires": [
+            [
+                "bbcf7d01.ff9ca8"
+            ]
+        ]
+    },
+    {
+        "id": "42850e4f.dd631",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "parse query",
+        "func": "if(msg.req.query.workspaces === \"on\"){\n    context.global.settings.showall =  true;\n}\nelse {\n    context.global.settings.showall =  false;\n}\ncontext.global.settingslib.writeSettings(context.global.settings);",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 330,
+        "y": 1600,
+        "wires": [
+            []
+        ]
+    },
+    {
+        "id": "34441f25.5caeb",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "check.checkox",
+        "func": "if(context.global.settings.showall ===  true){\n    msg.payload =  true;\n}\nelse {\n    msg.payload =  false;\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 320,
+        "y": 1520,
+        "wires": [
+            [
+                "4f4c0450.a6e2d4"
+            ]
+        ]
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/static_ip.ejs node-red-src_ttb/ttbsystemflow/static_ip.ejs
--- node-red-src/ttbsystemflow/static_ip.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/static_ip.ejs	2017-09-26 15:24:23.257239000 +0000
@@ -0,0 +1,162 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+	tabindex="-1"
+	class="setting-board ui-dialog ui-widget ui-widget-content">
+
+	<div
+		class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+		<span class="ui-dialog-title" id="ui-id-4">
+            <span id="staticip_title"></span>
+        </span>
+	</div>
+	<div
+		style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+		id="dialog" class="hide ui-dialog-content ui-widget-content">
+		<form id="static_ip-form" class="form-horizontal"
+			action="/handle/static_ip">
+	
+	<div class="form-row">
+		<label for="static_ip-iface"><i class="icon-tag"></i>
+			<span id="staticip_interface"></span>
+        </label>
+        <select id="static_ip-iface-input" name="iface">
+			<option value="eth0" id="staticip_ethernet"></option>
+			<option value="wlan0" id="staticip_wifi"></option>
+		</select>
+	</div>
+	<div class="form-row">
+		<label for="static_ip-type-input"><i class="icon-tag"></i>
+			<span id="staticip_type"></span>
+        </label>
+        <select id="static_ip-type-input" name="type">
+			<option value="static" id="staticip_static"></option>
+			<option value="dynamic" id="staticip_dynamic"></option>
+		</select>
+	</div>
+	<div class="form-row static-properties">
+		<label for="static_ip-ip">
+			<i class="icon-tag"></i>
+            <span id="staticip_ip"></span>
+		</label>
+		<input id="static_ip-ip" type="text" name="ip">
+	</div>
+	<div class="form-row static-properties">
+		<label for="static_ip-netmask">
+			<i class="icon-tag"></i>
+            <span id="staticip_netmask"></span>
+		</label>
+		<input id="static_ip-netmask" type="text" name="netmask">
+	</div>
+	<div class="form-row static-properties">
+		<label for="static_ip-gateway">
+			<i class="icon-tag"></i>
+            <span id="staticip_gateway"></span>
+		</label>
+		<input id="static_ip-gateway" type="text" name="gateway">
+	</div>
+			<div class="form-tips note"></div>
+		</form>
+	</div>
+	<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
+		<div class="ui-dialog-buttonset">
+			<button aria-disabled="false" role="button"
+				class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"
+				type="submit" form="static_ip-form">
+				<span class="ui-button-text">OK</span>
+			</button>
+		</div>
+	</div>
+</div>
+
+<script>
+    $("#staticip_title").html(RED._("settings.staticip.title"));
+    $("#staticip_interface").html(RED._("settings.staticip.interface.label"));
+    $("#staticip_ethernet").html(RED._("settings.staticip.interface.ethernet"));
+    $("#staticip_wifi").html(RED._("settings.staticip.interface.wifi"));
+    $("#staticip_type").html(RED._("settings.staticip.type.label"));
+    $("#staticip_dynamic").html(RED._("settings.staticip.type.dynamic"));
+    $("#staticip_static").html(RED._("settings.staticip.type.static"));
+    $("#staticip_ip").html(RED._("settings.staticip.ip"));
+    $("#staticip_netmask").html(RED._("settings.staticip.netmask"));
+    $("#staticip_gateway").html(RED._("settings.staticip.gateway"));
+    
+    $("#static_ip-form").ready(function() {
+        var eth  = "<%- eth %>";
+        if(eth === "dynamic"){
+            $(".static-properties").hide();
+            $('#static_ip-type-input option[value="dynamic"]').prop("selected", true);
+//            $("#static_ip-ip,#static_ip-netmask,#static_ip-gateway").attr("readonly", true);
+        }
+        if(eth === "static") { 
+            $(".static-properties").show();
+            $('#static_ip-type-input option[value="static"]').prop("selected", true);
+//            $("#static_ip-ip,#static_ip-netmask,#static_ip-gateway").attr("readonly", false);
+        }
+        
+        $("#static_ip-ip").attr("value", "<%- ethaddress %>");
+        $("#static_ip-netmask").attr("value", "<%- ethnetmask %>");
+        $("#static_ip-gateway").attr("value", "<%- ethgateway %>");
+    });
+    
+    $("#static_ip-iface-input").change(function(){
+        var val = $(this).val();
+        var wifi = "<%- wifi %>";
+        var eth  = "<%- eth %>";
+        
+        if(val === "eth0"){
+            if(eth === "dynamic"){ 
+                $(".static-properties").hide();
+                $('#static_ip-type-input option[value="dynamic"]').prop("selected", true);
+//                $("#static_ip-ip,#static_ip-netmask,#static_ip-gateway").attr("readonly", true);
+            }
+            if(eth === "static"){ 
+                $(".static-properties").show();
+                $('#static_ip-type-input option[value="static"]').prop("selected", true);
+//                $("#static_ip-ip,#static_ip-netmask,#static_ip-gateway").attr("readonly", false);
+            }
+            $("#static_ip-ip").attr("value", "<%- ethaddress %>");
+            $("#static_ip-netmask").attr("value", "<%- ethnetmask %>");
+            $("#static_ip-gateway").attr("value", "<%- ethgateway %>");
+        } else {
+            if(wifi === "dynamic"){ 
+                $(".static-properties").hide();
+                $('#static_ip-type-input option[value="dynamic"]').prop("selected", true);
+//                $("#static_ip-ip,#static_ip-netmask,#static_ip-gateway").attr("readonly", true);
+            }
+            if(wifi === "static"){ 
+                $(".static-properties").show();
+                $('#static_ip-type-input option[value="static"]').prop("selected", true);
+//                $("#static_ip-ip,#static_ip-netmask,#static_ip-gateway").attr("readonly", false);
+            }
+            $("#static_ip-ip").attr("value", "<%- wifiaddress %>");
+            $("#static_ip-netmask").attr("value", "<%- wifinetmask %>");
+            $("#static_ip-gateway").attr("value", "<%- wifigateway %>");
+        }
+    });
+    
+    $("#static_ip-type-input").change(function(){
+        var val = $(this).val();
+
+        if(val === "dynamic"){
+            $(".static-properties").hide();
+//            $("#static_ip-ip,#static_ip-netmask,#static_ip-gateway").attr("readonly", true);
+        }
+        else {
+            $(".static-properties").show();
+//            $("#static_ip-ip,#static_ip-netmask,#static_ip-gateway").attr("readonly", false);
+        }
+    });
+
+	$('#static_ip-form').submit(function(event){
+        var $this = $(this);
+
+        event.preventDefault();
+        $('input[name="usingAJAX"]',this).val( 'true' );
+        var url = $this.attr('action');
+        var dataToSend = $this.serialize();
+        var callback = function(dataReceived){
+            RED.notify(dataReceived,"success");
+        };
+        var typeOfDataToReceive = 'html';
+        $.get( url, dataToSend, callback, typeOfDataToReceive )
+    });
+</script>
diff -ruN node-red-src/ttbsystemflow/static_ip.json node-red-src_ttb/ttbsystemflow/static_ip.json
--- node-red-src/ttbsystemflow/static_ip.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/static_ip.json	2017-09-26 15:24:23.173640300 +0000
@@ -0,0 +1,166 @@
+
+    {
+        "id": "e872f58d.6859d8",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Static IP",
+        "info": "",
+        "x": 100,
+        "y": 380,
+        "wires": []
+    },
+    {
+        "id": "1e35818e.2c7c36",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/static_ip",
+        "method": "get",
+        "x": 130,
+        "y": 420,
+        "wires": [
+            [
+                "c39173f7.ed4768"
+            ]
+        ]
+    },
+    {
+        "id": "c39173f7.ed4768",
+        "type": "file in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/etc/network/interfaces",
+        "format": "utf8",
+        "x": 340,
+        "y": 420,
+        "wires": [
+            [
+                "64220756.abac98"
+            ]
+        ]
+    },
+    {
+        "id": "64220756.abac98",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "var interfaces = msg.payload.split('\\n');\nfor(var i = 0; i < interfaces.length; i++){\n    if(interfaces[i].search(\"iface\") != -1){\n        if(interfaces[i].search(\"wlan0\") != -1 ){\n            if(interfaces[i].search(\"dhcp\") != -1){\n                msg.wifi = \"dynamic\";\n                msg.wifiaddress = \"\";\n                msg.wifinetmask = \"\";\n                msg.wifigateway = \"\";\n            } else if(interfaces[i].search(\"static\") != -1) {\n                msg.wifi = \"static\";\n                msg.wifiaddress = interfaces[i+2].replace(\"\\taddress\", \"\").replace(/[\\n\\r]/g, \"\").trim();\n                msg.wifinetmask = interfaces[i+3].replace(\"\\tnetmask\", \"\").replace(/[\\n\\r]/g, \"\").trim();\n                msg.wifigateway = interfaces[i+4].replace(\"\\tgateway\", \"\").replace(/[\\n\\r]/g, \"\").trim();\n            }\n        }\n        if(interfaces[i].search(\"eth0\") != -1 ){\n            if(interfaces[i].search(\"dhcp\") != -1){\n                msg.eth = \"dynamic\";\n                msg.ethaddress = msg.eth0add || \"\";\n                msg.ethnetmask = \"\";\n                msg.ethgateway = \"\";\n            } else if(interfaces[i].search(\"static\") != -1) {\n                msg.eth = \"static\";\n                msg.ethaddress = interfaces[i+1].replace(\"\\taddress\", \"\").replace(/[\\n\\r]/g, \"\").trim();\n                msg.ethnetmask = interfaces[i+2].replace(\"\\tnetmask\", \"\").replace(/[\\n\\r]/g, \"\").trim();\n                msg.ethgateway = interfaces[i+3].replace(\"\\tgateway\", \"\").replace(/[\\n\\r]/g, \"\").trim();\n            }\n        }\n    }\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 510,
+        "y": 420,
+        "wires": [
+            [
+                "c2b65a3.8fb98a8"
+            ]
+        ]
+    },
+    {
+        "id": "c2b65a3.8fb98a8",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Static IP",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/static_ip.ejs",
+        "reloadfile": true,
+        "x": 640,
+        "y": 420,
+        "wires": [
+            [
+                "c871c591.08ac8"
+            ]
+        ]
+    },
+    {
+        "id": "c871c591.08ac8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 770,
+        "y": 420,
+        "wires": []
+    },
+    {
+        "id": "2586cdc6.82e3ea",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/handle/static_ip",
+        "method": "get",
+        "x": 140,
+        "y": 1000,
+        "wires": [
+            [
+                "e8eddb95.8c3af",
+                "6884afaf.1b7e1"
+            ]
+        ]
+    },
+    {
+        "id": "8e99095f.091ae8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 430,
+        "y": 980,
+        "wires": []
+    },
+    {
+        "id": "e8eddb95.8c3af",
+        "type": "ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "ejs": "Request submitted.",
+        "x": 310,
+        "y": 980,
+        "wires": [
+            [
+                "8e99095f.091ae8"
+            ]
+        ]
+    },
+    {
+        "id": "6884afaf.1b7e1",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "parse query",
+        "func": "\nreturn {\n\tpayload: msg.req.query\n};",
+        "outputs": 1,
+        "x": 330,
+        "y": 1020,
+        "wires": [
+            [
+                "96cb6138.8e6c8"
+            ]
+        ]
+    },
+    {
+        "id": "96cb6138.8e6c8",
+        "type": "interfaces",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 480,
+        "y": 1020,
+        "wires": []
+    },
+    {
+        "id": "6e728b59.3e9f8c",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Static IP",
+        "info": "",
+        "x": 100,
+        "y": 960,
+        "wires": []
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/switchScreen.json node-red-src_ttb/ttbsystemflow/switchScreen.json
--- node-red-src/ttbsystemflow/switchScreen.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/switchScreen.json	2017-09-26 15:24:23.214583700 +0000
@@ -0,0 +1,474 @@
+
+    {
+        "id": "5b3b1c57.4e6f84",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/displayMode",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 140,
+        "y": 4360,
+        "wires": [
+            [
+                "d0b01be2.c5bbc8"
+            ]
+        ]
+    },
+    {
+        "id": "6b0c0946.d1ec98",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 710,
+        "y": 4360,
+        "wires": []
+    },
+    {
+        "id": "ec89c83d.5a2698",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Dilsplay mode",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/displayMode.ejs",
+        "reloadfile": true,
+        "x": 540,
+        "y": 4360,
+        "wires": [
+            [
+                "6b0c0946.d1ec98"
+            ]
+        ]
+    },
+    {
+        "id": "4cda2dc5.0f16e4",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/handle/displayMode",
+        "method": "get",
+        "swaggerDoc": "",
+        "x": 550,
+        "y": 4420,
+        "wires": [
+            [
+                "45fe2894.9fedd8",
+                "25fd687f.6e87b8"
+            ]
+        ]
+    },
+    {
+        "id": "5f54fde2.4b90a4",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 890,
+        "y": 4420,
+        "wires": []
+    },
+    {
+        "id": "45fe2894.9fedd8",
+        "type": "ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "ejs": "Request submitted.",
+        "x": 750,
+        "y": 4420,
+        "wires": [
+            [
+                "5f54fde2.4b90a4"
+            ]
+        ]
+    },
+    {
+        "id": "25fd687f.6e87b8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "parse query",
+        "func": "msg.mode =  Number(msg.payload.displayMode);\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 770,
+        "y": 4460,
+        "wires": [
+            [
+                "8112a072.2656e"
+            ]
+        ]
+    },
+    {
+        "id": "d0b01be2.c5bbc8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "check.lang",
+        "func": "if(typeof context.global.settings.displayMode === \"undefined\") {\n    msg.payload = \"2\";\n} else {\n    msg.payload = context.global.settings.displayMode;\n}\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 370,
+        "y": 4360,
+        "wires": [
+            [
+                "ec89c83d.5a2698"
+            ]
+        ]
+    },
+    {
+        "id": "97ee1cd.64648e",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "set version of display",
+        "info": "",
+        "x": 140,
+        "y": 4320,
+        "wires": []
+    },
+    {
+        "id": "91a42123.30ea9",
+        "type": "switch",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "property": "mode",
+        "propertyType": "msg",
+        "rules": [
+            {
+                "t": "eq",
+                "v": "1",
+                "vt": "num"
+            },
+            {
+                "t": "eq",
+                "v": "2",
+                "vt": "num"
+            },
+            {
+                "t": "eq",
+                "v": "3",
+                "vt": "num"
+            }
+        ],
+        "checkall": "false",
+        "outputs": 3,
+        "x": 990,
+        "y": 4560,
+        "wires": [
+            [
+                "7f404bad.24c754"
+            ],
+            [
+                "ac2ea755.e8b1c8"
+            ],
+            [
+                "21095c27.6e5784"
+            ]
+        ]
+    },
+    {
+        "id": "5d27d4b.7db9e2c",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": " ",
+        "addpay": true,
+        "append": "",
+        "useSpawn": "",
+        "timer": "",
+        "name": "",
+        "x": 1290,
+        "y": 4560,
+        "wires": [
+            [],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "af577681.6bef68",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": " ",
+        "addpay": true,
+        "append": "",
+        "useSpawn": "",
+        "timer": "",
+        "name": "",
+        "x": 850,
+        "y": 4560,
+        "wires": [
+            [
+                "91a42123.30ea9"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "8112a072.2656e",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "delete old set",
+        "func": "context.global.settings.displayMode =  msg.mode;\ncontext.global.settingslib.writeSettings(context.global.settings);\n\nmsg.baseLedMatrix = \"/root/thethingbox/node_modules/node-red/node_modules/ttb-node-ledmatrix/rpi-rgb-led-matrix-master/\";\nmsg.payload = \"rm \" + msg.baseLedMatrix + \"option.conf ;\"+\n              \"rm \" + msg.baseLedMatrix + \"led-matrix;\";\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 700,
+        "y": 4560,
+        "wires": [
+            [
+                "af577681.6bef68"
+            ]
+        ]
+    },
+    {
+        "id": "561a5989.1ab638",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "mode 1",
+        "func": "msg.mode = 1;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 320,
+        "y": 4440,
+        "wires": [
+            [
+                "8112a072.2656e"
+            ]
+        ]
+    },
+    {
+        "id": "b6122f51.629ad",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "mode 2",
+        "func": "msg.mode = 2;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 320,
+        "y": 4560,
+        "wires": [
+            [
+                "8112a072.2656e"
+            ]
+        ]
+    },
+    {
+        "id": "a16ca395.51334",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "mode 3",
+        "func": "msg.mode = 3;\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 320,
+        "y": 4680,
+        "wires": [
+            [
+                "8112a072.2656e"
+            ]
+        ]
+    },
+    {
+        "id": "8d351746.514fb8",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "set led-matrix for card V1 with 16x32 panel",
+        "info": "",
+        "x": 210,
+        "y": 4400,
+        "wires": []
+    },
+    {
+        "id": "switch.screen.mode.1",
+        "type": "inject",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "date",
+        "repeat": "",
+        "crontab": "",
+        "once": false,
+        "x": 100,
+        "y": 4440,
+        "wires": [
+            [
+                "561a5989.1ab638"
+            ]
+        ]
+    },
+    {
+        "id": "switch.screen.mode.2",
+        "type": "inject",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "date",
+        "repeat": "",
+        "crontab": "",
+        "once": false,
+        "x": 100,
+        "y": 4560,
+        "wires": [
+            [
+                "b6122f51.629ad"
+            ]
+        ]
+    },
+    {
+        "id": "switch.screen.mode.3",
+        "type": "inject",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "date",
+        "repeat": "",
+        "crontab": "",
+        "once": false,
+        "x": 100,
+        "y": 4680,
+        "wires": [
+            [
+                "a16ca395.51334"
+            ]
+        ]
+    },
+    {
+        "id": "5b01946f.7c930c",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "set led-matrix for card V2 with 16x32 panel",
+        "info": "",
+        "x": 210,
+        "y": 4520,
+        "wires": []
+    },
+    {
+        "id": "3c73ac3c.7e9de4",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "set led-matrix for card V2 with 32x64 panel",
+        "info": "",
+        "x": 210,
+        "y": 4640,
+        "wires": []
+    },
+    {
+        "id": "7f404bad.24c754",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "mode 1",
+        "func": "msg.payload = \"ln -s \" + msg.baseLedMatrix + \"conf/cardV1_16x32.conf \" + msg.baseLedMatrix + \"option.conf;\" +\n              \"ln -s \" + msg.baseLedMatrix + \"led-matrix_cardV1 \" + msg.baseLedMatrix + \"led-matrix;\";\n\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1140,
+        "y": 4520,
+        "wires": [
+            [
+                "5d27d4b.7db9e2c"
+            ]
+        ]
+    },
+    {
+        "id": "ac2ea755.e8b1c8",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "mode 2",
+        "func": "msg.payload = \"ln -s \" + msg.baseLedMatrix + \"conf/cardV2_16x32.conf \" + msg.baseLedMatrix + \"option.conf;\" +\n              \"ln -s \" + msg.baseLedMatrix + \"led-matrix_cardV2 \" + msg.baseLedMatrix + \"led-matrix;\";\n              \nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1140,
+        "y": 4560,
+        "wires": [
+            [
+                "5d27d4b.7db9e2c"
+            ]
+        ]
+    },
+    {
+        "id": "21095c27.6e5784",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "mode 3",
+        "func": "msg.payload = \"ln -s \" + msg.baseLedMatrix + \"conf/cardV2_32x64.conf \" + msg.baseLedMatrix + \"option.conf;\" +\n              \"ln -s \" + msg.baseLedMatrix + \"led-matrix_cardV2 \" + msg.baseLedMatrix + \"led-matrix;\";\n              \nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 1140,
+        "y": 4600,
+        "wires": [
+            [
+                "5d27d4b.7db9e2c"
+            ]
+        ]
+    },
+    {
+        "id": "8FBFEC00",
+        "type": "mqtt in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "NFC 8FBFEC00",
+        "topic": "smartcard/msgread/8FBFEC00",
+        "qos": "0",
+        "broker": "MQTT.Localhost",
+        "x": 120,
+        "y": 4480,
+        "wires": [
+            [
+                "561a5989.1ab638"
+            ]
+        ]
+    },
+    {
+        "id": "8F773A00",
+        "type": "mqtt in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "NFC 8F773A00",
+        "topic": "smartcard/msgread/8F773A00",
+        "broker": "MQTT.Localhost",
+        "x": 120,
+        "y": 4600,
+        "wires": [
+            [
+                "b6122f51.629ad"
+            ]
+        ]
+    },
+    {
+        "id": "4084DBD7",
+        "type": "mqtt in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "NFC 4084DBD7",
+        "topic": "smartcard/msgread/4084DBD7",
+        "broker": "MQTT.Localhost",
+        "x": 120,
+        "y": 4720,
+        "wires": [
+            [
+                "a16ca395.51334"
+            ]
+        ]
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/unused_config.json node-red-src_ttb/ttbsystemflow/unused_config.json
--- node-red-src/ttbsystemflow/unused_config.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/unused_config.json	2017-09-26 15:24:23.261389100 +0000
@@ -0,0 +1,231 @@
+
+    {
+        "id": "647bab05.791094",
+        "type": "mysql",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "mydb": "MYSQL.Localhost",
+        "name": "",
+        "x": 340,
+        "y": 4820,
+        "wires": [
+            [
+                "9753d317.a21b6"
+            ]
+        ]
+    },
+    {
+        "id": "93739587.c54e28",
+        "type": "mongodb in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "mongodb": "MONGODB.Localhost",
+        "name": "",
+        "collection": "",
+        "operation": "find",
+        "x": 390,
+        "y": 4860,
+        "wires": [
+            [
+                "ca988e03.d1efc"
+            ]
+        ]
+    },
+    {
+        "id": "96ed168c.ab8d98",
+        "type": "go",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 90,
+        "y": 4820,
+        "wires": [
+            [
+                "85c694d8.34bc88"
+            ]
+        ]
+    },
+    {
+        "id": "6974d483.0c523c",
+        "type": "go",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 90,
+        "y": 4860,
+        "wires": [
+            [
+                "b38b878d.ab4148"
+            ]
+        ]
+    },
+    {
+        "id": "85c694d8.34bc88",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.topic = 'select * from KEY_VAL where K=?'\nmsg.payload = [\"John\"]\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 210,
+        "y": 4820,
+        "wires": [
+            [
+                "647bab05.791094"
+            ]
+        ]
+    },
+    {
+        "id": "9753d317.a21b6",
+        "type": "debug",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 510,
+        "y": 4820,
+        "wires": []
+    },
+    {
+        "id": "ca988e03.d1efc",
+        "type": "debug",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 650,
+        "y": 4860,
+        "wires": []
+    },
+    {
+        "id": "c72949ed.aa2798",
+        "type": "queueuser",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "msgaction": "dump",
+        "element": "",
+        "msgtype": "",
+        "over": "",
+        "ttl": "",
+        "callbackTopic": "",
+        "broker": "MQTT.Localhost",
+        "topic": "Topic.LedMatrix",
+        "x": 280,
+        "y": 4940,
+        "wires": [
+            [
+                "4c276b02.9b2604"
+            ]
+        ]
+    },
+    {
+        "id": "4c276b02.9b2604",
+        "type": "debug",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 490,
+        "y": 4940,
+        "wires": []
+    },
+    {
+        "id": "ccf2ff74.31e8a",
+        "type": "go",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 90,
+        "y": 4940,
+        "wires": [
+            [
+                "c72949ed.aa2798"
+            ]
+        ]
+    },
+    {
+        "id": "b38b878d.ab4148",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.collection = \"_default\";\nmsg.payload = {\"name\": \"John\"};\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 210,
+        "y": 4860,
+        "wires": [
+            [
+                "93739587.c54e28"
+            ]
+        ]
+    },
+    {
+        "id": "f6238b22.817848",
+        "type": "go",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 90,
+        "y": 4900,
+        "wires": [
+            [
+                "f3e4cf2.d1e623"
+            ]
+        ]
+    },
+    {
+        "id": "f3e4cf2.d1e623",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "func": "msg.collection = \"_default\";\nmsg.operation = \"find.toArray\";\nmsg.payload = [{\"name\":\"John\"}];\nreturn msg;",
+        "outputs": 1,
+        "noerr": 0,
+        "x": 210,
+        "y": 4900,
+        "wires": [
+            [
+                "17fc1fce.fdfbe"
+            ]
+        ]
+    },
+    {
+        "id": "5d5bb92e.458f18",
+        "type": "debug",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "active": true,
+        "console": "false",
+        "complete": "false",
+        "x": 650,
+        "y": 4900,
+        "wires": []
+    },
+    {
+        "id": "17fc1fce.fdfbe",
+        "type": "mongodb2 in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "service": "_ext_",
+        "configNode": "MONGODB2.Localhost",
+        "name": "",
+        "collection": "",
+        "operation": "",
+        "x": 390,
+        "y": 4900,
+        "wires": [
+            [
+                "5d5bb92e.458f18"
+            ]
+        ]
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/update.ejs node-red-src_ttb/ttbsystemflow/update.ejs
--- node-red-src/ttbsystemflow/update.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/update.ejs	2017-09-26 15:24:23.200557400 +0000
@@ -0,0 +1,78 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+    tabindex="-1"
+    class="setting-board ui-dialog ui-widget ui-widget-content">
+
+    <div
+        class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+        <span class="ui-dialog-title" id="ui-id-4">
+            <span id="update_title"></span>
+        </span>
+    </div>
+    <div
+        style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+        id="dialog" class="hide ui-dialog-content ui-widget-content">
+
+        <div id="curver">
+            <p><span id="update_no"></span></p>
+        </div>
+        
+        <div id="updatefound" style="display: none;">
+            <p><span id="update_yes"></span></p>
+        </div>
+
+        <div class="form-tips update-tip">
+            <span id="update_note"></span>
+        </div>
+    </div>
+
+
+    <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
+        <span id="upd-in-progress" style="display: none;"><img src="/red/images/spin.svg" /><span id="update_progress"></span></span>
+        <div class="ui-dialog-buttonset">
+            <button id="btn-systemupd"><span id="update_update"></span></button>
+        </div>
+    </div>
+</div>
+
+<script>
+    $("#update_title").html(RED._("settings.update.title"));
+    $("#update_no").html(RED._("settings.update.no"));
+    $("#update_yes").html(RED._("settings.update.yes"));
+    $("#update_note").html(RED._("settings.update.note"));
+    $("#update_progress").html(RED._("settings.update.progress"));
+    $("#update_update").html(RED._("settings.update.update"));
+
+    $("#btn-systemupd").button({disabled: true});
+    $(".update-tip").css("display", "none");
+    
+    $.getJSON("/system/checkupd", function(json) {
+        if(json.version) {
+            $("#updatefound").css("display", "block");
+            $("#curver").css("display", "none");
+            $(".update-tip").css("display", "block");
+            $("#btn-systemupd").button("option", "disabled", false);
+        } else {
+            $("#updatefound").css("display", "none");
+            $("#curver").css("display", "block");
+            $(".update-tip").css("display", "none");
+            $("#btn-systemupd").button("option", "disabled", true);
+        }
+    });
+    
+    $("#btn-systemupd").click(function() {
+        $(".button-reboot").button({disabled: true});
+        $("#upd-in-progress").css("display", "inherit");
+        $.getJSON("/system/update", function(json) {
+            $("#upd-in-progress").css("display", "none");
+            if(json.result && json.result === "OK") {
+                // OK
+                $("#btn-systemupd").button("option", "disabled", true);
+                $(".button-reboot").button("option", "disabled", false);
+                RED.notify(RED._("settings.update.success"), "success");
+            } else {
+                // ERROR
+                RED.notify(RED._("settings.update.error"), "error");
+            }
+        });
+    });
+</script>
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/use_backup.ejs node-red-src_ttb/ttbsystemflow/use_backup.ejs
--- node-red-src/ttbsystemflow/use_backup.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/use_backup.ejs	2017-09-26 15:24:23.199000100 +0000
@@ -0,0 +1,60 @@
+<div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+    tabindex="-1"
+    class="setting-board ui-dialog ui-widget ui-widget-content">
+
+    <div
+        class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+        <span class="ui-dialog-title" id="ui-id-4">
+            <span id="use_backup_title"></span>
+        </span>
+    </div>
+    <div
+        style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+        id="dialog" class="hide ui-dialog-content ui-widget-content">
+
+        <div id="use_backup_date"></div>
+
+        <div class="form-tips" id="use_backup_tips"></div>
+    </div>
+
+    <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
+        <span id="backup-in-progress" style="display: none;"><img src="/red/images/spin.svg" /><span id="use_backup_progress"></span></span>
+		<div class="ui-dialog-buttonset">
+			<button id="btn-systembkp" aria-disabled="false" role="button"	class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only">
+				<span class="ui-button-text"><span id="use_backup_backup"></span></span>
+			</button>
+		</div>
+	</div>
+
+</div>
+
+<script>
+    $("#use_backup_title").html(RED._("settings.use_backup.title"));
+
+<% if(payload) { %>
+    $("#use_backup_date").html(RED._("settings.use_backup.date",{date:"<%=payload%>"}));
+<% } else { %>
+    $("#use_backup_date").html(RED._("settings.use_backup.nodate"));
+<% } %>
+
+    $("#use_backup_tips").html(RED._("settings.use_backup.tips"));
+    $("#use_backup_progress").html(RED._("settings.use_backup.progress"));
+    $("#use_backup_backup").html(RED._("settings.use_backup.update"));
+    
+    
+    $("#btn-systembkp").click(function() {
+        $(".button-reboot").button({disabled: true});
+        $("#btn-systembkp").button({disabled: true});
+        $("#backup-in-progress").css("display", "inherit");
+        $.ajax({
+            url:"/inject/restoreWithRSync",
+            method:"POST",
+            success:function(){
+                $("#backup-in-progress").css("display", "none");
+                $("#btn-systembkp").button({disabled: false});
+                $(".button-reboot").button({disabled: false});
+                RED.notify(RED._("settings.use_backup.success"), "success");
+            }
+        });
+    });
+</script>
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/validatebootnodered.json node-red-src_ttb/ttbsystemflow/validatebootnodered.json
--- node-red-src/ttbsystemflow/validatebootnodered.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/validatebootnodered.json	2017-09-26 15:24:23.172090400 +0000
@@ -0,0 +1,62 @@
+
+    {
+        "id": "f9af42cb.d1d9c",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "validate boot of nodered",
+        "info": "",
+        "x": 150,
+        "y": 3500,
+        "wires": []
+    },
+    {
+        "id": "2e8ecede.953cf2",
+        "type": "inject",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "topic": "",
+        "payload": "",
+        "payloadType": "date",
+        "repeat": "",
+        "crontab": "",
+        "once": true,
+        "x": 100,
+        "y": 3540,
+        "wires": [
+            [
+                "518b00f6.3e23a"
+            ]
+        ]
+    },
+    {
+        "id": "cab885e3.73a6f8",
+        "type": "file",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "filename": "/root/factoryreset/flagboot.txt",
+        "appendNewline": false,
+        "createDir": false,
+        "overwriteFile": "true",
+        "x": 420,
+        "y": 3540,
+        "wires": []
+    },
+    {
+        "id": "518b00f6.3e23a",
+        "type": "set",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "property": "payload",
+        "value": "0",
+        "name": "",
+        "x": 230,
+        "y": 3540,
+        "wires": [
+            [
+                "cab885e3.73a6f8"
+            ]
+        ]
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/wifi.ejs node-red-src_ttb/ttbsystemflow/wifi.ejs
--- node-red-src/ttbsystemflow/wifi.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/wifi.ejs	2017-09-26 15:24:23.286661600 +0000
@@ -0,0 +1,66 @@
+<% if(payload) { %>
+    <div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog"
+        tabindex="-1"
+        class="setting-board ui-dialog ui-widget ui-widget-content">
+
+        <div
+            class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
+            <span class="ui-dialog-title" id="ui-id-4">
+                <span id="wifi_title"></span>
+            </span>
+        </div>
+        <div
+            style="display: block; width: auto; min-height: 26px; max-height: none; height: auto;"
+            id="dialog" class="hide ui-dialog-content ui-widget-content">
+            <form id="wifi-form" class="form-horizontal"
+                action="/handle/wifilist">
+
+                <div id="current-wifi-container"></div>
+
+                <div id="wifilist-container"></div>
+
+                <div class="form-tips note"></div>
+            </form>
+        </div>
+
+
+        <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
+            <div class="ui-dialog-buttonset">
+                <button aria-disabled="false" role="button"
+                    class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"
+                    type="submit" form="wifi-form">
+                    <span class="ui-button-text">OK</span>
+                </button>
+            </div>
+        </div>
+    </div>
+<% } else { %>
+    <style>
+        #wifi-container{
+            padding: -10px;
+            margin: -23px;
+        }
+    </style>
+<% } %>
+
+<script>
+    $("#wifi_title").html(RED._("settings.wifi.title"));
+    
+	$("#current-wifi-container").load("current-wifi");
+	$("#wifilist-container").load("wifilist");
+
+	$('#wifi-form').submit(function(event){
+        var $this = $(this);
+
+        event.preventDefault();
+        $('input[name="usingAJAX"]',this).val( 'true' );
+        var url = $this.attr('action');
+        var dataToSend = $this.serialize();
+        var callback = function(dataReceived){
+            RED.notify(dataReceived,"success");
+        };
+        var typeOfDataToReceive = 'html';
+        $.get( url, dataToSend, callback, typeOfDataToReceive )
+    });
+</script>
+
diff -ruN node-red-src/ttbsystemflow/wifi.json node-red-src_ttb/ttbsystemflow/wifi.json
--- node-red-src/ttbsystemflow/wifi.json	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/wifi.json	2017-09-26 15:24:23.277658200 +0000
@@ -0,0 +1,330 @@
+
+    {
+        "id": "c0453512.f62628",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/wifi",
+        "method": "get",
+        "x": 110,
+        "y": 220,
+        "wires": [
+            [
+                "39a4dfb7.195128"
+            ]
+        ]
+    },
+    {
+        "id": "73aa6c33.6da4a4",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 550,
+        "y": 220,
+        "wires": []
+    },
+    {
+        "id": "362ef41d.9ab2fc",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Wifi",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/wifi.ejs",
+        "reloadfile": true,
+        "x": 430,
+        "y": 220,
+        "wires": [
+            [
+                "73aa6c33.6da4a4"
+            ]
+        ]
+    },
+    {
+        "id": "54359110.d130e",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/current-wifi",
+        "method": "get",
+        "x": 140,
+        "y": 280,
+        "wires": [
+            [
+                "36e76997.97c6f6"
+            ]
+        ]
+    },
+    {
+        "id": "2b419723.74e188",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 630,
+        "y": 280,
+        "wires": []
+    },
+    {
+        "id": "4f8bbb48.77fee4",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Current wifi",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/current_wifi.ejs",
+        "reloadfile": true,
+        "x": 490,
+        "y": 280,
+        "wires": [
+            [
+                "2b419723.74e188"
+            ]
+        ]
+    },
+    {
+        "id": "36e76997.97c6f6",
+        "type": "currentwifi",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 330,
+        "y": 280,
+        "wires": [
+            [
+                "4f8bbb48.77fee4"
+            ]
+        ]
+    },
+    {
+        "id": "db50502a.5e584",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/form/wifilist",
+        "method": "get",
+        "x": 120,
+        "y": 320,
+        "wires": [
+            [
+                "d4c5db0b.0e36"
+            ]
+        ]
+    },
+    {
+        "id": "2ee6b87e.7592d8",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 630,
+        "y": 320,
+        "wires": []
+    },
+    {
+        "id": "d4c5db0b.0e36",
+        "type": "wifilist",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "name",
+        "x": 310,
+        "y": 320,
+        "wires": [
+            [
+                "9c6aa813.6b9c58"
+            ]
+        ]
+    },
+    {
+        "id": "9c6aa813.6b9c58",
+        "type": "file ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "Wifilist",
+        "filename": "/root/thethingbox/node_modules/node-red/flow/wifilist.ejs",
+        "reloadfile": true,
+        "x": 470,
+        "y": 320,
+        "wires": [
+            [
+                "2ee6b87e.7592d8"
+            ]
+        ]
+    },
+    {
+        "id": "43c32049.3d73e",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "WiFi",
+        "info": "",
+        "x": 90,
+        "y": 180,
+        "wires": []
+    },
+    {
+        "id": "39a4dfb7.195128",
+        "type": "exec",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "command": "ifconfig wlan0",
+        "addpay": false,
+        "append": "",
+        "useSpawn": "",
+        "name": "",
+        "x": 280,
+        "y": 220,
+        "wires": [
+            [
+                "362ef41d.9ab2fc"
+            ],
+            [],
+            []
+        ]
+    },
+    {
+        "id": "6b60f68d.24b88",
+        "type": "http in",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "url": "/handle/wifilist",
+        "method": "get",
+        "x": 130,
+        "y": 880,
+        "wires": [
+            [
+                "b747fbd8.bdc73",
+                "706f286a.de1e5"
+            ]
+        ]
+    },
+    {
+        "id": "ab30f5d6.413018",
+        "type": "http response",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "x": 410,
+        "y": 860,
+        "wires": []
+    },
+    {
+        "id": "b747fbd8.bdc73",
+        "type": "function",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "parse query",
+        "func": "\nreturn {\n\tssid: msg.req.query.ssid,\n\tpassword: msg.req.query.password,\n};",
+        "outputs": 1,
+        "x": 310,
+        "y": 900,
+        "wires": [
+            [
+                "4acc5cd8.c439dc"
+            ]
+        ]
+    },
+    {
+        "id": "4c7937b9.7328b",
+        "type": "file",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "write",
+        "filename": "/etc/wpa_supplicant/wpa_supplicant.conf",
+        "appendNewline": false,
+        "overwriteFile": true,
+        "x": 730,
+        "y": 900,
+        "wires": []
+    },
+    {
+        "id": "bb4095b6.e5b9e8",
+        "type": "template",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "field": "",
+        "template": "ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\n\n\nnetwork={\n        ssid=\"{{ssid}}\"\n        key_mgmt=NONE\n}\n",
+        "x": 610,
+        "y": 880,
+        "wires": [
+            [
+                "4c7937b9.7328b"
+            ]
+        ]
+    },
+    {
+        "id": "3795136c.4da07c",
+        "type": "comment",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "WiFi",
+        "info": "",
+        "x": 90,
+        "y": 840,
+        "wires": []
+    },
+    {
+        "id": "4acc5cd8.c439dc",
+        "type": "switch",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "protected ?",
+        "property": "password",
+        "rules": [
+            {
+                "t": "eq",
+                "v": 0,
+                "v2": 0
+            },
+            {
+                "t": "else"
+            }
+        ],
+        "checkall": "false",
+        "outputs": 2,
+        "x": 470,
+        "y": 900,
+        "wires": [
+            [
+                "bb4095b6.e5b9e8"
+            ],
+            [
+                "9a8e982d.f8d8f"
+            ]
+        ]
+    },
+    {
+        "id": "9a8e982d.f8d8f",
+        "type": "template",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "field": "",
+        "template": "ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\n\n\nnetwork={\n        ssid=\"{{ssid}}\"\n        psk=\"{{password}}\"\n        key_mgmt=WPA-PSK\n}",
+        "x": 610,
+        "y": 920,
+        "wires": [
+            [
+                "4c7937b9.7328b"
+            ]
+        ]
+    },
+    {
+        "id": "706f286a.de1e5",
+        "type": "ejs",
+        "z": "system",
+        "origin": "/root/thethingbox/node_modules/node-red/flow/flows.json",
+        "name": "",
+        "ejs": "Request submitted.",
+        "x": 290,
+        "y": 860,
+        "wires": [
+            [
+                "ab30f5d6.413018"
+            ]
+        ]
+    }
\ No newline at end of file
diff -ruN node-red-src/ttbsystemflow/wifilist.ejs node-red-src_ttb/ttbsystemflow/wifilist.ejs
--- node-red-src/ttbsystemflow/wifilist.ejs	1970-01-01 00:00:00.000000000 +0000
+++ node-red-src_ttb/ttbsystemflow/wifilist.ejs	2017-09-26 15:24:23.216395900 +0000
@@ -0,0 +1,24 @@
+<div id="wifilist">
+	
+	<div class="form-row">
+		<label for="wifilist-ssid"><i class="icon-tag"></i>
+			 <span id="wifi_ssid"></span>
+            </label><select id="wifilist-ssid" name="ssid">
+			<% payload.forEach(function(wifi) { %>
+			<option name="<%=wifi.essid%>"> <%=wifi.essid%></option> <%
+			}) %>
+		</select>
+	</div>
+	
+	<div class="form-row">
+		<label for="wifilist-password"><i class="icon-lock"></i>
+            <span id="wifi_password"></span>
+        </label><input id="wifilist-password" type="text" name="password">
+	</div>
+	
+</div>
+
+<script>
+    $("#wifi_ssid").html(RED._("settings.wifi.ssid"));
+    $("#wifi_password").html(RED._("settings.wifi.password"));
+</script>
\ No newline at end of file
